{"name": "Test job cities from the sephora website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bucuresti'...Targu-Mures']] == [['Bucuresti'...Targu-Mures']]\n  At index 1 diff: ['Cluj-Napoca'] != ['Bucuresti']\n  Full diff:\n  - [['Bucuresti'], ['Bucuresti'], ['Cluj-Napoca'], ['Iasi'], ['Targu-Mures']]\n  ?                ---------------\n  + [['Bucuresti'], ['Cluj-Napoca'], ['Craiova'], ['Iasi'], ['Targu-Mures']]\n  ?                                  +++++++++++++", "trace": "self = <test_api.TestScrapers object at 0x7fe11554a2f0>\nsetup_tests = <test_api.SetupTests object at 0x7fe1153cf8e0>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_city(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = sorted(setup_tests.scraped_jobs_data[1])\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = sorted(setup_tests.peviitor_jobs_data[1])\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            print(f\"Expected Results: {job_cities_scraper}\\n\")\n            print(f\"Actual Results: {job_cities_peviitor}\")\n    \n            if job_cities_scraper != job_cities_peviitor:\n>               assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\nE               AssertionError: Peviitor is having extra jobs cities\nE                 \nE                 \nE               assert [['Bucuresti'...Targu-Mures']] == [['Bucuresti'...Targu-Mures']]\nE                 At index 1 diff: ['Cluj-Napoca'] != ['Bucuresti']\nE                 Full diff:\nE                 - [['Bucuresti'], ['Bucuresti'], ['Cluj-Napoca'], ['Iasi'], ['Targu-Mures']]\nE                 ?                ---------------\nE                 + [['Bucuresti'], ['Cluj-Napoca'], ['Craiova'], ['Iasi'], ['Targu-Mures']]\nE                 ?                                  +++++++++++++\n\ntests/test_api.py:115: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1703344460736, "stop": 1703344460736}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1703344460736, "stop": 1703344460736}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bucuresti'...Targu-Mures']] == [['Bucuresti'...Targu-Mures']]\n  At index 1 diff: ['Cluj-Napoca'] != ['Bucuresti']\n  Full diff:\n  - [['Bucuresti'], ['Bucuresti'], ['Cluj-Napoca'], ['Iasi'], ['Targu-Mures']]\n  ?                ---------------\n  + [['Bucuresti'], ['Cluj-Napoca'], ['Craiova'], ['Iasi'], ['Targu-Mures']]\n  ?                                  +++++++++++++\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 115, in test_scrapers_city\n    assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\n"}, "start": 1703344460736, "stop": 1703344460737}], "attachments": [{"name": "stdout", "source": "4e09ca9a-7806-4baf-a498-a067d75276b9-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.sephora.sephoraScraper'>"}], "start": 1703344460736, "stop": 1703344460737, "uuid": "0494d212-9249-479d-8a34-3c11abcfa9ea", "historyId": "208347018728b29ca6a27314c7a516ae", "testCaseId": "de858b72cb7dd414b6682dd3b0adb884", "fullName": "tests.test_api.TestScrapers#test_scrapers_city", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az1381-115"}, {"name": "thread", "value": "1918-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}