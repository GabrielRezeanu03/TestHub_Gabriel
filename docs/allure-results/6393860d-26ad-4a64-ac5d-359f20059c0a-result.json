{"name": "Test job countries from the sephora website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries for the following job titles: ['Beauty Adviser Full Time (8h/zi) - Palas, Iasi']", "trace": "get_job_details = ((['Beauty Adviser Part Time (6h/zi) - Carrefour Orhideea, Bucuresti', 'Beauty Adviser Part Time (4h/zi) - Coresi, Bra...hora', 'sephora', 'sephora', 'sephora', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_sephora_country_api(get_job_details):\n        allure.dynamic.title(f\"Test job countries from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job countries and titles from the scraper\"):\n            job_countries_scraper = scraped_jobs_data[2]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job countries and titles from the Peviitor API\"):\n            job_countries_peviitor = peviitor_jobs_data[2]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job countries from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_countries_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_countries_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_sephora.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f253155b760>\nexpected_countries = ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', ...]\nactual_countries = ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', ...]\njob_titles_scraper = ['Beauty Adviser Part Time (6h/zi) - Carrefour Orhideea, Bucuresti', 'Beauty Adviser Part Time (4h/zi) - Coresi, Braso...i) - Veranda, Bucuresti', 'Beauty Advisor Full Time (8h/zi) - Iulius Mall, Timisoara', 'Beauty Advisor - PITESTI', ...]\napi_job_titles = ['Beauty Adviser Part Time (4h/zi) - Coresi, Brasov', 'Beauty Adviser Part Time (6h/zi) - Baneasa, Bucuresti', 'Beauty...- Iulius Mall, Timisoara', 'Beauty Advisor - PITESTI', 'Beauty Adviser Full Time (8h/zi) - Mall Vitan, Bucuresti', ...]\n\n    def check_job_countries(self, expected_countries, actual_countries, job_titles_scraper, api_job_titles):\n        if not expected_countries:\n            msg = f\"Scraper is not grabbing any job countries\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occured\"\n    \n        # Check job countries from scraper against the peviitor api\n        scraper_actual_countries, scraper_job_titles = self.get_different_items(expected_countries, actual_countries, job_titles_scraper)\n    \n        if scraper_actual_countries:\n            msg = f\"Peviitor is missing job countries for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job countries for the following job titles: ['Beauty Adviser Full Time (8h/zi) - Palas, Iasi']\n\ntests/utils.py:168: AssertionError"}, "steps": [{"name": "Step 1: Get job countries and titles from the scraper", "status": "passed", "start": 1712034679371, "stop": 1712034679371}, {"name": "Step 2: Get job countries and titles from the Peviitor API", "status": "passed", "start": 1712034679371, "stop": 1712034679371}, {"name": "Step 3: Compare job countries from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries for the following job titles: ['Beauty Adviser Full Time (8h/zi) - Palas, Iasi']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_sephora.py\", line 75, in test_sephora_country_api\n    TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 168, in check_job_countries\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "f67ada4e-d99d-4355-8612-7ba939840f03-attachment.attach"}, {"name": "Actual Results", "source": "c88d1885-1f89-4408-b360-c46ccccb4ac7-attachment.attach"}], "start": 1712034679371, "stop": 1712034679371}], "start": 1712034679370, "stop": 1712034679371, "uuid": "da117acc-7150-4804-8f14-ba0d1df06f5d", "historyId": "b812fe3be834778ecb30ea75225e9d75", "testCaseId": "b812fe3be834778ecb30ea75225e9d75", "fullName": "Test_API_Suite.test_sephora#test_sephora_country_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_sephora"}, {"name": "host", "value": "fv-az1428-927"}, {"name": "thread", "value": "1962-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_sephora"}]}