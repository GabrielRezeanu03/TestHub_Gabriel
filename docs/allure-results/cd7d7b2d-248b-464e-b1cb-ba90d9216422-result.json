{"name": "Test job cities from the sephora website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Beauty Adviser Full Time (8h/zi) - Afi Cotroceni, Bucuresti', 'Beauty Adviser Full Time (8h/zi) - Iulius Mall, Cluj', 'Beauty Adviser Full Time (8h/zi) - Carrefour Orhideea, Bucuresti', 'Beauty Advisor Full Time (8h/zi) - Iulius Mall, Timisoara', 'Beauty Advisor - PITESTI', 'Beauty Adviser Full Time (8h/zi) - Mall Vitan, Bucuresti', 'Beauty Adviser Full Time (8h/zi) - Unirea, Bucuresti']", "trace": "get_job_details = ((['Beauty Adviser Part Time (6h/zi) - Galati', 'Beauty Adviser Part Time (6h/zi) - Iulius Mall, Suceava', 'Beauty Adv...hora', 'Sephora', 'Sephora', 'Sephora', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_sephora_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities and titles from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities and titles from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_sephora.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fa358348220>\nexpected_cities = [['Galati'], ['Suceava'], ['Sibiu'], ['Bucuresti'], ['Bucuresti'], ['Targu-Mures'], ...]\nactual_cities = [['Galati'], ['Suceava'], ['Sibiu'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ...]\njob_titles_scraper = ['Beauty Adviser Part Time (6h/zi) - Galati', 'Beauty Adviser Part Time (6h/zi) - Iulius Mall, Suceava', 'Beauty Advis...sti', 'Beauty Adviser Part Time (6h/zi) - Mega Mall, Bucuresti', 'Beauty Adviser Part Time (6h/zi) - Targu Mures', ...]\napi_job_titles = ['Beauty Adviser Part Time (6h/zi) - Galati', 'Beauty Adviser Part Time (6h/zi) - Iulius Mall, Suceava', 'Beauty Advis... Adviser Part Time (6h/zi) - Mega Mall, Bucuresti', 'Beauty Adviser Full Time (8h/zi) - Afi Cotroceni, Bucuresti', ...]\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper, api_job_titles):\n        if not expected_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occurred\"\n    \n        # Check jobs from scraper against the peviitor api\n        scraper_actual_cities, scraper_job_titles = self.get_different_items(expected_cities, actual_cities, job_titles_scraper)\n    \n        if scraper_actual_cities:\n            msg = f\"Peviitor is missing job cities for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job cities for the following job titles: ['Beauty Adviser Full Time (8h/zi) - Afi Cotroceni, Bucuresti', 'Beauty Adviser Full Time (8h/zi) - Iulius Mall, Cluj', 'Beauty Adviser Full Time (8h/zi) - Carrefour Orhideea, Bucuresti', 'Beauty Advisor Full Time (8h/zi) - Iulius Mall, Timisoara', 'Beauty Advisor - PITESTI', 'Beauty Adviser Full Time (8h/zi) - Mall Vitan, Bucuresti', 'Beauty Adviser Full Time (8h/zi) - Unirea, Bucuresti']\n\ntests/utils.py:141: AssertionError"}, "steps": [{"name": "Step 1: Get job cities and titles from the scraper", "status": "passed", "start": 1718860329554, "stop": 1718860329554}, {"name": "Step 2: Get job cities and titles from the Peviitor API", "status": "passed", "start": 1718860329554, "stop": 1718860329554}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Beauty Adviser Full Time (8h/zi) - Afi Cotroceni, Bucuresti', 'Beauty Adviser Full Time (8h/zi) - Iulius Mall, Cluj', 'Beauty Adviser Full Time (8h/zi) - Carrefour Orhideea, Bucuresti', 'Beauty Advisor Full Time (8h/zi) - Iulius Mall, Timisoara', 'Beauty Advisor - PITESTI', 'Beauty Adviser Full Time (8h/zi) - Mall Vitan, Bucuresti', 'Beauty Adviser Full Time (8h/zi) - Unirea, Bucuresti']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_sephora.py\", line 56, in test_sephora_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 141, in check_job_cities\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "fa7bdbf4-93d5-4b57-8967-d1c044794cfc-attachment.attach"}, {"name": "Actual Results", "source": "e243e71a-34b8-41cf-859a-22adc8a6ebd3-attachment.attach"}], "start": 1718860329554, "stop": 1718860329554}], "start": 1718860329554, "stop": 1718860329554, "uuid": "1ab04415-b5f0-47a0-9700-3ed87a62a568", "historyId": "7173b6ee95059911cf9a74acc6cd6b2b", "testCaseId": "7173b6ee95059911cf9a74acc6cd6b2b", "fullName": "Test_API_Suite.test_sephora#test_sephora_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_sephora"}, {"name": "host", "value": "fv-az771-824"}, {"name": "thread", "value": "2178-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_sephora"}]}