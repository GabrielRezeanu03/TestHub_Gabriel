{"name": "Test job cities from the reginamaria website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Specialist Birou Internari', 'Moasa', 'Email Marketing Specialist - Bucuresti', 'Manager Sustenabilitate', 'Intern IT - Proiect Internship CC', 'Reprezentant medical - Divizia Laboratoare', 'Coordonator Operational Dental Bucuresti', 'Customer Success Specialist - Retail', 'Medic Laborator', 'Sales SOHO&SME Specialist', 'Senior User Experience Specialist', 'Senior Graphic Designer - Dental', 'Team Leader Contact Center - Bucuresti', 'Sales Medical Rep - Divizia OG&Stem', 'Coordonator Operational Medicina Muncii', 'Asistent CEO - Dental', 'Account Payable Team Leader', 'Brand Manager - Nativia', '-Asistent-Medical-Spital-', 'Team Leader Operational Policlinica', 'Diagnostic Key Account Sales Manager', 'Specialist Relatia cu Partenerii', 'Medic de Laborator', 'Senior Accountant Specialist - Dental', 'Manager Operational Laboratoare - Regiunea Est', 'Expert Sales Medical Rep - Spital', 'Menajere/ Infirmiere', 'Asistent Medical Radiologie si Imagistica', 'Curier Laborator', 'Consilier Vanzari Retail', 'Diagnostic Key Account Sales Manager', 'Sales Medical Rep – Imagistica', 'Moasa', 'Patient Care Specialist', 'Coordonator Operational Spital', 'Asistent de Laborator Poliana', 'Menajera - Dental', 'Product Manager', 'Asistent Medical Medicina Muncii 1', 'Asistent medical recoltare Poliana', 'Tehnician mentenanta Spital Regina Maria Brasov', 'Asistent Medical Generalist - Policlinica 2', 'Asistent medical spital', 'Medic Radiologie si Imagistica Medicala', 'Specialist Studii Clinice', 'Medic Medicina Generala MM Poliana', 'Asistent medical backup', 'Asistent Medical MM Poliana', 'Reprezentant Sales Support - Stem', 'Patient Advisor Backup', 'Medic Specialist Recuperare Medicala', 'Specialist backoffice medical', 'Reprezentant vanzari Stem backup', 'Specialist laborator Poliana', 'Coordonator Puncte Recoltare - Cluj', 'Asistent Medical Ambulatoriu', 'Asistent medical recoltare -Poliana', 'Medic Stomatolog Brasov', 'Medic Specialist Recuperare Medicala']", "trace": "get_job_details = ((['Specialist Abonamente Corporate - Bucuresti', 'Asistent Medical Generalist - Policlinica', 'Manager Imagistica - C...namaria', 'reginamaria', 'reginamaria', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_reginamaria_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities and titles from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities and titles from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_reginamaria.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fc8fa6913f0>\nexpected_cities = [['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ['Cluj-Napoca'], ['Bucuresti'], ...]\nactual_cities = [['Bucuresti'], ['Constanta'], ['Bucuresti'], ['Brasov'], ['Cluj-Napoca'], ['Bucuresti'], ...]\njob_titles_scraper = ['Specialist Abonamente Corporate - Bucuresti', 'Asistent Medical Generalist - Policlinica', 'Manager Imagistica - Campusul Medical Pallady', 'Asistent Medical Spital', 'Asistent Medical Fiv', 'Asistent Medical Recoltare', ...]\napi_job_titles = ['Economist Trezorerie', 'Key Account Sales Manager', 'Operator date', 'Medici colaboratori - Campus Medical Brasov', 'Specialist Birou Internari', 'Specialist Suport Sisteme & Retea', ...]\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper, api_job_titles):\n        if not expected_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occurred\"\n    \n        # Check jobs from scraper against the peviitor api\n        scraper_actual_cities, scraper_job_titles = self.get_different_items(expected_cities, actual_cities, job_titles_scraper)\n    \n        if scraper_actual_cities:\n            msg = f\"Peviitor is missing job cities for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job cities for the following job titles: ['Specialist Birou Internari', 'Moasa', 'Email Marketing Specialist - Bucuresti', 'Manager Sustenabilitate', 'Intern IT - Proiect Internship CC', 'Reprezentant medical - Divizia Laboratoare', 'Coordonator Operational Dental Bucuresti', 'Customer Success Specialist - Retail', 'Medic Laborator', 'Sales SOHO&SME Specialist', 'Senior User Experience Specialist', 'Senior Graphic Designer - Dental', 'Team Leader Contact Center - Bucuresti', 'Sales Medical Rep - Divizia OG&Stem', 'Coordonator Operational Medicina Muncii', 'Asistent CEO - Dental', 'Account Payable Team Leader', 'Brand Manager - Nativia', '-Asistent-Medical-Spital-', 'Team Leader Operational Policlinica', 'Diagnostic Key Account Sales Manager', 'Specialist Relatia cu Partenerii', 'Medic de Laborator', 'Senior Accountant Specialist - Dental', 'Manager Operational Laboratoare - Regiunea Est', 'Expert Sales Medical Rep - Spital', 'Menajere/ Infirmiere', 'Asistent Medical Radiologie si Imagistica', 'Curier Laborator', 'Consilier Vanzari Retail', 'Diagnostic Key Account Sales Manager', 'Sales Medical Rep – Imagistica', 'Moasa', 'Patient Care Specialist', 'Coordonator Operational Spital', 'Asistent de Laborator Poliana', 'Menajera - Dental', 'Product Manager', 'Asistent Medical Medicina Muncii 1', 'Asistent medical recoltare Poliana', 'Tehnician mentenanta Spital Regina Maria Brasov', 'Asistent Medical Generalist - Policlinica 2', 'Asistent medical spital', 'Medic Radiologie si Imagistica Medicala', 'Specialist Studii Clinice', 'Medic Medicina Generala MM Poliana', 'Asistent medical backup', 'Asistent Medical MM Poliana', 'Reprezentant Sales Support - Stem', 'Patient Advisor Backup', 'Medic Specialist Recuperare Medicala', 'Specialist backoffice medical', 'Reprezentant vanzari Stem backup', 'Specialist laborator Poliana', 'Coordonator Puncte Recoltare - Cluj', 'Asistent Medical Ambulatoriu', 'Asistent medical recoltare -Poliana', 'Medic Stomatolog Brasov', 'Medic Specialist Recuperare Medicala']\n\ntests/utils.py:141: AssertionError"}, "steps": [{"name": "Step 1: Get job cities and titles from the scraper", "status": "passed", "start": 1719378724451, "stop": 1719378724452}, {"name": "Step 2: Get job cities and titles from the Peviitor API", "status": "passed", "start": 1719378724452, "stop": 1719378724452}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Specialist Birou Internari', 'Moasa', 'Email Marketing Specialist - Bucuresti', 'Manager Sustenabilitate', 'Intern IT - Proiect Internship CC', 'Reprezentant medical - Divizia Laboratoare', 'Coordonator Operational Dental Bucuresti', 'Customer Success Specialist - Retail', 'Medic Laborator', 'Sales SOHO&SME Specialist', 'Senior User Experience Specialist', 'Senior Graphic Designer - Dental', 'Team Leader Contact Center - Bucuresti', 'Sales Medical Rep - Divizia OG&Stem', 'Coordonator Operational Medicina Muncii', 'Asistent CEO - Dental', 'Account Payable Team Leader', 'Brand Manager - Nativia', '-Asistent-Medical-Spital-', 'Team Leader Operational Policlinica', 'Diagnostic Key Account Sales Manager', 'Specialist Relatia cu Partenerii', 'Medic de Laborator', 'Senior Accountant Specialist - Dental', 'Manager Operational Laboratoare - Regiunea Est', 'Expert Sales Medical Rep - Spital', 'Menajere/ Infirmiere', 'Asistent Medical Radiologie si Imagistica', 'Curier Laborator', 'Consilier Vanzari Retail', 'Diagnostic Key Account Sales Manager', 'Sales Medical Rep – Imagistica', 'Moasa', 'Patient Care Specialist', 'Coordonator Operational Spital', 'Asistent de Laborator Poliana', 'Menajera - Dental', 'Product Manager', 'Asistent Medical Medicina Muncii 1', 'Asistent medical recoltare Poliana', 'Tehnician mentenanta Spital Regina Maria Brasov', 'Asistent Medical Generalist - Policlinica 2', 'Asistent medical spital', 'Medic Radiologie si Imagistica Medicala', 'Specialist Studii Clinice', 'Medic Medicina Generala MM Poliana', 'Asistent medical backup', 'Asistent Medical MM Poliana', 'Reprezentant Sales Support - Stem', 'Patient Advisor Backup', 'Medic Specialist Recuperare Medicala', 'Specialist backoffice medical', 'Reprezentant vanzari Stem backup', 'Specialist laborator Poliana', 'Coordonator Puncte Recoltare - Cluj', 'Asistent Medical Ambulatoriu', 'Asistent medical recoltare -Poliana', 'Medic Stomatolog Brasov', 'Medic Specialist Recuperare Medicala']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_reginamaria.py\", line 56, in test_reginamaria_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 141, in check_job_cities\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "c44bbf63-97fe-4ed7-9af6-9d1a79344a87-attachment.attach"}, {"name": "Actual Results", "source": "65e29fd1-3442-4cf8-b394-d25e13a8dad9-attachment.attach"}], "start": 1719378724452, "stop": 1719378724452}], "start": 1719378724451, "stop": 1719378724452, "uuid": "20d2f70d-a2eb-48a5-853d-6e03c6bedb0d", "historyId": "f5911873302c974b4dcb4faf17c343ef", "testCaseId": "f5911873302c974b4dcb4faf17c343ef", "fullName": "Test_API_Suite.test_reginamaria#test_reginamaria_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_reginamaria"}, {"name": "host", "value": "fv-az2033-261"}, {"name": "thread", "value": "2189-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_reginamaria"}]}