{"name": "Test job cities from the ppromania website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Cost Controller']", "trace": "get_job_details = ((['Director General Fabrică', 'Director Regional Centru de Servicii', 'Manager de Producție', 'Site Manager', 'Cost C...ontroller-jucu/'], ['ppromania', 'ppromania', 'ppromania', 'ppromania'], ['On-site', 'On-site', 'On-site', 'On-site']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_ppromania_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities and titles from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities and titles from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_ppromania.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f70eaadb2e0>\nexpected_cities = [['Vestul', 'Romaniei'], ['Bucuresti'], ['Dascalu,', 'Ilfov'], ['Cluj'], ['Cluj', '(Jucu)']]\nactual_cities = [['Bucuresti'], ['Dascalu,', 'Ilfov'], ['Cluj'], ['Cluj', '(Jucu)']]\njob_titles_scraper = ['Director General Fabrică', 'Director Regional Centru de Servicii', 'Manager de Producție', 'Site Manager', 'Cost Controller']\napi_job_titles = ['Director Regional Centru de Servicii', 'Manager de Producție', 'Site Manager', 'Cost Controller']\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper, api_job_titles):\n        if not expected_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occurred\"\n    \n        # Check jobs from scraper against the peviitor api\n        scraper_actual_cities, scraper_job_titles = self.get_different_items(expected_cities, actual_cities, job_titles_scraper)\n    \n        if scraper_actual_cities:\n            msg = f\"Peviitor is missing job cities for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job cities for the following job titles: ['Cost Controller']\n\ntests/utils.py:141: AssertionError"}, "steps": [{"name": "Step 1: Get job cities and titles from the scraper", "status": "passed", "start": 1711478038405, "stop": 1711478038405}, {"name": "Step 2: Get job cities and titles from the Peviitor API", "status": "passed", "start": 1711478038405, "stop": 1711478038405}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Cost Controller']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_ppromania.py\", line 56, in test_ppromania_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 141, in check_job_cities\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "548647dc-d283-4a17-9197-79d26f784d17-attachment.attach"}, {"name": "Actual Results", "source": "6a84aeed-3ce3-426a-92cc-63ebcdd73d19-attachment.attach"}], "start": 1711478038405, "stop": 1711478038405}], "start": 1711478038405, "stop": 1711478038406, "uuid": "47e74db2-dee1-4ea7-8850-b333e0cb95ba", "historyId": "d32ed1814ad708cf321b24b7f52d65f8", "testCaseId": "d32ed1814ad708cf321b24b7f52d65f8", "fullName": "Test_API_Suite.test_ppromania#test_ppromania_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_ppromania"}, {"name": "host", "value": "fv-az1114-922"}, {"name": "thread", "value": "1919-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_ppromania"}]}