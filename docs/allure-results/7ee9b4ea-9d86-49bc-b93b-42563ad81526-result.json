{"name": "Test job cities from the autonet website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities: [['Bistrița', 'Constanța', 'Iași'], ['Satu Mare', 'Cluj-Napoca']]", "trace": "get_job_details = ((['Lucrător depozit', 'Reprezentant vânzări', 'Reprezentant vânzări piese camioane', 'Stivuitorist', 'Șef de tură', '...nt_Stivuitorist_-_Turda-min.jpg', 'https://www.autonet-group.ro/pub/media/2023/Posturi/230817_RecInt_RespProdus.jpg']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_autonet_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = sorted(scraped_jobs_data[1])\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = sorted(peviitor_jobs_data[1])\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor)\n\ntests/Test_API_Suite/test_autonet.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f7d8a177010>\nexpected_cities = [['Bacău', 'Baia Mare', 'Constanța', 'Iași', 'Oradea', 'Sibiu', ...], ['Bistrița', 'Constanța', 'Iași'], ['Iași', 'Vaslui', 'Oradea'], ['Moldovenești'], ['Moldovenești'], ['Satu Mare', 'Cluj-Napoca'], ...]\nactual_cities = [['Bacău', 'Baia Mare', 'Constanța', 'Iași', 'Oradea', 'Sibiu', ...], ['Iași', 'Vaslui', 'Oradea'], ['Moldovenești'], ['Târgu Mureș']]\n\n    def check_job_cities(self, expected_cities, actual_cities):\n        missing_cities = self.get_missing_items(expected_cities, actual_cities)\n    \n        if missing_cities:\n            msg = f\"Peviitor is having extra job cities: {missing_cities}\"\n        else:\n            missing_cities = self.get_missing_items(actual_cities, expected_cities)\n            msg = f\"Peviitor is missing job cities: {missing_cities}\"\n    \n        if not expected_cities and not actual_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_cities == actual_cities, msg\nE       AssertionError: Peviitor is having extra job cities: [['Bistrița', 'Constanța', 'Iași'], ['Satu Mare', 'Cluj-Napoca']]\n\ntests/utils.py:114: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1710825039709, "stop": 1710825039709}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1710825039709, "stop": 1710825039709}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities: [['Bistrița', 'Constanța', 'Iași'], ['Satu Mare', 'Cluj-Napoca']]\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_autonet.py\", line 53, in test_autonet_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 114, in check_job_cities\n    assert expected_cities == actual_cities, msg\n"}, "attachments": [{"name": "Expected Results", "source": "0d0c0ab2-e3b2-43e6-b6fc-fc5073b13860-attachment.attach"}, {"name": "Actual Results", "source": "8519407d-84eb-4170-89d6-75b0d202653c-attachment.attach"}], "start": 1710825039709, "stop": 1710825039710}], "start": 1710825039709, "stop": 1710825039710, "uuid": "2cbe71ce-6d17-4433-a513-45ed8903b460", "historyId": "22ac45257c355672d541f0c395bec2a0", "testCaseId": "22ac45257c355672d541f0c395bec2a0", "fullName": "Test_API_Suite.test_autonet#test_autonet_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_autonet"}, {"name": "host", "value": "fv-az1244-502"}, {"name": "thread", "value": "2144-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_autonet"}]}