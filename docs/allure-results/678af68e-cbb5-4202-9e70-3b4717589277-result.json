{"name": "Test job titles from the atpgroup website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Ajutor mecanic Oradea', 'Key account manager regiunea Sud', 'Key account manager regiunea Sud-Vest', 'Key account manager regiunea Vest', 'Maistru service caroserie', 'Mecanic auto service camioane Baia Mare', 'Mecanic auto service camioane Oradea', 'Mecanic auto service turisme Cluj-Napoca', 'Mecanic auto service turisme Oradea', 'Tehnician diagnoză turisme Oradea']", "trace": "get_job_details = ((['Key account manager regiunea Sud', 'Maistru service caroserie', 'Key account manager regiunea Sud-Vest', 'Key acco...oza-turisme-oradea/', 'https://atp-group.ro/cariere/mecanic-auto-service-camioane-baia-mare/', ...]), ([], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_atpgroup_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_atpgroup.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f682f949660>\nexpected_titles = ['Ajutor mecanic Oradea', 'Key account manager regiunea Sud', 'Key account manager regiunea Sud-Vest', 'Key account manager regiunea Vest', 'Maistru service caroserie', 'Mecanic auto service camioane Baia Mare', ...]\nactual_titles = []\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: ['Ajutor mecanic Oradea', 'Key account manager regiunea Sud', 'Key account manager regiunea Sud-Vest', 'Key account manager regiunea Vest', 'Maistru service caroserie', 'Mecanic auto service camioane Baia Mare', 'Mecanic auto service camioane Oradea', 'Mecanic auto service turisme Cluj-Napoca', 'Mecanic auto service turisme Oradea', 'Tehnician diagnoză turisme Oradea']\n\ntests/utils.py:96: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1707250235406, "stop": 1707250235406}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1707250235406, "stop": 1707250235407}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Ajutor mecanic Oradea', 'Key account manager regiunea Sud', 'Key account manager regiunea Sud-Vest', 'Key account manager regiunea Vest', 'Maistru service caroserie', 'Mecanic auto service camioane Baia Mare', 'Mecanic auto service camioane Oradea', 'Mecanic auto service turisme Cluj-Napoca', 'Mecanic auto service turisme Oradea', 'Tehnician diagnoză turisme Oradea']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_atpgroup.py\", line 36, in test_atpgroup_title_api\n    TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 96, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "bbd40b62-41ef-4909-9090-1c49db18911f-attachment.attach"}, {"name": "Actual Results", "source": "9ac24a12-1a80-4f71-a5a3-fa2e0d393a61-attachment.attach"}], "start": 1707250235407, "stop": 1707250235407}], "start": 1707250235406, "stop": 1707250235407, "uuid": "8caf4f94-bc39-419c-a5cf-10f96b20cf38", "historyId": "33ae36462a2bcc885ba4a6a2d604175d", "testCaseId": "33ae36462a2bcc885ba4a6a2d604175d", "fullName": "Test_API_Suite.test_atpgroup#test_atpgroup_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_atpgroup"}, {"name": "host", "value": "fv-az1539-592"}, {"name": "thread", "value": "2137-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_atpgroup"}]}