{"name": "Test job cities from the BitSoftware website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bucuresti'...['Bucuresti']] == [['București'...['București']]\n  At index 0 diff: ['Bucuresti'] != ['București']\n  Full diff:\n  - [['București'], ['București'], ['București'], ['București'], ['București']]\n  ?          ^              ^              ^              ^              ^\n  + [['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti']]\n  ?          ^              ^              ^              ^              ^", "trace": "self = <test_api.TestScrapers object at 0x7f925d4e0430>\nsetup_tests = <test_api.SetupTests object at 0x7f925d222c50>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_city(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = sorted(setup_tests.scraped_jobs_data[1])\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = sorted(setup_tests.peviitor_jobs_data[1])\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            print(f\"Expected Results: {job_cities_scraper}\\n\")\n            print(f\"Actual Results: {job_cities_peviitor}\")\n    \n            if job_cities_scraper != job_cities_peviitor:\n>               assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\nE               AssertionError: Peviitor is having extra jobs cities\nE                 \nE                 \nE               assert [['Bucuresti'...['Bucuresti']] == [['București'...['București']]\nE                 At index 0 diff: ['Bucuresti'] != ['București']\nE                 Full diff:\nE                 - [['București'], ['București'], ['București'], ['București'], ['București']]\nE                 ?          ^              ^              ^              ^              ^\nE                 + [['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti']]\nE                 ?          ^              ^              ^              ^              ^\n\ntests/test_api.py:115: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1705813782821, "stop": 1705813782821}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1705813782821, "stop": 1705813782821}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bucuresti'...['Bucuresti']] == [['București'...['București']]\n  At index 0 diff: ['Bucuresti'] != ['București']\n  Full diff:\n  - [['București'], ['București'], ['București'], ['București'], ['București']]\n  ?          ^              ^              ^              ^              ^\n  + [['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti']]\n  ?          ^              ^              ^              ^              ^\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 115, in test_scrapers_city\n    assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\n"}, "start": 1705813782821, "stop": 1705813782822}], "attachments": [{"name": "stdout", "source": "48c3bae9-5930-4c84-8ef4-8edc10f6934a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.bitsoftware.BitSoftwareScraper'>"}], "start": 1705813782821, "stop": 1705813782822, "uuid": "fd171346-3d98-444e-8578-568f80e62b6d", "historyId": "d8d38c3d2a468667eafdc28dcdcbbab6", "testCaseId": "75f773d8d7bc6573a9e018ca8c499fa6", "fullName": "test_api.TestScrapers#test_scrapers_city", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az1041-953"}, {"name": "thread", "value": "2019-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}