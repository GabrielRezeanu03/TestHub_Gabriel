{"name": "Test job titles from the reginamaria website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Asistent Medical Farmacie - Spital Baneasa', 'Asistent Medical Generalist - Policlinica Fetal Care', 'Asistent Medical Laborator - Laborator Central - LABORATOR', 'Asistent Medical Radiologie si Imagistica', 'Asistent Medical Recoltare - Part-time RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE 2', 'Asistent Medical Spital', 'Biolog - Laborator Regina Maria Baneasa', 'Brancardier', 'Contact Center Manager - Cluj-Napoca', 'Coordonator Operational Cabinete On Site', 'Customer Experience Specialist - Dental', 'Economist Contabil', 'Farmacist - Spital Baneasa', 'Front Desk Specialist', 'Front Desk Specialist - Dental Clinics', 'Front Desk Specialist - Echipa Mobila']", "trace": "get_job_details = ((['Junior Editor Medical', 'Manager Proiecte Speciale - Marketing', 'Customer Success Specialist - Retail', 'Speciali...namaria', 'reginamaria', 'reginamaria', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_reginamaria_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_reginamaria.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f75367c5d50>\nexpected_titles = ['-Asistent-Medical-Spital-', 'Account Payable Team Leader', 'Analist Aplicatii Software', 'Asistent CEO - Dental', 'Asistent Medical - Dental', 'Asistent Medical Ambulatoriu', ...]\nactual_titles = ['-Asistent-Medical-Spital-', 'Account Payable Team Leader', 'Analist Aplicatii Software', 'Asistent CEO - Dental', 'Asistent Medical - Dental', 'Asistent Medical Ambulatoriu', ...]\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: ['Asistent Medical Farmacie - Spital Baneasa', 'Asistent Medical Generalist - Policlinica Fetal Care', 'Asistent Medical Laborator - Laborator Central - LABORATOR', 'Asistent Medical Radiologie si Imagistica', 'Asistent Medical Recoltare - Part-time RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE 2', 'Asistent Medical Spital', 'Biolog - Laborator Regina Maria Baneasa', 'Brancardier', 'Contact Center Manager - Cluj-Napoca', 'Coordonator Operational Cabinete On Site', 'Customer Experience Specialist - Dental', 'Economist Contabil', 'Farmacist - Spital Baneasa', 'Front Desk Specialist', 'Front Desk Specialist - Dental Clinics', 'Front Desk Specialist - Echipa Mobila']\n\ntests/utils.py:124: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1719465201157, "stop": 1719465201157}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1719465201157, "stop": 1719465201157}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Asistent Medical Farmacie - Spital Baneasa', 'Asistent Medical Generalist - Policlinica Fetal Care', 'Asistent Medical Laborator - Laborator Central - LABORATOR', 'Asistent Medical Radiologie si Imagistica', 'Asistent Medical Recoltare - Part-time RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE 2', 'Asistent Medical Spital', 'Biolog - Laborator Regina Maria Baneasa', 'Brancardier', 'Contact Center Manager - Cluj-Napoca', 'Coordonator Operational Cabinete On Site', 'Customer Experience Specialist - Dental', 'Economist Contabil', 'Farmacist - Spital Baneasa', 'Front Desk Specialist', 'Front Desk Specialist - Dental Clinics', 'Front Desk Specialist - Echipa Mobila']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_reginamaria.py\", line 37, in test_reginamaria_title_api\n    TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 124, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "3b7f37c6-3c47-41ba-af19-a97b7fdf0106-attachment.attach"}, {"name": "Actual Results", "source": "82dc325f-3848-44a5-b73c-ac0cb3e1ee81-attachment.attach"}], "start": 1719465201157, "stop": 1719465201158}], "start": 1719465201157, "stop": 1719465201158, "uuid": "e52fc71f-8bd0-4be9-a96d-0b0c3ae516d5", "historyId": "6acf474264a7ac6695694a26154cadcb", "testCaseId": "6acf474264a7ac6695694a26154cadcb", "fullName": "Test_API_Suite.test_reginamaria#test_reginamaria_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_reginamaria"}, {"name": "host", "value": "fv-az1497-619"}, {"name": "thread", "value": "1961-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_reginamaria"}]}