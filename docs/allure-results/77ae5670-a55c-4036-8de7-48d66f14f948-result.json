{"name": "Test job titles from the interbrandsorbico website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Assistant Store Manager IQOS - Caracal', 'Beauty Advisor - Bucuresti', 'Brand Retail Advisor IQOS - ALBA IULIA', 'Brand Retail Advisor IQOS - BLAJ', 'Brand Retail Advisor IQOS - BRAGADIRU', 'Brand Retail Advisor IQOS - BRASOV', 'Brand Retail Advisor IQOS - CARACAL', 'Brand Retail Advisor IQOS - CLUJ', 'Brand Retail Advisor IQOS - Constanta', 'Brand Retail Advisor IQOS - Fagaras', 'Brand Retail Advisor IQOS - GHEORGHENI', 'Brand Retail Advisor IQOS - LUGOJ', 'Brand Retail Advisor IQOS - M. CIUC', 'Brand Retail Advisor IQOS - MANGALIA', 'Brand Retail Advisor IQOS - MORENI', 'Brand Retail Advisor IQOS - NASAUD', 'Brand Retail Advisor IQOS - ODORHEIU SECUIESC', 'Brand Retail Advisor IQOS - ORASTIE', 'Brand Retail Advisor IQOS - RM. SARAT', 'Brand Retail Advisor IQOS - SIBIU']", "trace": "get_job_details = ((['Open Day ASE- Bucuresti - 2024', 'Beauty Advisor - Bucuresti', 'Learning & Development Specialist', 'ORBICO INTERN...nterbrandsOrbico', 'InterbrandsOrbico', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_interbrandsorbico_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_interbrandsorbico.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f7f86757430>\nexpected_titles = ['Assistant Store Manager IQOS - Caracal', 'Beauty Advisor - Bucuresti', 'Brand Retail Advisor IQOS - ALBA IULIA', 'Brand Retail Advisor IQOS - BLAJ', 'Brand Retail Advisor IQOS - BRAGADIRU', 'Brand Retail Advisor IQOS - BRASOV', ...]\nactual_titles = ['Brand Retail Advisor IQOS - Brasov', 'Brand Retail Advisor IQOS - Bucuresti', 'Brand Retail Advisor IQOS - Bucuresti...isor IQOS - Pitesti', 'Brand Retail Advisor IQOS - Sighetu Marmatiei', 'Human Resources Manager - Orbico Moldova', ...]\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: ['Assistant Store Manager IQOS - Caracal', 'Beauty Advisor - Bucuresti', 'Brand Retail Advisor IQOS - ALBA IULIA', 'Brand Retail Advisor IQOS - BLAJ', 'Brand Retail Advisor IQOS - BRAGADIRU', 'Brand Retail Advisor IQOS - BRASOV', 'Brand Retail Advisor IQOS - CARACAL', 'Brand Retail Advisor IQOS - CLUJ', 'Brand Retail Advisor IQOS - Constanta', 'Brand Retail Advisor IQOS - Fagaras', 'Brand Retail Advisor IQOS - GHEORGHENI', 'Brand Retail Advisor IQOS - LUGOJ', 'Brand Retail Advisor IQOS - M. CIUC', 'Brand Retail Advisor IQOS - MANGALIA', 'Brand Retail Advisor IQOS - MORENI', 'Brand Retail Advisor IQOS - NASAUD', 'Brand Retail Advisor IQOS - ODORHEIU SECUIESC', 'Brand Retail Advisor IQOS - ORASTIE', 'Brand Retail Advisor IQOS - RM. SARAT', 'Brand Retail Advisor IQOS - SIBIU']\n\ntests/utils.py:124: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1719378698461, "stop": 1719378698461}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1719378698461, "stop": 1719378698461}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Assistant Store Manager IQOS - Caracal', 'Beauty Advisor - Bucuresti', 'Brand Retail Advisor IQOS - ALBA IULIA', 'Brand Retail Advisor IQOS - BLAJ', 'Brand Retail Advisor IQOS - BRAGADIRU', 'Brand Retail Advisor IQOS - BRASOV', 'Brand Retail Advisor IQOS - CARACAL', 'Brand Retail Advisor IQOS - CLUJ', 'Brand Retail Advisor IQOS - Constanta', 'Brand Retail Advisor IQOS - Fagaras', 'Brand Retail Advisor IQOS - GHEORGHENI', 'Brand Retail Advisor IQOS - LUGOJ', 'Brand Retail Advisor IQOS - M. CIUC', 'Brand Retail Advisor IQOS - MANGALIA', 'Brand Retail Advisor IQOS - MORENI', 'Brand Retail Advisor IQOS - NASAUD', 'Brand Retail Advisor IQOS - ODORHEIU SECUIESC', 'Brand Retail Advisor IQOS - ORASTIE', 'Brand Retail Advisor IQOS - RM. SARAT', 'Brand Retail Advisor IQOS - SIBIU']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_interbrandsorbico.py\", line 37, in test_interbrandsorbico_title_api\n    TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 124, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "05183571-c723-4c72-a14e-8afb2a6d3249-attachment.attach"}, {"name": "Actual Results", "source": "dc5ca6c6-2fc3-417f-8b1d-32297112d417-attachment.attach"}], "start": 1719378698462, "stop": 1719378698462}], "start": 1719378698461, "stop": 1719378698462, "uuid": "71e73249-65f5-47ee-90c4-a358338ac74b", "historyId": "c1b9c4d7fa74c58e239bfccfd3f08027", "testCaseId": "c1b9c4d7fa74c58e239bfccfd3f08027", "fullName": "Test_API_Suite.test_interbrandsorbico#test_interbrandsorbico_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_interbrandsorbico"}, {"name": "host", "value": "fv-az2033-261"}, {"name": "thread", "value": "2192-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_interbrandsorbico"}]}