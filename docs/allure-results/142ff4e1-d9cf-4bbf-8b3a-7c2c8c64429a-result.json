{"name": "Test job links from the ppromania website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job links: ['https://ppromania.ro/job/director-general-fabrica/']", "trace": "get_job_details = ((['Director General Fabrică', 'Director Regional Centru de Servicii', 'Manager de Producție', 'Site Manager', 'Cost C...ger-productie-pet/', 'https://ppromania.ro/job/site-manager-cluj/', 'https://ppromania.ro/job/cost-controller-jucu/']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_ppromania_link_api(get_job_details):\n        allure.dynamic.title(f\"Test job links from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job links from the scraper\"):\n            job_links_scraper = sorted(scraped_jobs_data[3])\n        with allure.step(\"Step 2: Get job links from the Peviitor API\"):\n            job_links_peviitor = sorted(peviitor_jobs_data[3])\n    \n        with allure.step(\"Step 3: Compare job links from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_links_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_links_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_links(job_links_scraper, job_links_peviitor)\n\ntests/Test_API_Suite/test_ppromania.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f366de423e0>\nexpected_links = ['https://ppromania.ro/job/cost-controller-jucu/', 'https://ppromania.ro/job/director-centru-de-servicii-regional/', '...or-general-fabrica/', 'https://ppromania.ro/job/manager-productie-pet/', 'https://ppromania.ro/job/site-manager-cluj/']\nactual_links = ['https://ppromania.ro/job/cost-controller-jucu/', 'https://ppromania.ro/job/director-centru-de-servicii-regional/', 'https://ppromania.ro/job/manager-productie-pet/', 'https://ppromania.ro/job/site-manager-cluj/']\n\n    def check_job_links(self, expected_links, actual_links):\n        missing_links = self.get_missing_items(expected_links, actual_links)\n    \n        if missing_links:\n            msg = f\"Peviitor is having extra job links: {missing_links}\"\n        else:\n            missing_links = self.get_missing_items(actual_links, expected_links)\n            msg = f\"Peviitor is missing job links: {missing_links}\"\n    \n        if not expected_links and not actual_links:\n            msg = f\"Scraper is not grabbing any job links\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_links == actual_links, msg\nE       AssertionError: Peviitor is having extra job links: ['https://ppromania.ro/job/director-general-fabrica/']\n\ntests/utils.py:150: AssertionError"}, "steps": [{"name": "Step 1: Get job links from the scraper", "status": "passed", "start": 1711476621517, "stop": 1711476621517}, {"name": "Step 2: Get job links from the Peviitor API", "status": "passed", "start": 1711476621517, "stop": 1711476621517}, {"name": "Step 3: Compare job links from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job links: ['https://ppromania.ro/job/director-general-fabrica/']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_ppromania.py\", line 85, in test_ppromania_link_api\n    TestUtils().check_job_links(job_links_scraper, job_links_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 150, in check_job_links\n    assert expected_links == actual_links, msg\n"}, "attachments": [{"name": "Expected Results", "source": "0eef7051-a8a6-4946-9777-be7017bc0ec0-attachment.attach"}, {"name": "Actual Results", "source": "b516dda2-32db-48b6-baab-3b4f7f34845f-attachment.attach"}], "start": 1711476621517, "stop": 1711476621517}], "start": 1711476621517, "stop": 1711476621517, "uuid": "5c491d8f-1eb1-4640-871d-03a35d1e5b81", "historyId": "54b8f9eb212d26a4eb2ca358f0212264", "testCaseId": "54b8f9eb212d26a4eb2ca358f0212264", "fullName": "Test_API_Suite.test_ppromania#test_ppromania_link_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_ppromania"}, {"name": "host", "value": "fv-az713-320"}, {"name": "thread", "value": "1954-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_ppromania"}]}