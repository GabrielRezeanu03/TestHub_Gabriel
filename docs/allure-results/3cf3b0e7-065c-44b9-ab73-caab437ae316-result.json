{"name": "Test job titles from the sephora website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having the following extra jobs titles: ['Beauty Adviser Part Time (4h/zi) - Iulius Mall, Suceava', 'Beauty Adviser Part Time (6h/zi) - Iulius Mall, Cluj']\n  \n  \nassert ['Beauty Advi...misoara', ...] == ['Beauty Advi...l, Cluj', ...]\n  At index 2 diff: 'Beauty Adviser Part Time (6h/zi) - Baneasa, Bucuresti' != 'Beauty Adviser Part Time (4h/zi) - Iulius Mall, Suceava'\n  Right contains 2 more items, first extra item: 'DIRECTOR ADJUNCT MAGAZIN - TARGU MURES'\n  Full diff:\n    [\n     'Beauty Adviser Full Time (8h/zi) - Palas, Iasi',\n     'Beauty Adviser Full Time (8h/zi) - Unirea, Bucuresti',\n  -  'Beauty Adviser Part Time (4h/zi) - Iulius Mall, Suceava',\n     'Beauty Adviser Part Time (6h/zi) - Baneasa, Bucuresti',\n     'Beauty Adviser Part Time (6h/zi) - Electroputere, Craiova',\n  -  'Beauty Adviser Part Time (6h/zi) - Iulius Mall, Cluj',\n     'Beauty Adviser Part Time (6h/zi) - Park Lake, Bucuresti',\n     'Beauty Adviser Part Time (6h/zi) - Shopping City, Timisoara',\n     'Beauty Adviser Part Time (6h/zi) - Sun Plaza, Bucuresti',\n     'DIRECTOR ADJUNCT MAGAZIN - TARGU MURES',\n     'STORE MANAGER - VIVO CLUJ',\n    ]", "trace": "self = <test_api.TestScrapers object at 0x7f74c010efb0>\nsetup_tests = <test_api.SetupTests object at 0x7f74bbd14e80>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_title(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(setup_tests.scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(setup_tests.peviitor_jobs_data[0])\n    \n        missing_job_titles = []\n        # Itterate over job titles and if not present on peviitor add to missing job title list\n        for job_title in job_titles_scraper:\n            if job_title not in job_titles_peviitor:\n                missing_job_titles.append(job_title)\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            # If the missing job list is empty it might mean there are more jobs on peviitor than needed\n            if missing_job_titles == []:\n                missing_job_titles_peviitor = []\n                for job_title in job_titles_peviitor:\n                    if job_title not in job_titles_scraper:\n                        missing_job_titles_peviitor.append(job_title)\n    \n                # If there are way too many jobs titles only list a couple of them\n                if len(missing_job_titles_peviitor) > 20:\n                    missing_job_titles_peviitor = f\"{missing_job_titles_peviitor[:5]} and many more\"\n    \n                print(f\"Expected Results: {job_titles_scraper}\\n\")\n                print(f\"Actual Results: {job_titles_peviitor}\")\n>               assert job_titles_scraper == job_titles_peviitor, f\"Peviitor is having the following extra jobs titles: {missing_job_titles_peviitor}\\n\\n\"\nE               AssertionError: Peviitor is having the following extra jobs titles: ['Beauty Adviser Part Time (4h/zi) - Iulius Mall, Suceava', 'Beauty Adviser Part Time (6h/zi) - Iulius Mall, Cluj']\nE                 \nE                 \nE               assert ['Beauty Advi...misoara', ...] == ['Beauty Advi...l, Cluj', ...]\nE                 At index 2 diff: 'Beauty Adviser Part Time (6h/zi) - Baneasa, Bucuresti' != 'Beauty Adviser Part Time (4h/zi) - Iulius Mall, Suceava'\nE                 Right contains 2 more items, first extra item: 'DIRECTOR ADJUNCT MAGAZIN - TARGU MURES'\nE                 Full diff:\nE                   [\nE                    'Beauty Adviser Full Time (8h/zi) - Palas, Iasi',\nE                    'Beauty Adviser Full Time (8h/zi) - Unirea, Bucuresti',\nE                 -  'Beauty Adviser Part Time (4h/zi) - Iulius Mall, Suceava',\nE                    'Beauty Adviser Part Time (6h/zi) - Baneasa, Bucuresti',\nE                    'Beauty Adviser Part Time (6h/zi) - Electroputere, Craiova',\nE                 -  'Beauty Adviser Part Time (6h/zi) - Iulius Mall, Cluj',\nE                    'Beauty Adviser Part Time (6h/zi) - Park Lake, Bucuresti',\nE                    'Beauty Adviser Part Time (6h/zi) - Shopping City, Timisoara',\nE                    'Beauty Adviser Part Time (6h/zi) - Sun Plaza, Bucuresti',\nE                    'DIRECTOR ADJUNCT MAGAZIN - TARGU MURES',\nE                    'STORE MANAGER - VIVO CLUJ',\nE                   ]\n\ntests/test_api.py:87: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1707196161156, "stop": 1707196161156}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1707196161156, "stop": 1707196161156}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having the following extra jobs titles: ['Beauty Adviser Part Time (4h/zi) - Iulius Mall, Suceava', 'Beauty Adviser Part Time (6h/zi) - Iulius Mall, Cluj']\n  \n  \nassert ['Beauty Advi...misoara', ...] == ['Beauty Advi...l, Cluj', ...]\n  At index 2 diff: 'Beauty Adviser Part Time (6h/zi) - Baneasa, Bucuresti' != 'Beauty Adviser Part Time (4h/zi) - Iulius Mall, Suceava'\n  Right contains 2 more items, first extra item: 'DIRECTOR ADJUNCT MAGAZIN - TARGU MURES'\n  Full diff:\n    [\n     'Beauty Adviser Full Time (8h/zi) - Palas, Iasi',\n     'Beauty Adviser Full Time (8h/zi) - Unirea, Bucuresti',\n  -  'Beauty Adviser Part Time (4h/zi) - Iulius Mall, Suceava',\n     'Beauty Adviser Part Time (6h/zi) - Baneasa, Bucuresti',\n     'Beauty Adviser Part Time (6h/zi) - Electroputere, Craiova',\n  -  'Beauty Adviser Part Time (6h/zi) - Iulius Mall, Cluj',\n     'Beauty Adviser Part Time (6h/zi) - Park Lake, Bucuresti',\n     'Beauty Adviser Part Time (6h/zi) - Shopping City, Timisoara',\n     'Beauty Adviser Part Time (6h/zi) - Sun Plaza, Bucuresti',\n     'DIRECTOR ADJUNCT MAGAZIN - TARGU MURES',\n     'STORE MANAGER - VIVO CLUJ',\n    ]\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 87, in test_scrapers_title\n    assert job_titles_scraper == job_titles_peviitor, f\"Peviitor is having the following extra jobs titles: {missing_job_titles_peviitor}\\n\\n\"\n"}, "start": 1707196161156, "stop": 1707196161157}], "attachments": [{"name": "stdout", "source": "65a42a27-5fe6-4c4b-ada0-5f447c4ef1d0-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.sephora.sephoraScraper'>"}], "start": 1707196161156, "stop": 1707196161157, "uuid": "b6ae0dd8-e971-4d9c-ab05-c001329fc0be", "historyId": "80e2c6450c45db6b311d7b9a1784d90f", "testCaseId": "4b62ec59580b850c2662da4323212e24", "fullName": "test_api.TestScrapers#test_scrapers_title", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az1540-37"}, {"name": "thread", "value": "2154-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}