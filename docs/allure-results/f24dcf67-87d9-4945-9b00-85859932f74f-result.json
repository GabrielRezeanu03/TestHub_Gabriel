{"name": "Test job cities from the iuliuscompany website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Economist', 'Funcționar informații clienți', 'Analist financiar', 'Functionar informatii clienti', 'Retail Leasing Specialist']", "trace": "get_job_details = ((['Economist', 'Funcționar informații clienți', 'Analist financiar', 'Functionar informatii clienti', 'Retail Leasing...ta-job/retail-leasing-specialist'], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site']), ([], [], [], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_iuliuscompany_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities and titles from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities and titles from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_iuliuscompany.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f087ba7cee0>\nexpected_cities = [['Cluj-Napoca'], ['Iasi'], ['Iasi'], ['Timisoara'], ['Cluj-Napoca']]\nactual_cities = []\njob_titles_scraper = ['Economist', 'Funcționar informații clienți', 'Analist financiar', 'Functionar informatii clienti', 'Retail Leasing Specialist']\napi_job_titles = []\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper, api_job_titles):\n        if not expected_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occurred\"\n    \n        # Check jobs from scraper against the peviitor api\n        scraper_actual_cities, scraper_job_titles = self.get_different_items(expected_cities, actual_cities, job_titles_scraper)\n    \n        if scraper_actual_cities:\n            msg = f\"Peviitor is missing job cities for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job cities for the following job titles: ['Economist', 'Funcționar informații clienți', 'Analist financiar', 'Functionar informatii clienti', 'Retail Leasing Specialist']\n\ntests/utils.py:141: AssertionError"}, "steps": [{"name": "Step 1: Get job cities and titles from the scraper", "status": "passed", "start": 1718514771919, "stop": 1718514771919}, {"name": "Step 2: Get job cities and titles from the Peviitor API", "status": "passed", "start": 1718514771919, "stop": 1718514771919}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Economist', 'Funcționar informații clienți', 'Analist financiar', 'Functionar informatii clienti', 'Retail Leasing Specialist']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_iuliuscompany.py\", line 56, in test_iuliuscompany_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 141, in check_job_cities\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "2d72be97-5d91-4e66-82c4-ce4360336cbb-attachment.attach"}, {"name": "Actual Results", "source": "9f3c5c9c-e93c-4bf4-ae41-22bdf5f1f271-attachment.attach"}], "start": 1718514771919, "stop": 1718514771919}], "start": 1718514771919, "stop": 1718514771919, "uuid": "3829e15a-4494-4e2b-a3ad-3149f193859e", "historyId": "5375cd3c5f47eddbfe9fa5a756d40491", "testCaseId": "5375cd3c5f47eddbfe9fa5a756d40491", "fullName": "Test_API_Suite.test_iuliuscompany#test_iuliuscompany_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_iuliuscompany"}, {"name": "host", "value": "fv-az835-396"}, {"name": "thread", "value": "2238-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_iuliuscompany"}]}