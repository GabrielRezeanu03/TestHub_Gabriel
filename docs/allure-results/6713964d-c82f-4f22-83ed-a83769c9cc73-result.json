{"name": "Test job cities from the bioclinica website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities: [['Bistrița'], ['Bistrița'], ['Brașov'], ['București'], ['București'], ['București'], ['București'], ['București'], ['Cluj-Napoca'], ['Constanța'], ['Constanța'], ['Deva'], ['Deva'], ['Iași'], ['Petroșani'], ['Sibiu'], ['Sibiu'], ['Sibiu'], ['Sibiu'], ['Sibiu']]", "trace": "get_job_details = ((['Asistent medical de laborator', 'Asistent medical de laborator', 'Asistent medical de laborator/Tehnician de labor...st-petrosani', 'https://bioclinica.ro/compania/cariere/asistent-medical-generalist-constanta', ...]), ([], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_bioclinica_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = sorted(scraped_jobs_data[1])\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = sorted(peviitor_jobs_data[1])\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor)\n\ntests/Test_API_Suite/test_bioclinica.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7feef48badd0>\nexpected_cities = [['Bistrița'], ['Bistrița'], ['Brașov'], ['București'], ['București'], ['București'], ...]\nactual_cities = []\n\n    def check_job_cities(self, expected_cities, actual_cities):\n        missing_cities = self.get_missing_items(expected_cities, actual_cities)\n    \n        if missing_cities:\n            msg = f\"Peviitor is having extra job cities: {missing_cities}\"\n        else:\n            missing_cities = self.get_missing_items(actual_cities, expected_cities)\n            msg = f\"Peviitor is missing job cities: {missing_cities}\"\n    \n        if not expected_cities and not actual_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_cities == actual_cities, msg\nE       AssertionError: Peviitor is having extra job cities: [['Bistrița'], ['Bistrița'], ['Brașov'], ['București'], ['București'], ['București'], ['București'], ['București'], ['Cluj-Napoca'], ['Constanța'], ['Constanța'], ['Deva'], ['Deva'], ['Iași'], ['Petroșani'], ['Sibiu'], ['Sibiu'], ['Sibiu'], ['Sibiu'], ['Sibiu']]\n\ntests/utils.py:114: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1707714638395, "stop": 1707714638395}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1707714638395, "stop": 1707714638395}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities: [['Bistrița'], ['Bistrița'], ['Brașov'], ['București'], ['București'], ['București'], ['București'], ['București'], ['Cluj-Napoca'], ['Constanța'], ['Constanța'], ['Deva'], ['Deva'], ['Iași'], ['Petroșani'], ['Sibiu'], ['Sibiu'], ['Sibiu'], ['Sibiu'], ['Sibiu']]\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_bioclinica.py\", line 53, in test_bioclinica_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 114, in check_job_cities\n    assert expected_cities == actual_cities, msg\n"}, "attachments": [{"name": "Expected Results", "source": "cf2491c8-25a6-440c-8fed-6721de8b7b0c-attachment.attach"}, {"name": "Actual Results", "source": "40c89106-1c0c-4bd4-a0cb-8f4aed0b50ff-attachment.attach"}], "start": 1707714638395, "stop": 1707714638395}], "start": 1707714638395, "stop": 1707714638396, "uuid": "9ca85b35-8cb7-4d08-b307-6ed742fe419f", "historyId": "0459a815c6c3192ff8356892d93845c6", "testCaseId": "0459a815c6c3192ff8356892d93845c6", "fullName": "Test_API_Suite.test_bioclinica#test_bioclinica_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_bioclinica"}, {"name": "host", "value": "fv-az664-757"}, {"name": "thread", "value": "2154-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_bioclinica"}]}