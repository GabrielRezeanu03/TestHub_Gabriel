{"name": "Test job titles from the reginamaria website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Asistent Medical Generalist - Policlinica Fetal Care', 'Asistent Medical Laborator - Laborator Central - LABORATOR', 'Asistent Medical Radiologie si Imagistica', 'Asistent Medical Recoltare - Part-time RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE 2', 'Asistent Medical Spital', 'Biolog - Laborator Regina Maria Baneasa', 'Brancardier', 'Contact Center Manager - Cluj-Napoca', 'Coordonator Operational Cabinete On Site', 'Customer Experience Specialist - Dental', 'Economist Contabil', 'Farmacist - Spital Baneasa', 'Front Desk Specialist', 'Front Desk Specialist - Echipa Mobila', 'Gestionar - Spital Cluj', 'Gestionar Dental']", "trace": "get_job_details = ((['Recruitment Partner', 'Specialist Dispozitive Medicale', 'Receptionist Policlinica Primaverii', 'Receptionist Echi...namaria', 'reginamaria', 'reginamaria', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_reginamaria_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_reginamaria.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f1f86f504c0>\nexpected_titles = ['-Asistent-Medical-Spital-', 'Account Payable Team Leader', 'Analist Aplicatii Software', 'Asistent CEO - Dental', 'Asistent Medical - Dental', 'Asistent Medical Ambulatoriu', ...]\nactual_titles = ['-Asistent-Medical-Spital-', 'Account Payable Team Leader', 'Analist Aplicatii Software', 'Asistent CEO - Dental', 'Asistent Medical - Dental', 'Asistent Medical Ambulatoriu', ...]\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: ['Asistent Medical Generalist - Policlinica Fetal Care', 'Asistent Medical Laborator - Laborator Central - LABORATOR', 'Asistent Medical Radiologie si Imagistica', 'Asistent Medical Recoltare - Part-time RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE 2', 'Asistent Medical Spital', 'Biolog - Laborator Regina Maria Baneasa', 'Brancardier', 'Contact Center Manager - Cluj-Napoca', 'Coordonator Operational Cabinete On Site', 'Customer Experience Specialist - Dental', 'Economist Contabil', 'Farmacist - Spital Baneasa', 'Front Desk Specialist', 'Front Desk Specialist - Echipa Mobila', 'Gestionar - Spital Cluj', 'Gestionar Dental']\n\ntests/utils.py:124: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1718601335043, "stop": 1718601335044}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1718601335044, "stop": 1718601335044}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Asistent Medical Generalist - Policlinica Fetal Care', 'Asistent Medical Laborator - Laborator Central - LABORATOR', 'Asistent Medical Radiologie si Imagistica', 'Asistent Medical Recoltare - Part-time RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE', 'Asistent Medical Recoltare - RECOLTARE 2', 'Asistent Medical Spital', 'Biolog - Laborator Regina Maria Baneasa', 'Brancardier', 'Contact Center Manager - Cluj-Napoca', 'Coordonator Operational Cabinete On Site', 'Customer Experience Specialist - Dental', 'Economist Contabil', 'Farmacist - Spital Baneasa', 'Front Desk Specialist', 'Front Desk Specialist - Echipa Mobila', 'Gestionar - Spital Cluj', 'Gestionar Dental']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_reginamaria.py\", line 37, in test_reginamaria_title_api\n    TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 124, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "f60113d9-853a-4e97-a697-3440920b6c10-attachment.attach"}, {"name": "Actual Results", "source": "505a4bb0-6604-4657-88fb-b106c3ba447c-attachment.attach"}], "start": 1718601335044, "stop": 1718601335044}], "start": 1718601335043, "stop": 1718601335045, "uuid": "17d6d3b4-c549-4e18-8834-957cf2f32cf9", "historyId": "6acf474264a7ac6695694a26154cadcb", "testCaseId": "6acf474264a7ac6695694a26154cadcb", "fullName": "Test_API_Suite.test_reginamaria#test_reginamaria_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_reginamaria"}, {"name": "host", "value": "fv-az1439-924"}, {"name": "thread", "value": "1993-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_reginamaria"}]}