{"name": "Test job cities from the sephora website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bucuresti'...raiova'], ...] == [['Bucuresti'...Napoca'], ...]\n  At index 5 diff: ['Craiova'] != ['Cluj-Napoca']\n  Right contains 2 more items, first extra item: ['Targu-Mures']\n  Full diff:\n    [\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Cluj-Napoca'],\n  -  ['Cluj-Napoca'],\n     ['Craiova'],\n     ['Iasi'],\n  -  ['Suceava'],\n     ['Targu-Mures'],\n     ['Timisoara'],\n    ]", "trace": "self = <test_api.TestScrapers object at 0x7f74c00b8c10>\nsetup_tests = <test_api.SetupTests object at 0x7f74bbd14e80>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_city(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = sorted(setup_tests.scraped_jobs_data[1])\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = sorted(setup_tests.peviitor_jobs_data[1])\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            print(f\"Expected Results: {job_cities_scraper}\\n\")\n            print(f\"Actual Results: {job_cities_peviitor}\")\n    \n            if job_cities_scraper != job_cities_peviitor:\n>               assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\nE               AssertionError: Peviitor is having extra jobs cities\nE                 \nE                 \nE               assert [['Bucuresti'...raiova'], ...] == [['Bucuresti'...Napoca'], ...]\nE                 At index 5 diff: ['Craiova'] != ['Cluj-Napoca']\nE                 Right contains 2 more items, first extra item: ['Targu-Mures']\nE                 Full diff:\nE                   [\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Cluj-Napoca'],\nE                 -  ['Cluj-Napoca'],\nE                    ['Craiova'],\nE                    ['Iasi'],\nE                 -  ['Suceava'],\nE                    ['Targu-Mures'],\nE                    ['Timisoara'],\nE                   ]\n\ntests/test_api.py:116: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1707196161186, "stop": 1707196161186}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1707196161186, "stop": 1707196161186}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bucuresti'...raiova'], ...] == [['Bucuresti'...Napoca'], ...]\n  At index 5 diff: ['Craiova'] != ['Cluj-Napoca']\n  Right contains 2 more items, first extra item: ['Targu-Mures']\n  Full diff:\n    [\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Cluj-Napoca'],\n  -  ['Cluj-Napoca'],\n     ['Craiova'],\n     ['Iasi'],\n  -  ['Suceava'],\n     ['Targu-Mures'],\n     ['Timisoara'],\n    ]\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 116, in test_scrapers_city\n    assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\n"}, "start": 1707196161186, "stop": 1707196161186}], "attachments": [{"name": "stdout", "source": "6560d7ad-a6f9-4531-a4e4-0da890dee98c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.sephora.sephoraScraper'>"}], "start": 1707196161186, "stop": 1707196161187, "uuid": "d318790b-0bf8-4232-9c23-2ea659f26137", "historyId": "fbc46922348d9439f8d0e67606f1480e", "testCaseId": "75f773d8d7bc6573a9e018ca8c499fa6", "fullName": "test_api.TestScrapers#test_scrapers_city", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az1540-37"}, {"name": "thread", "value": "2154-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}