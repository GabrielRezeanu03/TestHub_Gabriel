{"name": "Test job titles from the intelligentbee website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Backend developer', 'Corporate trainer & Quality Analyst, on site Iasi', 'Frontend Developer', 'QA Tester Engineer']", "trace": "get_job_details = ((['Backend developer', 'Frontend Developer', 'QA Tester Engineer', 'Corporate trainer & Quality Analyst, on site Iasi...tbee', 'intelligentbee', 'intelligentbee', ...], ['On-site', 'On-site', 'remote', 'hybrid', 'remote', 'On-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_intelligentbee_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_intelligentbee.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fe144b55ae0>\nexpected_titles = ['2x Middle PHP developer - Symfony/Laravel - remote', 'Affiliate Marketing Account Coordinator', 'Backend developer',...e trainer & Quality Analyst, on site Iasi', 'DATA ENTRY ANALYST (with english and italian)', 'Frontend Developer', ...]\nactual_titles = ['2x Middle PHP developer - Symfony/Laravel - remote', 'Affiliate Marketing Account Coordinator', 'B2B Sales Represent...English and German', 'DATA ENTRY ANALYST (with english and italian)', 'Data Entry Analyst - with German - remote', ...]\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: ['Backend developer', 'Corporate trainer & Quality Analyst, on site Iasi', 'Frontend Developer', 'QA Tester Engineer']\n\ntests/utils.py:124: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1718169073903, "stop": 1718169073903}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1718169073903, "stop": 1718169073903}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Backend developer', 'Corporate trainer & Quality Analyst, on site Iasi', 'Frontend Developer', 'QA Tester Engineer']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_intelligentbee.py\", line 37, in test_intelligentbee_title_api\n    TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 124, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "e7953250-4d2a-449e-8351-7e91760599bb-attachment.attach"}, {"name": "Actual Results", "source": "f9dcffcf-e0f9-454e-87e2-ddcf9242b8a3-attachment.attach"}], "start": 1718169073903, "stop": 1718169073903}], "start": 1718169073903, "stop": 1718169073903, "uuid": "80cab6bf-220d-4e99-bf16-3e17e2c9c4f6", "historyId": "6ed04ffe558954602e3880841cb9607c", "testCaseId": "6ed04ffe558954602e3880841cb9607c", "fullName": "Test_API_Suite.test_intelligentbee#test_intelligentbee_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_intelligentbee"}, {"name": "host", "value": "fv-az2034-334"}, {"name": "thread", "value": "2189-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_intelligentbee"}]}