{"name": "Test job titles from the ppromania website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Manager de Calitate &#8211; industria alimentară']", "trace": "get_job_details = ((['Manager de Calitate &#8211; industria alimentară', 'Cost Controller', 'Director de Transformare', 'Inginer Tehnic ...https://ppromania.ro/job/inginer-service-si-suport-hvac/', 'https://ppromania.ro/job/contabil-cu-experienta-in-sap/']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_ppromania_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_ppromania.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f2d09257b80>\nexpected_titles = ['Contabil cu experiență în SAP', 'Cost Controller', 'Director de Transformare', 'Inginer Service și Suport Tehnic echipamente HVAC', 'Inginer Tehnic Vânzări HVAC', 'Manager de Calitate &#8211; industria alimentară']\nactual_titles = ['Contabil cu experiență în SAP', 'Cost Controller', 'Director de Transformare', 'Inginer Service și Suport Tehnic echipamente HVAC', 'Inginer Tehnic Vânzări HVAC', 'Manager de Calitate – industria alimentară']\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: ['Manager de Calitate &#8211; industria alimentară']\n\ntests/utils.py:96: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1708837896815, "stop": 1708837896815}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1708837896815, "stop": 1708837896815}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Manager de Calitate &#8211; industria alimentară']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_ppromania.py\", line 36, in test_ppromania_title_api\n    TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 96, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "a76f0a90-2e79-4271-828a-e5e25298d47e-attachment.attach"}, {"name": "Actual Results", "source": "e494324c-84d7-44ba-8614-946574981a2d-attachment.attach"}], "start": 1708837896815, "stop": 1708837896816}], "attachments": [{"name": "stderr", "source": "ea3f1a21-e4e1-4d74-8bf6-34c3e46e204b-attachment.txt", "type": "text/plain"}], "start": 1708837896815, "stop": 1708837896816, "uuid": "895dbf3e-661b-4dd6-ac9d-16e06f4c338c", "historyId": "97dac65ab38c269221beae272a42c0f7", "testCaseId": "97dac65ab38c269221beae272a42c0f7", "fullName": "Test_API_Suite.test_ppromania#test_ppromania_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_ppromania"}, {"name": "host", "value": "fv-az1109-796"}, {"name": "thread", "value": "2117-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_ppromania"}]}