{"name": "Test job cities from the intelligentbee website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities for the following job titles: ['Affiliate Marketing Account Coordinator', 'Frontend Developer (Senior) - remote', '2x Middle PHP developer - Symfony/Laravel - remote', 'Recruiter - on site Iasi', 'Technical Support Engineer (Level 1) - Emailing', 'Data Entry Analyst - with German - remote', 'Technical Support Engineer (Level 2) - Features Rollout']", "trace": "get_job_details = ((['Backend developer', 'Frontend Developer', 'QA Tester Engineer', 'Corporate trainer & Quality Analyst, on site Iasi...tbee', 'intelligentbee', 'intelligentbee', ...], ['On-site', 'On-site', 'remote', 'hybrid', 'remote', 'On-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_intelligentbee_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities and titles from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities and titles from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_intelligentbee.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fe144c68ac0>\nexpected_cities = [['Iasi'], ['Iasi'], ['Iasi'], ['Iasi'], ['Iasi'], ['Iasi'], ...]\nactual_cities = [['Iasi'], ['Iasi'], ['Iasi'], ['Iasi'], ['Iasi'], ['Iasi'], ...]\njob_titles_scraper = ['Backend developer', 'Frontend Developer', 'QA Tester Engineer', 'Corporate trainer & Quality Analyst, on site Iasi', 'IT Support Specialist', 'DATA ENTRY ANALYST (with english and italian)', ...]\napi_job_titles = ['Data and Analytics Specialist', 'IT Support Specialist', 'Senior React.JS - remote', 'Team Leader (German&English required) - hybrid', 'JAVA Developer (Middle) - remote', 'DATA ENTRY ANALYST (with english and italian)', ...]\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper, api_job_titles):\n        if not expected_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occurred\"\n    \n        # Check jobs from scraper against the peviitor api\n        scraper_actual_cities, scraper_job_titles = self.get_different_items(expected_cities, actual_cities, job_titles_scraper)\n    \n        if scraper_actual_cities:\n            msg = f\"Peviitor is missing job cities for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n            raise AssertionError(msg)\n        else:\n            # Check jobs from peviitor against the scraper response\n            peviitor_actual_cities, peviitor_job_titles = self.get_different_items(actual_cities, expected_cities, api_job_titles)\n            if peviitor_actual_cities:\n                msg = f\"Peviitor is having extra job cities for the following job titles: {peviitor_job_titles}\"\n                allure.step(msg)\n>               raise AssertionError(msg)\nE               AssertionError: Peviitor is having extra job cities for the following job titles: ['Affiliate Marketing Account Coordinator', 'Frontend Developer (Senior) - remote', '2x Middle PHP developer - Symfony/Laravel - remote', 'Recruiter - on site Iasi', 'Technical Support Engineer (Level 1) - Emailing', 'Data Entry Analyst - with German - remote', 'Technical Support Engineer (Level 2) - Features Rollout']\n\ntests/utils.py:148: AssertionError"}, "steps": [{"name": "Step 1: Get job cities and titles from the scraper", "status": "passed", "start": 1718169073913, "stop": 1718169073913}, {"name": "Step 2: Get job cities and titles from the Peviitor API", "status": "passed", "start": 1718169073913, "stop": 1718169073913}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities for the following job titles: ['Affiliate Marketing Account Coordinator', 'Frontend Developer (Senior) - remote', '2x Middle PHP developer - Symfony/Laravel - remote', 'Recruiter - on site Iasi', 'Technical Support Engineer (Level 1) - Emailing', 'Data Entry Analyst - with German - remote', 'Technical Support Engineer (Level 2) - Features Rollout']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_intelligentbee.py\", line 56, in test_intelligentbee_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 148, in check_job_cities\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "9707b316-e7f7-4392-982d-813950d221ce-attachment.attach"}, {"name": "Actual Results", "source": "36bb169f-c356-4128-a7f4-717d2ad0b28b-attachment.attach"}], "start": 1718169073913, "stop": 1718169073913}], "start": 1718169073913, "stop": 1718169073914, "uuid": "9da8b2f8-6b1a-46ee-9b80-34f3af61ad04", "historyId": "7e702c8d9ecea822f9ea33050d5c9ea4", "testCaseId": "7e702c8d9ecea822f9ea33050d5c9ea4", "fullName": "Test_API_Suite.test_intelligentbee#test_intelligentbee_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_intelligentbee"}, {"name": "host", "value": "fv-az2034-334"}, {"name": "thread", "value": "2189-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_intelligentbee"}]}