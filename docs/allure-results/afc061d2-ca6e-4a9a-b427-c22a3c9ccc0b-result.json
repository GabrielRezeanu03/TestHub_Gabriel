{"name": "Test job countries from the CGM website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries for the following job titles: ['.NET developer', 'Angular Developer', 'Senior .NET Developer', '.NET developer', 'Application Security Engineer (m/w/d)']", "trace": "get_job_details = ((['QA Automation Engineer', 'Senior Frontend Developer (Angular)', 'Senior .NET Developer', 'Senior QA Automation Eng...on-Tester--m-f-d-_JR103633'], ['CGM DELIA S.R.L.', 'CGM', 'CGM', 'CGM'], ['on-site', 'on-site', 'on-site', 'on-site']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_CGM_country_api(get_job_details):\n        allure.dynamic.title(f\"Test job countries from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job countries and titles from the scraper\"):\n            job_countries_scraper = scraped_jobs_data[2]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job countries and titles from the Peviitor API\"):\n            job_countries_peviitor = peviitor_jobs_data[2]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job countries from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_countries_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_countries_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_CGM.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f4de6616f80>\nexpected_countries = ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', ...]\nactual_countries = ['Romania', 'Romania', 'Romania', 'Romania']\njob_titles_scraper = ['QA Automation Engineer', 'Senior Frontend Developer (Angular)', 'Senior .NET Developer', 'Senior QA Automation Engineer', '.NET developer', 'Angular Developer', ...]\napi_job_titles = ['MECANIC AUTO', 'QA Automation Engineer', 'Senior Frontend Developer (Angular)', 'Software Automation Tester (m/f/d)']\n\n    def check_job_countries(self, expected_countries, actual_countries, job_titles_scraper, api_job_titles):\n        if not expected_countries:\n            msg = f\"Scraper is not grabbing any job countries\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occured\"\n    \n        # Check job countries from scraper against the peviitor api\n        scraper_actual_countries, scraper_job_titles = self.get_different_items(expected_countries, actual_countries, job_titles_scraper)\n    \n        if scraper_actual_countries:\n            msg = f\"Peviitor is missing job countries for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job countries for the following job titles: ['.NET developer', 'Angular Developer', 'Senior .NET Developer', '.NET developer', 'Application Security Engineer (m/w/d)']\n\ntests/utils.py:168: AssertionError"}, "steps": [{"name": "Step 1: Get job countries and titles from the scraper", "status": "passed", "start": 1719033072452, "stop": 1719033072452}, {"name": "Step 2: Get job countries and titles from the Peviitor API", "status": "passed", "start": 1719033072452, "stop": 1719033072452}, {"name": "Step 3: Compare job countries from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries for the following job titles: ['.NET developer', 'Angular Developer', 'Senior .NET Developer', '.NET developer', 'Application Security Engineer (m/w/d)']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_CGM.py\", line 75, in test_CGM_country_api\n    TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 168, in check_job_countries\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "5914f686-a370-4b1a-8b63-dcd90a4a3bd2-attachment.attach"}, {"name": "Actual Results", "source": "e29fd56b-5b76-48cf-b7fa-12eadf4bc295-attachment.attach"}], "start": 1719033072452, "stop": 1719033072453}], "start": 1719033072452, "stop": 1719033072453, "uuid": "cd9619e1-dcfa-4807-bc20-fe433d58a15c", "historyId": "5acc0633978bbdebdf56f5f9ab48061c", "testCaseId": "5acc0633978bbdebdf56f5f9ab48061c", "fullName": "Test_API_Suite.test_CGM#test_CGM_country_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_CGM"}, {"name": "host", "value": "fv-az1243-63"}, {"name": "thread", "value": "2236-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_CGM"}]}