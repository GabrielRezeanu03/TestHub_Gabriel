{"name": "Test job cities from the affidearomania website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Brasov'], ...uresti'], ...] == [['Brasov'], ...uresti'], ...]\n  At index 6 diff: ['Bucuresti'] != ['București']\n  Left contains one more item: ['Timisoara']\n  Full diff:\n    [\n     ['Brasov'],\n     ['Brasov'],\n  +  ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['București'],\n     ['București'],\n     ['Cluj-Napoca'],\n     ['Complex Cosmopolis'],\n     ['Oradea'],\n     ['Timisoara'],\n     ['Timisoara'],\n    ]", "trace": "self = <test_api.TestScrapers object at 0x7f44a97849a0>\nsetup_tests = <test_api.SetupTests object at 0x7f44a8942320>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_city(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = sorted(setup_tests.scraped_jobs_data[1])\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = sorted(setup_tests.peviitor_jobs_data[1])\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            print(f\"Expected Results: {job_cities_scraper}\\n\")\n            print(f\"Actual Results: {job_cities_peviitor}\")\n    \n            if job_cities_scraper != job_cities_peviitor:\n>               assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\nE               AssertionError: Peviitor is having extra jobs cities\nE                 \nE                 \nE               assert [['Brasov'], ...uresti'], ...] == [['Brasov'], ...uresti'], ...]\nE                 At index 6 diff: ['Bucuresti'] != ['București']\nE                 Left contains one more item: ['Timisoara']\nE                 Full diff:\nE                   [\nE                    ['Brasov'],\nE                    ['Brasov'],\nE                 +  ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['București'],\nE                    ['București'],\nE                    ['Cluj-Napoca'],\nE                    ['Complex Cosmopolis'],\nE                    ['Oradea'],\nE                    ['Timisoara'],\nE                    ['Timisoara'],\nE                   ]\n\ntests/test_api.py:115: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1704777033966, "stop": 1704777033966}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1704777033966, "stop": 1704777033966}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Brasov'], ...uresti'], ...] == [['Brasov'], ...uresti'], ...]\n  At index 6 diff: ['Bucuresti'] != ['București']\n  Left contains one more item: ['Timisoara']\n  Full diff:\n    [\n     ['Brasov'],\n     ['Brasov'],\n  +  ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['București'],\n     ['București'],\n     ['Cluj-Napoca'],\n     ['Complex Cosmopolis'],\n     ['Oradea'],\n     ['Timisoara'],\n     ['Timisoara'],\n    ]\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 115, in test_scrapers_city\n    assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\n"}, "start": 1704777033966, "stop": 1704777033967}], "attachments": [{"name": "stdout", "source": "f6e3fef5-9f27-4fa2-b05c-288bc258b096-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.affidearomania.affidearomaniaScraper'>"}], "start": 1704777033966, "stop": 1704777033967, "uuid": "7b5173a9-e898-4045-b71a-4ed1d9b91a1b", "historyId": "2ab2012f4a61ae7b81791aa5e4de6e82", "testCaseId": "75f773d8d7bc6573a9e018ca8c499fa6", "fullName": "test_api.TestScrapers#test_scrapers_city", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az652-201"}, {"name": "thread", "value": "2171-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}