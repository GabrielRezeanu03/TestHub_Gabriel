{"name": "Test job links from the allengra website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Scraper is not grabbing any job links", "trace": "get_job_details = (([], [], [], []), ([], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_allengra_link_api(get_job_details):\n        allure.dynamic.title(f\"Test job links from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job links from the scraper\"):\n            job_links_scraper = sorted(scraped_jobs_data[3])\n        with allure.step(\"Step 2: Get job links from the Peviitor API\"):\n            job_links_peviitor = sorted(peviitor_jobs_data[3])\n    \n        with allure.step(\"Step 3: Compare job links from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_links_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_links_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_links(job_links_scraper, job_links_peviitor)\n\ntests/Test_API_Suite/test_allengra.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f261464df60>, expected_links = []\nactual_links = []\n\n    def check_job_links(self, expected_links, actual_links):\n        missing_links = self.get_missing_items(expected_links, actual_links)\n    \n        if missing_links:\n            msg = f\"Peviitor is having extra job links: {missing_links}\"\n        else:\n            missing_links = self.get_missing_items(actual_links, expected_links)\n            msg = f\"Peviitor is missing job links: {missing_links}\"\n    \n        if not expected_links and not actual_links:\n            msg = f\"Scraper is not grabbing any job links\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Scraper is not grabbing any job links\n\ntests/utils.py:147: AssertionError"}, "steps": [{"name": "Step 1: Get job links from the scraper", "status": "passed", "start": 1710738661430, "stop": 1710738661430}, {"name": "Step 2: Get job links from the Peviitor API", "status": "passed", "start": 1710738661430, "stop": 1710738661430}, {"name": "Step 3: Compare job links from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Scraper is not grabbing any job links\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_allengra.py\", line 85, in test_allengra_link_api\n    TestUtils().check_job_links(job_links_scraper, job_links_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 147, in check_job_links\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "d412f0e1-e681-4e57-82ec-3262edecc9e6-attachment.attach"}, {"name": "Actual Results", "source": "a312cfdc-fd8b-4ad8-b696-c08c92cff6f2-attachment.attach"}], "start": 1710738661430, "stop": 1710738661430}], "start": 1710738661430, "stop": 1710738661431, "uuid": "4e8cf2b5-23a2-433a-87da-b1cf98b9f7f3", "historyId": "60d3c6c82607e9b84085d6e9dab9a627", "testCaseId": "60d3c6c82607e9b84085d6e9dab9a627", "fullName": "Test_API_Suite.test_allengra#test_allengra_link_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_allengra"}, {"name": "host", "value": "fv-az1534-326"}, {"name": "thread", "value": "1919-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_allengra"}]}