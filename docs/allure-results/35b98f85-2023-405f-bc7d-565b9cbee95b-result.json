{"name": "Test job titles from the bioclinica website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Asistent medical de laborator', 'Asistent medical de laborator', 'Asistent medical de laborator/Tehnician de laborator clinic', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Biolog', 'Biolog/Chimist/Biochimist', 'Biolog/Chimist/Biochimist', 'Biolog/Chimist/Biochimist', 'Biolog/Chimist/Biochimist', 'Consilier juridic', 'Departament IT', 'Manager zonal']", "trace": "get_job_details = ((['Asistent medical de laborator', 'Asistent medical de laborator', 'Asistent medical de laborator/Tehnician de labor..., ['https://www.anofm.ro/lmvw.html?agentie=ANOFM&categ=3&subcateg=1&id_lmv=2499744'], ['BIOCLINICA SRL'], ['on-site']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_bioclinica_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_bioclinica.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f6836b08d90>\nexpected_titles = ['Asistent medical de laborator', 'Asistent medical de laborator', 'Asistent medical de laborator/Tehnician de laborator clinic', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', ...]\nactual_titles = ['ASISTENT MEDICAL GENERALIST']\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: ['Asistent medical de laborator', 'Asistent medical de laborator', 'Asistent medical de laborator/Tehnician de laborator clinic', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Biolog', 'Biolog/Chimist/Biochimist', 'Biolog/Chimist/Biochimist', 'Biolog/Chimist/Biochimist', 'Biolog/Chimist/Biochimist', 'Consilier juridic', 'Departament IT', 'Manager zonal']\n\ntests/utils.py:124: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1718946852027, "stop": 1718946852027}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1718946852027, "stop": 1718946852027}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Asistent medical de laborator', 'Asistent medical de laborator', 'Asistent medical de laborator/Tehnician de laborator clinic', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Asistent medical generalist', 'Biolog', 'Biolog/Chimist/Biochimist', 'Biolog/Chimist/Biochimist', 'Biolog/Chimist/Biochimist', 'Biolog/Chimist/Biochimist', 'Consilier juridic', 'Departament IT', 'Manager zonal']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_bioclinica.py\", line 37, in test_bioclinica_title_api\n    TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 124, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "57c0c20b-5636-42e2-9221-3acc49fac4cc-attachment.attach"}, {"name": "Actual Results", "source": "56df4e09-26dc-4950-b6fb-80047e2540a8-attachment.attach"}], "start": 1718946852028, "stop": 1718946852028}], "start": 1718946852027, "stop": 1718946852028, "uuid": "a608b3dc-4ea7-42db-beae-03a7d12f179c", "historyId": "4e31e1b91d693f32259866c96f0c4cdb", "testCaseId": "4e31e1b91d693f32259866c96f0c4cdb", "fullName": "Test_API_Suite.test_bioclinica#test_bioclinica_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_bioclinica"}, {"name": "host", "value": "fv-az1978-506"}, {"name": "thread", "value": "2238-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_bioclinica"}]}