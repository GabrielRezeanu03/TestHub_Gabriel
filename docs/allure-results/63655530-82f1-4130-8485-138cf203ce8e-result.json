{"name": "Test job cities from the reginamaria website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities for the following job titles: ['Medic Radiologie si Imagistica Medicala', 'Specialist Studii Clinice', 'Specialist OH - Relatia Cu Clientii Corporate', 'Medic Medicina Generala MM Poliana', 'Asistent medical backup', 'Asistent Medical MM Poliana', 'Reprezentant Sales Support - Stem', 'Patient Advisor Backup', 'Senior Key Account Sales Manager', 'Medic Specialist Recuperare Medicala', 'Senior Key Account Sales Manager', 'Medic Specialist Recuperare Medicala', 'Specialist Retentie si Loializare', 'Digital Marketing Specialist', 'Specialist backoffice medical', 'Specialist laborator - divizia Poliana', 'Reprezentant vanzari Stem backup', 'Specialist laborator Poliana', 'Coordonator Puncte Recoltare - Cluj', 'Receptionist-Poliana', 'Senior Receptionist divizia Poliana', 'Receptionist - divizia Poliana', 'Senior Receptionist divizia Poliana', 'Receptionist - divizia Poliana', 'Asistent medical recoltare -Poliana', 'Medic Medicina Muncii', 'Asistent medical Medicina Muncii-divizia Poliana', 'Asistent Medical Ambulatoriu', 'Asistent medical recoltare -Poliana', 'Medic Stomatolog Brasov', 'Medic Specialist Recuperare Medicala']", "trace": "get_job_details = ((['-Asistent-Medical-Spital-', 'Receptionist part-time Policlinica Orhideea', 'Junior Specialist Servicii Client', 'E...namaria', 'reginamaria', 'reginamaria', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_reginamaria_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities and titles from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities and titles from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_reginamaria.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f26d3b4ea40>\nexpected_cities = [['Cluj-Napoca'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ['Cluj-Napoca'], ['Bucuresti'], ...]\nactual_cities = [['Cluj-Napoca'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ['Cluj-Napoca'], ['Bucuresti'], ...]\njob_titles_scraper = ['-Asistent-Medical-Spital-', 'Receptionist part-time Policlinica Orhideea', 'Junior Specialist Servicii Client', 'Economist Contabil', 'Asistent Medical Medicina Muncii', 'Receptionist Spitale si Policlinici', ...]\napi_job_titles = ['-Asistent-Medical-Spital-', 'Receptionist part-time Policlinica Orhideea', 'Junior Specialist Servicii Client', 'Economist Contabil', 'Asistent Medical Medicina Muncii', 'Receptionist Spitale si Policlinici', ...]\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper, api_job_titles):\n        if not expected_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occurred\"\n    \n        # Check jobs from scraper against the peviitor api\n        scraper_actual_cities, scraper_job_titles = self.get_different_items(expected_cities, actual_cities, job_titles_scraper)\n    \n        if scraper_actual_cities:\n            msg = f\"Peviitor is missing job cities for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n            raise AssertionError(msg)\n        else:\n            # Check jobs from peviitor against the scraper response\n            peviitor_actual_cities, peviitor_job_titles = self.get_different_items(actual_cities, expected_cities, api_job_titles)\n            if peviitor_actual_cities:\n                msg = f\"Peviitor is having extra job cities for the following job titles: {peviitor_job_titles}\"\n                allure.step(msg)\n>               raise AssertionError(msg)\nE               AssertionError: Peviitor is having extra job cities for the following job titles: ['Medic Radiologie si Imagistica Medicala', 'Specialist Studii Clinice', 'Specialist OH - Relatia Cu Clientii Corporate', 'Medic Medicina Generala MM Poliana', 'Asistent medical backup', 'Asistent Medical MM Poliana', 'Reprezentant Sales Support - Stem', 'Patient Advisor Backup', 'Senior Key Account Sales Manager', 'Medic Specialist Recuperare Medicala', 'Senior Key Account Sales Manager', 'Medic Specialist Recuperare Medicala', 'Specialist Retentie si Loializare', 'Digital Marketing Specialist', 'Specialist backoffice medical', 'Specialist laborator - divizia Poliana', 'Reprezentant vanzari Stem backup', 'Specialist laborator Poliana', 'Coordonator Puncte Recoltare - Cluj', 'Receptionist-Poliana', 'Senior Receptionist divizia Poliana', 'Receptionist - divizia Poliana', 'Senior Receptionist divizia Poliana', 'Receptionist - divizia Poliana', 'Asistent medical recoltare -Poliana', 'Medic Medicina Muncii', 'Asistent medical Medicina Muncii-divizia Poliana', 'Asistent Medical Ambulatoriu', 'Asistent medical recoltare -Poliana', 'Medic Stomatolog Brasov', 'Medic Specialist Recuperare Medicala']\n\ntests/utils.py:148: AssertionError"}, "steps": [{"name": "Step 1: Get job cities and titles from the scraper", "status": "passed", "start": 1713074298457, "stop": 1713074298457}, {"name": "Step 2: Get job cities and titles from the Peviitor API", "status": "passed", "start": 1713074298457, "stop": 1713074298457}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities for the following job titles: ['Medic Radiologie si Imagistica Medicala', 'Specialist Studii Clinice', 'Specialist OH - Relatia Cu Clientii Corporate', 'Medic Medicina Generala MM Poliana', 'Asistent medical backup', 'Asistent Medical MM Poliana', 'Reprezentant Sales Support - Stem', 'Patient Advisor Backup', 'Senior Key Account Sales Manager', 'Medic Specialist Recuperare Medicala', 'Senior Key Account Sales Manager', 'Medic Specialist Recuperare Medicala', 'Specialist Retentie si Loializare', 'Digital Marketing Specialist', 'Specialist backoffice medical', 'Specialist laborator - divizia Poliana', 'Reprezentant vanzari Stem backup', 'Specialist laborator Poliana', 'Coordonator Puncte Recoltare - Cluj', 'Receptionist-Poliana', 'Senior Receptionist divizia Poliana', 'Receptionist - divizia Poliana', 'Senior Receptionist divizia Poliana', 'Receptionist - divizia Poliana', 'Asistent medical recoltare -Poliana', 'Medic Medicina Muncii', 'Asistent medical Medicina Muncii-divizia Poliana', 'Asistent Medical Ambulatoriu', 'Asistent medical recoltare -Poliana', 'Medic Stomatolog Brasov', 'Medic Specialist Recuperare Medicala']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_reginamaria.py\", line 56, in test_reginamaria_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 148, in check_job_cities\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "56dc967e-5dc7-4a97-ad3e-022228e744ca-attachment.attach"}, {"name": "Actual Results", "source": "aa8603bb-dd8e-4074-b8ce-8814aec15ba5-attachment.attach"}], "start": 1713074298457, "stop": 1713074298457}], "start": 1713074298456, "stop": 1713074298457, "uuid": "0e00063f-87c0-453c-9149-6da6a32ded40", "historyId": "f5911873302c974b4dcb4faf17c343ef", "testCaseId": "f5911873302c974b4dcb4faf17c343ef", "fullName": "Test_API_Suite.test_reginamaria#test_reginamaria_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_reginamaria"}, {"name": "host", "value": "fv-az982-292"}, {"name": "thread", "value": "1911-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_reginamaria"}]}