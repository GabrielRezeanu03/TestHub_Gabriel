{"name": "Test job cities from the kinetic website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Fizioterapeut', 'Kinetoterapeut', 'Kinetoterapeut copii']", "trace": "get_job_details = ((['Receptionist', 'Fizioterapeut', 'Kinetoterapeut', 'Kinetoterapeut copii'], [['Bucuresti'], ['Bucuresti'], ['Bucure... [['Iasi', 'Bucuresti', 'Cluj-Napoca']], ['Romania'], ['https://www.kinetic.ro/cariere/#1'], ['kinetic'], ['On-site']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_kinetic_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities and titles from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities and titles from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_kinetic.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f9292845b10>\nexpected_cities = [['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti']]\nactual_cities = [['Iasi', 'Bucuresti', 'Cluj-Napoca']]\njob_titles_scraper = ['Receptionist', 'Fizioterapeut', 'Kinetoterapeut', 'Kinetoterapeut copii']\napi_job_titles = ['Receptionist']\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper, api_job_titles):\n        if not expected_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occurred\"\n    \n        # Check jobs from scraper against the peviitor api\n        scraper_actual_cities, scraper_job_titles = self.get_different_items(expected_cities, actual_cities, job_titles_scraper)\n    \n        if scraper_actual_cities:\n            msg = f\"Peviitor is missing job cities for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job cities for the following job titles: ['Fizioterapeut', 'Kinetoterapeut', 'Kinetoterapeut copii']\n\ntests/utils.py:141: AssertionError"}, "steps": [{"name": "Step 1: Get job cities and titles from the scraper", "status": "passed", "start": 1718428340072, "stop": 1718428340072}, {"name": "Step 2: Get job cities and titles from the Peviitor API", "status": "passed", "start": 1718428340072, "stop": 1718428340072}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Fizioterapeut', 'Kinetoterapeut', 'Kinetoterapeut copii']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_kinetic.py\", line 57, in test_kinetic_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 141, in check_job_cities\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "60fc428a-4e9c-437e-8a6d-6d577e7212c7-attachment.attach"}, {"name": "Actual Results", "source": "3ed0e473-7990-4677-861d-8aba3bef45cb-attachment.attach"}], "start": 1718428340072, "stop": 1718428340072}], "start": 1718428340072, "stop": 1718428340072, "uuid": "f5411f89-c9ad-4ee5-ab8c-46c629794f61", "historyId": "8f4430b3e238fdf0bbc2504e168ea2a0", "testCaseId": "8f4430b3e238fdf0bbc2504e168ea2a0", "fullName": "Test_API_Suite.test_kinetic#test_kinetic_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_kinetic"}, {"name": "host", "value": "fv-az1772-154"}, {"name": "thread", "value": "2192-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_kinetic"}]}