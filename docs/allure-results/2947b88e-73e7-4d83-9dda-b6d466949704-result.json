{"name": "Test job cities from the inova website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities for the following job titles: ['AGENT DE VÂNZARI', 'SPECIALIST IN ACHIZITII']", "trace": "get_job_details = ((['Director tehnic', 'Tehnician sisteme securitate – entry level'], [['Oradea'], ['Oradea']], ['Romania', 'Romania'],...nova', 'inova', 'INOVA INTERNATIONAL SRL ', 'INOVA INTERNATIONAL SRL '], ['On-site', 'On-site', 'on-site', 'on-site']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_inova_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities and titles from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities and titles from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_inova.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f9cd518c760>\nexpected_cities = [['Oradea'], ['Oradea']]\nactual_cities = [['Oradea'], ['Oradea'], ['ORADEA'], ['ORADEA']]\njob_titles_scraper = ['Director tehnic', 'Tehnician sisteme securitate – entry level']\napi_job_titles = ['Director tehnic', 'Tehnician sisteme securitate – entry level', 'AGENT DE VÂNZARI', 'SPECIALIST IN ACHIZITII']\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper, api_job_titles):\n        if not expected_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occurred\"\n    \n        # Check jobs from scraper against the peviitor api\n        scraper_actual_cities, scraper_job_titles = self.get_different_items(expected_cities, actual_cities, job_titles_scraper)\n    \n        if scraper_actual_cities:\n            msg = f\"Peviitor is missing job cities for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n            raise AssertionError(msg)\n        else:\n            # Check jobs from peviitor against the scraper response\n            peviitor_actual_cities, peviitor_job_titles = self.get_different_items(actual_cities, expected_cities, api_job_titles)\n            if peviitor_actual_cities:\n                msg = f\"Peviitor is having extra job cities for the following job titles: {peviitor_job_titles}\"\n                allure.step(msg)\n>               raise AssertionError(msg)\nE               AssertionError: Peviitor is having extra job cities for the following job titles: ['AGENT DE VÂNZARI', 'SPECIALIST IN ACHIZITII']\n\ntests/utils.py:148: AssertionError"}, "steps": [{"name": "Step 1: Get job cities and titles from the scraper", "status": "passed", "start": 1718341898797, "stop": 1718341898797}, {"name": "Step 2: Get job cities and titles from the Peviitor API", "status": "passed", "start": 1718341898797, "stop": 1718341898797}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities for the following job titles: ['AGENT DE VÂNZARI', 'SPECIALIST IN ACHIZITII']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_inova.py\", line 56, in test_inova_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 148, in check_job_cities\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "72bde555-5e7a-4089-85af-7177d7fef296-attachment.attach"}, {"name": "Actual Results", "source": "b0be1890-f81b-47da-9b3a-e420c181d113-attachment.attach"}], "start": 1718341898797, "stop": 1718341898797}], "start": 1718341898797, "stop": 1718341898798, "uuid": "b1c2faa4-3df7-4ca0-bbe2-9219689b66bc", "historyId": "410689838dd01ce729ac1f088f780035", "testCaseId": "410689838dd01ce729ac1f088f780035", "fullName": "Test_API_Suite.test_inova#test_inova_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_inova"}, {"name": "host", "value": "fv-az739-599"}, {"name": "thread", "value": "2249-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_inova"}]}