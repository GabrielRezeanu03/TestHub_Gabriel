{"name": "Test job countries from the reginamaria website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job countries for the following titles: ['Medic Radiologie si Imagistica Medicala', 'Specialist Studii Clinice', 'Specialist OH - Relatia Cu Clientii Corporate', 'Medic Medicina Generala MM Poliana', 'Asistent medical backup', 'Asistent Medical MM Poliana', 'Reprezentant Sales Support - Stem', 'Patient Advisor Backup', 'Senior Key Account Sales Manager', 'Medic Specialist Recuperare Medicala', 'Senior Key Account Sales Manager', 'Medic Specialist Recuperare Medicala', 'Specialist Retentie si Loializare', 'Digital Marketing Specialist', 'Specialist backoffice medical', 'Specialist laborator - divizia Poliana', 'Reprezentant vanzari Stem backup', 'Specialist laborator Poliana', 'Coordonator Puncte Recoltare - Cluj', 'Receptionist-Poliana', 'Senior Receptionist divizia Poliana', 'Receptionist - divizia Poliana', 'Senior Receptionist divizia Poliana', 'Receptionist - divizia Poliana', 'Asistent medical recoltare -Poliana', 'Medic Medicina Muncii', 'Asistent medical Medicina Muncii-divizia Poliana', 'Asistent Medical Ambulatoriu', 'Asistent medical recoltare -Poliana', 'Medic Stomatolog Brasov', 'Medic Specialist Recuperare Medicala']", "trace": "get_job_details = ((['Junior Specialist Servicii Client', 'Economist Contabil', 'Asistent Medical Medicina Muncii', 'Receptionist Spital...namaria', 'reginamaria', 'reginamaria', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_reginamaria_country_api(get_job_details):\n        allure.dynamic.title(f\"Test job countries from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job countries and titles from the scraper\"):\n            job_countries_scraper = scraped_jobs_data[2]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job countries and titles from the Peviitor API\"):\n            job_countries_peviitor = peviitor_jobs_data[2]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job countries from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_countries_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_countries_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_reginamaria.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7febbfe6c490>\nexpected_countries = ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', ...]\nactual_countries = ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', ...]\njob_titles_scraper = ['Junior Specialist Servicii Client', 'Economist Contabil', 'Asistent Medical Medicina Muncii', 'Receptionist Spitale si Policlinici', 'Receptionist Policlinica Primaverii', 'Senior Specialist Relatia cu Autoritatile', ...]\napi_job_titles = ['Junior Specialist Servicii Client', 'Economist Contabil', 'Asistent Medical Medicina Muncii', 'Receptionist Spitale si Policlinici', 'Receptionist Policlinica Primaverii', 'Senior Specialist Relatia cu Autoritatile', ...]\n\n    def check_job_countries(self, expected_countries, actual_countries, job_titles_scraper, api_job_titles):\n        if not expected_countries:\n            msg = f\"Scraper is not grabbing any job countries\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occured\"\n    \n        # Check job countries from scraper against the peviitor api\n        scraper_actual_countries, scraper_job_titles = self.get_different_items(expected_countries, actual_countries, job_titles_scraper)\n    \n        if scraper_actual_countries:\n            msg = f\"Peviitor is missing job countries for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n            raise AssertionError(msg)\n        else:\n            # Check job countries from peviitor against the scraper response\n            peviitor_actual_countries, peviitor_job_titles = self.get_different_items(actual_countries, expected_countries, api_job_titles)\n            if peviitor_actual_countries:\n                msg = f\"Peviitor is having extra job countries for the following titles: {peviitor_job_titles}\"\n                allure.step(msg)\n>               raise AssertionError(msg)\nE               AssertionError: Peviitor is having extra job countries for the following titles: ['Medic Radiologie si Imagistica Medicala', 'Specialist Studii Clinice', 'Specialist OH - Relatia Cu Clientii Corporate', 'Medic Medicina Generala MM Poliana', 'Asistent medical backup', 'Asistent Medical MM Poliana', 'Reprezentant Sales Support - Stem', 'Patient Advisor Backup', 'Senior Key Account Sales Manager', 'Medic Specialist Recuperare Medicala', 'Senior Key Account Sales Manager', 'Medic Specialist Recuperare Medicala', 'Specialist Retentie si Loializare', 'Digital Marketing Specialist', 'Specialist backoffice medical', 'Specialist laborator - divizia Poliana', 'Reprezentant vanzari Stem backup', 'Specialist laborator Poliana', 'Coordonator Puncte Recoltare - Cluj', 'Receptionist-Poliana', 'Senior Receptionist divizia Poliana', 'Receptionist - divizia Poliana', 'Senior Receptionist divizia Poliana', 'Receptionist - divizia Poliana', 'Asistent medical recoltare -Poliana', 'Medic Medicina Muncii', 'Asistent medical Medicina Muncii-divizia Poliana', 'Asistent Medical Ambulatoriu', 'Asistent medical recoltare -Poliana', 'Medic Stomatolog Brasov', 'Medic Specialist Recuperare Medicala']\n\ntests/utils.py:175: AssertionError"}, "steps": [{"name": "Step 1: Get job countries and titles from the scraper", "status": "passed", "start": 1712985311448, "stop": 1712985311448}, {"name": "Step 2: Get job countries and titles from the Peviitor API", "status": "passed", "start": 1712985311448, "stop": 1712985311448}, {"name": "Step 3: Compare job countries from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job countries for the following titles: ['Medic Radiologie si Imagistica Medicala', 'Specialist Studii Clinice', 'Specialist OH - Relatia Cu Clientii Corporate', 'Medic Medicina Generala MM Poliana', 'Asistent medical backup', 'Asistent Medical MM Poliana', 'Reprezentant Sales Support - Stem', 'Patient Advisor Backup', 'Senior Key Account Sales Manager', 'Medic Specialist Recuperare Medicala', 'Senior Key Account Sales Manager', 'Medic Specialist Recuperare Medicala', 'Specialist Retentie si Loializare', 'Digital Marketing Specialist', 'Specialist backoffice medical', 'Specialist laborator - divizia Poliana', 'Reprezentant vanzari Stem backup', 'Specialist laborator Poliana', 'Coordonator Puncte Recoltare - Cluj', 'Receptionist-Poliana', 'Senior Receptionist divizia Poliana', 'Receptionist - divizia Poliana', 'Senior Receptionist divizia Poliana', 'Receptionist - divizia Poliana', 'Asistent medical recoltare -Poliana', 'Medic Medicina Muncii', 'Asistent medical Medicina Muncii-divizia Poliana', 'Asistent Medical Ambulatoriu', 'Asistent medical recoltare -Poliana', 'Medic Stomatolog Brasov', 'Medic Specialist Recuperare Medicala']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_reginamaria.py\", line 75, in test_reginamaria_country_api\n    TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 175, in check_job_countries\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "a082027b-ddd8-438a-aefd-643b25646412-attachment.attach"}, {"name": "Actual Results", "source": "d1c40f22-013a-4234-909f-0517db6579dd-attachment.attach"}], "start": 1712985311448, "stop": 1712985311448}], "start": 1712985311447, "stop": 1712985311448, "uuid": "66519976-27dd-4486-bce1-f918971c07ce", "historyId": "439663d7b633b0b1438c9bcc1cddefc6", "testCaseId": "439663d7b633b0b1438c9bcc1cddefc6", "fullName": "Test_API_Suite.test_reginamaria#test_reginamaria_country_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_reginamaria"}, {"name": "host", "value": "fv-az1114-91"}, {"name": "thread", "value": "2170-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_reginamaria"}]}