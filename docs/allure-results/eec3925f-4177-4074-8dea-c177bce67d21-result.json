{"name": "Test job cities from the saladbox website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Alba Iulia...Brasov', ...]] == []\n  Left contains 3 more items, first extra item: ['Alba Iulia', 'Arad', 'Baia Mare', 'Bistrita', 'Braila', 'Brasov', ...]\n  Full diff:\n    [\n  -  ,\n  +  ['Alba Iulia',\n  +   'Arad',\n  +   'Baia Mare',\n  +   'Bistrita',\n  +   'Braila',\n  +   'Brasov',\n  +   'București',\n  +   'Buzău',\n  +   'Cluj',\n  +   'Constanta',\n  +   'Craiova',\n  +   'Deva',\n  +   'Galati',\n  +   'Iasi',\n  +   'Oradea',\n  +   'Piatra-Neamt',\n  +   'Pitesti',\n  +   'Ploiesti',\n  +   'Ramnicu Valcea',\n  +   'Satu Mare',\n  +   'Sibiu',\n  +   'Suceava',\n  +   'Targu Jiu',\n  +   'Targu-Mures',\n  +   'Timisoara'],\n  +  ['Alba Iulia',\n  +   'Arad',\n  +   'Baia Mare',\n  +   'Bistrita',\n  +   'Braila',\n  +   'Brasov',\n  +   'București',\n  +   'Buzău',\n  +   'Cluj',\n  +   'Constanta',\n  +   'Craiova',\n  +   'Deva',\n  +   'Galati',\n  +   'Iasi',\n  +   'Oradea',\n  +   'Piatra-Neamt',\n  +   'Pitesti',\n  +   'Ploiesti',\n  +   'Ramnicu Valcea',\n  +   'Satu Mare',\n  +   'Sibiu',\n  +   'Suceava',\n  +   'Targu Jiu',\n  +   'Targu-Mures',\n  +   'Timisoara'],\n  +  ['Alba Iulia',\n  +   'Arad',\n  +   'Baia Mare',\n  +   'Bistrita',\n  +   'Braila',\n  +   'Brasov',\n  +   'București',\n  +   'Buzău',\n  +   'Cluj',\n  +   'Constanta',\n  +   'Craiova',\n  +   'Deva',\n  +   'Galati',\n  +   'Iasi',\n  +   'Oradea',\n  +   'Piatra-Neamt',\n  +   'Pitesti',\n  +   'Ploiesti',\n  +   'Ramnicu Valcea',\n  +   'Satu Mare',\n  +   'Sibiu',\n  +   'Suceava',\n  +   'Targu Jiu',\n  +   'Targu-Mures',\n  +   'Timisoara'],\n    ]", "trace": "self = <test_api.TestScrapers object at 0x7f3c5d438460>\nsetup_tests = <test_api.SetupTests object at 0x7f3c5d58e230>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_city(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = sorted(setup_tests.scraped_jobs_data[1])\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = sorted(setup_tests.peviitor_jobs_data[1])\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            print(f\"Expected Results: {job_cities_scraper}\\n\")\n            print(f\"Actual Results: {job_cities_peviitor}\")\n    \n            if job_cities_scraper != job_cities_peviitor:\n>               assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\nE               AssertionError: Peviitor is having extra jobs cities\nE                 \nE                 \nE               assert [['Alba Iulia...Brasov', ...]] == []\nE                 Left contains 3 more items, first extra item: ['Alba Iulia', 'Arad', 'Baia Mare', 'Bistrita', 'Braila', 'Brasov', ...]\nE                 Full diff:\nE                   [\nE                 -  ,\nE                 +  ['Alba Iulia',\nE                 +   'Arad',\nE                 +   'Baia Mare',\nE                 +   'Bistrita',\nE                 +   'Braila',\nE                 +   'Brasov',\nE                 +   'București',\nE                 +   'Buzău',\nE                 +   'Cluj',\nE                 +   'Constanta',\nE                 +   'Craiova',\nE                 +   'Deva',\nE                 +   'Galati',\nE                 +   'Iasi',\nE                 +   'Oradea',\nE                 +   'Piatra-Neamt',\nE                 +   'Pitesti',\nE                 +   'Ploiesti',\nE                 +   'Ramnicu Valcea',\nE                 +   'Satu Mare',\nE                 +   'Sibiu',\nE                 +   'Suceava',\nE                 +   'Targu Jiu',\nE                 +   'Targu-Mures',\nE                 +   'Timisoara'],\nE                 +  ['Alba Iulia',\nE                 +   'Arad',\nE                 +   'Baia Mare',\nE                 +   'Bistrita',\nE                 +   'Braila',\nE                 +   'Brasov',\nE                 +   'București',\nE                 +   'Buzău',\nE                 +   'Cluj',\nE                 +   'Constanta',\nE                 +   'Craiova',\nE                 +   'Deva',\nE                 +   'Galati',\nE                 +   'Iasi',\nE                 +   'Oradea',\nE                 +   'Piatra-Neamt',\nE                 +   'Pitesti',\nE                 +   'Ploiesti',\nE                 +   'Ramnicu Valcea',\nE                 +   'Satu Mare',\nE                 +   'Sibiu',\nE                 +   'Suceava',\nE                 +   'Targu Jiu',\nE                 +   'Targu-Mures',\nE                 +   'Timisoara'],\nE                 +  ['Alba Iulia',\nE                 +   'Arad',\nE                 +   'Baia Mare',\nE                 +   'Bistrita',\nE                 +   'Braila',\nE                 +   'Brasov',\nE                 +   'București',\nE                 +   'Buzău',\nE                 +   'Cluj',\nE                 +   'Constanta',\nE                 +   'Craiova',\nE                 +   'Deva',\nE                 +   'Galati',\nE                 +   'Iasi',\nE                 +   'Oradea',\nE                 +   'Piatra-Neamt',\nE                 +   'Pitesti',\nE                 +   'Ploiesti',\nE                 +   'Ramnicu Valcea',\nE                 +   'Satu Mare',\nE                 +   'Sibiu',\nE                 +   'Suceava',\nE                 +   'Targu Jiu',\nE                 +   'Targu-Mures',\nE                 +   'Timisoara'],\nE                   ]\n\ntests/test_api.py:115: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1704776980210, "stop": 1704776980210}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1704776980210, "stop": 1704776980210}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Alba Iulia...Brasov', ...]] == []\n  Left contains 3 more items, first extra item: ['Alba Iulia', 'Arad', 'Baia Mare', 'Bistrita', 'Braila', 'Brasov', ...]\n  Full diff:\n    [\n  -  ,\n  +  ['Alba Iulia',\n  +   'Arad',\n  +   'Baia Mare',\n  +   'Bistrita',\n  +   'Braila',\n  +   'Brasov',\n  +   'București',\n  +   'Buzău',\n  +   'Cluj',\n  +   'Constanta',\n  +   'Craiova',\n  +   'Deva',\n  +   'Galati',\n  +   'Iasi',\n  +   'Oradea',\n  +   'Piatra-Neamt',\n  +   'Pitesti',\n  +   'Ploiesti',\n  +   'Ramnicu Valcea',\n  +   'Satu Mare',\n  +   'Sibiu',\n  +   'Suceava',\n  +   'Targu Jiu',\n  +   'Targu-Mures',\n  +   'Timisoara'],\n  +  ['Alba Iulia',\n  +   'Arad',\n  +   'Baia Mare',\n  +   'Bistrita',\n  +   'Braila',\n  +   'Brasov',\n  +   'București',\n  +   'Buzău',\n  +   'Cluj',\n  +   'Constanta',\n  +   'Craiova',\n  +   'Deva',\n  +   'Galati',\n  +   'Iasi',\n  +   'Oradea',\n  +   'Piatra-Neamt',\n  +   'Pitesti',\n  +   'Ploiesti',\n  +   'Ramnicu Valcea',\n  +   'Satu Mare',\n  +   'Sibiu',\n  +   'Suceava',\n  +   'Targu Jiu',\n  +   'Targu-Mures',\n  +   'Timisoara'],\n  +  ['Alba Iulia',\n  +   'Arad',\n  +   'Baia Mare',\n  +   'Bistrita',\n  +   'Braila',\n  +   'Brasov',\n  +   'București',\n  +   'Buzău',\n  +   'Cluj',\n  +   'Constanta',\n  +   'Craiova',\n  +   'Deva',\n  +   'Galati',\n  +   'Iasi',\n  +   'Oradea',\n  +   'Piatra-Neamt',\n  +   'Pitesti',\n  +   'Ploiesti',\n  +   'Ramnicu Valcea',\n  +   'Satu Mare',\n  +   'Sibiu',\n  +   'Suceava',\n  +   'Targu Jiu',\n  +   'Targu-Mures',\n  +   'Timisoara'],\n    ]\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 115, in test_scrapers_city\n    assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\n"}, "start": 1704776980210, "stop": 1704776980211}], "attachments": [{"name": "stdout", "source": "ee144144-efbd-4dae-b725-2050388577a5-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.saladbox.saladboxScraper'>"}], "start": 1704776980210, "stop": 1704776980211, "uuid": "ce303728-c082-472d-a653-dac5ce58cc59", "historyId": "dca96b1dd2b4ace7e0c0a8cbe0391952", "testCaseId": "75f773d8d7bc6573a9e018ca8c499fa6", "fullName": "test_api.TestScrapers#test_scrapers_city", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az652-201"}, {"name": "thread", "value": "2165-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}