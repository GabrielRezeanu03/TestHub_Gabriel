{"name": "Test job links from the interbrandsorbico website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job links: []", "trace": "get_job_details = ((['Angajatori de top - Bucuresti - Martie 2024', 'Brand Manager Assistant - Beauty', 'Demand and Replenishment Planni...nterbrandsOrbico', 'InterbrandsOrbico', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_interbrandsorbico_link_api(get_job_details):\n        allure.dynamic.title(f\"Test job links from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job links from the scraper\"):\n            job_links_scraper = sorted(scraped_jobs_data[3])\n        with allure.step(\"Step 2: Get job links from the Peviitor API\"):\n            job_links_peviitor = sorted(peviitor_jobs_data[3])\n    \n        with allure.step(\"Step 3: Compare job links from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_links_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_links_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_links(job_links_scraper, job_links_peviitor)\n\ntests/Test_API_Suite/test_interbrandsorbico.py:91: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f483025f2e0>\nexpected_links = ['https://interbrandsorbico.recruitee.com/o/angajatori-de-top-timisoara-martie-2024-2', 'https://interbrandsorbico.rec...-advisor-iqos-bragadiru-2-4', 'https://interbrandsorbico.recruitee.com/o/brand-retail-advisor-iqos-bragadiru-2-5', ...]\nactual_links = ['https://interbrandsorbico.recruitee.com/o/angajatori-de-top-timisoara-martie-2024-2', 'https://interbrandsorbico.rec...advisor-iqos-bragadiru-2-10', 'https://interbrandsorbico.recruitee.com/o/brand-retail-advisor-iqos-bragadiru-2-4', ...]\n\n    def check_job_links(self, expected_links, actual_links):\n        missing_links = self.get_missing_items(expected_links, actual_links)\n    \n        if missing_links:\n            msg = f\"Peviitor is having extra job links: {missing_links}\"\n        else:\n            missing_links = self.get_missing_items(actual_links, expected_links)\n            msg = f\"Peviitor is missing job links: {missing_links}\"\n    \n        if not expected_links and not actual_links:\n            msg = f\"Scraper is not grabbing any job links\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_links == actual_links, msg\nE       AssertionError: Peviitor is missing job links: []\n\ntests/utils.py:223: AssertionError"}, "steps": [{"name": "Step 1: Get job links from the scraper", "status": "passed", "start": 1712725848058, "stop": 1712725848058}, {"name": "Step 2: Get job links from the Peviitor API", "status": "passed", "start": 1712725848058, "stop": 1712725848058}, {"name": "Step 3: Compare job links from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job links: []\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_interbrandsorbico.py\", line 91, in test_interbrandsorbico_link_api\n    TestUtils().check_job_links(job_links_scraper, job_links_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 223, in check_job_links\n    assert expected_links == actual_links, msg\n"}, "attachments": [{"name": "Expected Results", "source": "11a43b50-03d7-48a5-8135-9a97b7eab10a-attachment.attach"}, {"name": "Actual Results", "source": "89319c04-3ac4-42e2-915a-769473266cd5-attachment.attach"}], "start": 1712725848058, "stop": 1712725848059}], "start": 1712725848058, "stop": 1712725848059, "uuid": "37756645-342d-47eb-9c72-6a29c89339de", "historyId": "d4bfe2e73ab501f0a9d533d36059c8de", "testCaseId": "d4bfe2e73ab501f0a9d533d36059c8de", "fullName": "Test_API_Suite.test_interbrandsorbico#test_interbrandsorbico_link_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_interbrandsorbico"}, {"name": "host", "value": "fv-az803-710"}, {"name": "thread", "value": "2143-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_interbrandsorbico"}]}