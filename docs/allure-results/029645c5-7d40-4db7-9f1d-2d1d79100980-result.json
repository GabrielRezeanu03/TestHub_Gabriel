{"name": "Test job countries from the signaliduna website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries for the following job titles: ['Front Desk Receptionist']", "trace": "get_job_details = ((['Consultant Suport Clienti', 'Subscriitor de Raspundere Civila / Bunuri', 'Subscriitor junior', 'Corporate Broker M...na', 'Signaliduna', 'Signaliduna', 'Signaliduna'], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_signaliduna_country_api(get_job_details):\n        allure.dynamic.title(f\"Test job countries from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job countries and titles from the scraper\"):\n            job_countries_scraper = scraped_jobs_data[2]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job countries and titles from the Peviitor API\"):\n            job_countries_peviitor = peviitor_jobs_data[2]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job countries from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_countries_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_countries_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_signaliduna.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f4db598f3d0>\nexpected_countries = ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', ...]\nactual_countries = ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania']\njob_titles_scraper = ['Consultant Suport Clienti', 'Subscriitor de Raspundere Civila / Bunuri', 'Subscriitor junior', 'Corporate Broker Manager', 'Marketing Specialist', 'Corporate Healthcare Manager', ...]\napi_job_titles = ['Consultant Suport Clienti', 'Subscriitor de Raspundere Civila / Bunuri', 'Subscriitor junior', 'Corporate Broker Manager', 'Marketing Specialist', 'Corporate Healthcare Manager']\n\n    def check_job_countries(self, expected_countries, actual_countries, job_titles_scraper, api_job_titles):\n        if not expected_countries:\n            msg = f\"Scraper is not grabbing any job countries\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occured\"\n    \n        # Check job countries from scraper against the peviitor api\n        scraper_actual_countries, scraper_job_titles = self.get_different_items(expected_countries, actual_countries, job_titles_scraper)\n    \n        if scraper_actual_countries:\n            msg = f\"Peviitor is missing job countries for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job countries for the following job titles: ['Front Desk Receptionist']\n\ntests/utils.py:168: AssertionError"}, "steps": [{"name": "Step 1: Get job countries and titles from the scraper", "status": "passed", "start": 1719033229353, "stop": 1719033229353}, {"name": "Step 2: Get job countries and titles from the Peviitor API", "status": "passed", "start": 1719033229353, "stop": 1719033229353}, {"name": "Step 3: Compare job countries from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries for the following job titles: ['Front Desk Receptionist']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_signaliduna.py\", line 75, in test_signaliduna_country_api\n    TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 168, in check_job_countries\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "446fd6c2-da20-4dc5-8da2-035d1a10a87e-attachment.attach"}, {"name": "Actual Results", "source": "8b3226d0-39eb-46e6-b516-95e2becb8545-attachment.attach"}], "start": 1719033229353, "stop": 1719033229353}], "start": 1719033229353, "stop": 1719033229353, "uuid": "7f174593-b1fa-4642-8ac6-da49674e765d", "historyId": "863c5df26c103bc6e66063c5879b8585", "testCaseId": "863c5df26c103bc6e66063c5879b8585", "fullName": "Test_API_Suite.test_signaliduna#test_signaliduna_country_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_signaliduna"}, {"name": "host", "value": "fv-az1243-63"}, {"name": "thread", "value": "2239-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_signaliduna"}]}