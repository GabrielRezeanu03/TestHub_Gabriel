{"name": "Test job countries from the Nagarro website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job countries\n  \n  \nassert ['Romania', '...Romania', ...] == ['România', '...România', ...]\n  At index 0 diff: 'Romania' != 'România'\n  Full diff:\n    [\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n    ]", "trace": "self = <test_api.TestScrapers object at 0x7fe250e06b90>\nsetup_tests = <test_api.SetupTests object at 0x7fe250f56cb0>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_country(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job countries from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job countries from the scraper\"):\n            job_countries_scraper = sorted(setup_tests.scraped_jobs_data[2])\n    \n        with allure.step(\"Step 2: Get job countries from the Peviitor API\"):\n            job_countries_peviitor = sorted(setup_tests.peviitor_jobs_data[2])\n    \n        with allure.step(\"Step 3: Compare job countries from scraper response against Peviitor API Response\"):\n            print(f\"Expected Results: {job_countries_scraper}\\n\")\n            print(f\"Actual Results: {job_countries_peviitor}\")\n            if job_countries_scraper != job_countries_peviitor:\n>               assert job_countries_scraper == job_countries_peviitor, f\"Peviitor is having extra job countries\\n\\n\"\nE               AssertionError: Peviitor is having extra job countries\nE                 \nE                 \nE               assert ['Romania', '...Romania', ...] == ['România', '...România', ...]\nE                 At index 0 diff: 'Romania' != 'România'\nE                 Full diff:\nE                   [\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                 -  'România',\nE                 ?      ^\nE                 +  'Romania',\nE                 ?      ^\nE                   ]\n\ntests/test_api.py:137: AssertionError"}, "steps": [{"name": "Step 1: Get job countries from the scraper", "status": "passed", "start": 1703305178090, "stop": 1703305178090}, {"name": "Step 2: Get job countries from the Peviitor API", "status": "passed", "start": 1703305178090, "stop": 1703305178090}, {"name": "Step 3: Compare job countries from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job countries\n  \n  \nassert ['Romania', '...Romania', ...] == ['România', '...România', ...]\n  At index 0 diff: 'Romania' != 'România'\n  Full diff:\n    [\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n    ]\n", "trace": "  File \"/home/runner/work/JobsScrapers/JobsScrapers/tests/test_api.py\", line 137, in test_scrapers_country\n    assert job_countries_scraper == job_countries_peviitor, f\"Peviitor is having extra job countries\\n\\n\"\n"}, "start": 1703305178090, "stop": 1703305178100}], "attachments": [{"name": "stdout", "source": "5903cddd-39c7-47cf-92c0-fe71636f5d3c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.nagarro.NagarroScraper'>"}], "start": 1703305178090, "stop": 1703305178100, "uuid": "08fac1eb-14bf-4fbd-b01c-67f60ca31583", "historyId": "530a06d7f0073d34aeace0c5d68f1826", "testCaseId": "220e543539d71e666c936b3b389140f9", "fullName": "tests.test_api.TestScrapers#test_scrapers_country", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az1537-803"}, {"name": "thread", "value": "2204-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}