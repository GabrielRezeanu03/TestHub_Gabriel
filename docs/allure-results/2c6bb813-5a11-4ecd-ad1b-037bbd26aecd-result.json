{"name": "Test job links from the intelligentbee website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job links: ['https://intelligentbee.com/job/backend-developer', 'https://intelligentbee.com/job/corporate-trainer-and-quality-analyst-on-site-iasi', 'https://intelligentbee.com/job/frontend-developer', 'https://intelligentbee.com/job/qa-tester-engineer']", "trace": "get_job_details = ((['Backend developer', 'Frontend Developer', 'QA Tester Engineer', 'Corporate trainer & Quality Analyst, on site Iasi...['intelligentbee', 'intelligentbee', 'intelligentbee', 'intelligentbee'], ['On-site', 'On-site', 'On-site', 'remote']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_intelligentbee_link_api(get_job_details):\n        allure.dynamic.title(f\"Test job links from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job links from the scraper\"):\n            job_links_scraper = sorted(scraped_jobs_data[3])\n        with allure.step(\"Step 2: Get job links from the Peviitor API\"):\n            job_links_peviitor = sorted(peviitor_jobs_data[3])\n    \n        with allure.step(\"Step 3: Compare job links from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_links_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_links_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_links(job_links_scraper, job_links_peviitor)\n\ntests/Test_API_Suite/test_intelligentbee.py:91: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f7ae8c50ac0>\nexpected_links = ['https://intelligentbee.com/job/affiliate-marketing-account-coordinator', 'https://intelligentbee.com/job/backend-dev...ian', 'https://intelligentbee.com/job/frontend-developer', 'https://intelligentbee.com/job/it-support-specialist', ...]\nactual_links = ['https://intelligentbee.com/job/affiliate-marketing-account-coordinator', 'https://intelligentbee.com/job/data-entry-...//intelligentbee.com/job/it-support-specialist', 'https://intelligentbee.com/job/php-developer-middle-symfony-laravel']\n\n    def check_job_links(self, expected_links, actual_links):\n        missing_links = self.get_missing_items(expected_links, actual_links)\n    \n        if missing_links:\n            msg = f\"Peviitor is having extra job links: {missing_links}\"\n        else:\n            missing_links = self.get_missing_items(actual_links, expected_links)\n            msg = f\"Peviitor is missing job links: {missing_links}\"\n    \n        if not expected_links and not actual_links:\n            msg = f\"Scraper is not grabbing any job links\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_links == actual_links, msg\nE       AssertionError: Peviitor is having extra job links: ['https://intelligentbee.com/job/backend-developer', 'https://intelligentbee.com/job/corporate-trainer-and-quality-analyst-on-site-iasi', 'https://intelligentbee.com/job/frontend-developer', 'https://intelligentbee.com/job/qa-tester-engineer']\n\ntests/utils.py:223: AssertionError"}, "steps": [{"name": "Step 1: Get job links from the scraper", "status": "passed", "start": 1719119469539, "stop": 1719119469539}, {"name": "Step 2: Get job links from the Peviitor API", "status": "passed", "start": 1719119469539, "stop": 1719119469539}, {"name": "Step 3: Compare job links from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job links: ['https://intelligentbee.com/job/backend-developer', 'https://intelligentbee.com/job/corporate-trainer-and-quality-analyst-on-site-iasi', 'https://intelligentbee.com/job/frontend-developer', 'https://intelligentbee.com/job/qa-tester-engineer']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_intelligentbee.py\", line 91, in test_intelligentbee_link_api\n    TestUtils().check_job_links(job_links_scraper, job_links_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 223, in check_job_links\n    assert expected_links == actual_links, msg\n"}, "attachments": [{"name": "Expected Results", "source": "16a95dc2-7f68-4a3c-bb85-b85ebb94973e-attachment.attach"}, {"name": "Actual Results", "source": "034f7756-4278-44a2-bd69-34360bcb4571-attachment.attach"}], "start": 1719119469539, "stop": 1719119469539}], "start": 1719119469539, "stop": 1719119469539, "uuid": "5e5cdff0-f0ad-4f3a-aed6-8e1c7811ac9f", "historyId": "59c4fde92755c47ebdd54256410410f7", "testCaseId": "59c4fde92755c47ebdd54256410410f7", "fullName": "Test_API_Suite.test_intelligentbee#test_intelligentbee_link_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_intelligentbee"}, {"name": "host", "value": "fv-az1486-994"}, {"name": "thread", "value": "2214-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_intelligentbee"}]}