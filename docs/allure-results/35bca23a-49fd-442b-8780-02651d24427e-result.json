{"name": "Test job titles from the nielseniq website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing the following job titles: ['FMCG Account Development Manager – Central Europe']\n  \n  \nassert ['Account Dev...cialist', ...] == ['Account Dev...cialist', ...]\n  At index 6 diff: 'FMCG Account Development Manager – Central Europe' != 'FP&A Analyst'\n  Left contains 2 more items, first extra item: 'Modelling Analyst'\n  Full diff:\n    [\n     'Account Developmnent',\n     'Client Service Executive (full time, hybrid)',\n     'Collections Associate with Polish',\n     'Collections Associate with Polish',\n     'Credit Controller with Polish',\n     'Data Processing Specialist',\n  +  'FMCG Account Development Manager – Central Europe',\n     'FP&A Analyst',\n     'Financial Analyst',\n  +  'Junior Client Service Consultant (full time, hybrid)',\n     'Junior Client Service Consultant (full time, hybrid)',\n     'Junior Financial Analyst',\n     'Modelling Analyst',\n     'Regional Sales Acceleration Leader, EEMEA',\n    ]", "trace": "self = <test_api.TestScrapers object at 0x7f4d28066860>\nsetup_tests = <test_api.SetupTests object at 0x7f4d23538b50>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_title(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(setup_tests.scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(setup_tests.peviitor_jobs_data[0])\n    \n        missing_job_titles = []\n        # Itterate over job titles and if not present on peviitor add to missing job title list\n        for job_title in job_titles_scraper:\n            if job_title not in job_titles_peviitor:\n                missing_job_titles.append(job_title)\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            # If the missing job list is empty it might mean there are more jobs on peviitor than needed\n            if missing_job_titles == []:\n                missing_job_titles_peviitor = []\n                for job_title in job_titles_peviitor:\n                    if job_title not in job_titles_scraper:\n                        missing_job_titles_peviitor.append(job_title)\n    \n                # If there are way too many jobs titles only list a couple of them\n                if len(missing_job_titles_peviitor) > 20:\n                    missing_job_titles_peviitor = f\"{missing_job_titles_peviitor[:5]} and many more\"\n    \n                print(f\"Expected Results: {job_titles_scraper}\\n\")\n                print(f\"Actual Results: {job_titles_peviitor}\")\n                assert job_titles_scraper == job_titles_peviitor, f\"Peviitor is having the following extra jobs titles: {missing_job_titles_peviitor}\\n\\n\"\n            else:\n                if len(missing_job_titles) > 20:\n                    missing_job_titles = f\"{missing_job_titles[:5]} and many more\"\n    \n                print(f\"Expected Results: {job_titles_scraper}\\n\")\n                print(f\"Actual Results: {job_titles_peviitor}\")\n>               assert job_titles_scraper == job_titles_peviitor, f\"Peviitor is missing the following job titles: {missing_job_titles}\\n\\n\"\nE               AssertionError: Peviitor is missing the following job titles: ['FMCG Account Development Manager – Central Europe']\nE                 \nE                 \nE               assert ['Account Dev...cialist', ...] == ['Account Dev...cialist', ...]\nE                 At index 6 diff: 'FMCG Account Development Manager – Central Europe' != 'FP&A Analyst'\nE                 Left contains 2 more items, first extra item: 'Modelling Analyst'\nE                 Full diff:\nE                   [\nE                    'Account Developmnent',\nE                    'Client Service Executive (full time, hybrid)',\nE                    'Collections Associate with Polish',\nE                    'Collections Associate with Polish',\nE                    'Credit Controller with Polish',\nE                    'Data Processing Specialist',\nE                 +  'FMCG Account Development Manager – Central Europe',\nE                    'FP&A Analyst',\nE                    'Financial Analyst',\nE                 +  'Junior Client Service Consultant (full time, hybrid)',\nE                    'Junior Client Service Consultant (full time, hybrid)',\nE                    'Junior Financial Analyst',\nE                    'Modelling Analyst',\nE                    'Regional Sales Acceleration Leader, EEMEA',\nE                   ]\n\ntests/test_api.py:94: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1706504970179, "stop": 1706504970179}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1706504970179, "stop": 1706504970179}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing the following job titles: ['FMCG Account Development Manager – Central Europe']\n  \n  \nassert ['Account Dev...cialist', ...] == ['Account Dev...cialist', ...]\n  At index 6 diff: 'FMCG Account Development Manager – Central Europe' != 'FP&A Analyst'\n  Left contains 2 more items, first extra item: 'Modelling Analyst'\n  Full diff:\n    [\n     'Account Developmnent',\n     'Client Service Executive (full time, hybrid)',\n     'Collections Associate with Polish',\n     'Collections Associate with Polish',\n     'Credit Controller with Polish',\n     'Data Processing Specialist',\n  +  'FMCG Account Development Manager – Central Europe',\n     'FP&A Analyst',\n     'Financial Analyst',\n  +  'Junior Client Service Consultant (full time, hybrid)',\n     'Junior Client Service Consultant (full time, hybrid)',\n     'Junior Financial Analyst',\n     'Modelling Analyst',\n     'Regional Sales Acceleration Leader, EEMEA',\n    ]\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 94, in test_scrapers_title\n    assert job_titles_scraper == job_titles_peviitor, f\"Peviitor is missing the following job titles: {missing_job_titles}\\n\\n\"\n"}, "start": 1706504970179, "stop": 1706504970180}], "attachments": [{"name": "stdout", "source": "72f37bb0-b1f9-40dd-bcf4-ebc26c589426-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.nielseniq.nielseniqScraper'>"}], "start": 1706504970179, "stop": 1706504970180, "uuid": "2b557dd7-f2fa-4d02-a2c4-3c9115e7258f", "historyId": "503e67bbc721e792f35312eb70822162", "testCaseId": "4b62ec59580b850c2662da4323212e24", "fullName": "test_api.TestScrapers#test_scrapers_title", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az567-964"}, {"name": "thread", "value": "1919-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}