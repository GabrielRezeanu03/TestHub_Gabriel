{"name": "test_scrapers_title[sandraScraper]", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having the following extra jobs titles: ['Senior Manager PGP Production, Technology and Innovation - Region Europe East (m/f/d)']\n  \n  \nassert ['Consilier v...hnician auto'] == ['Consilier v...hnician auto']\n  At index 2 diff: 'Tehnician auto' != 'Senior Manager PGP Production, Technology and Innovation - Region Europe East (m/f/d)'\n  Right contains one more item: 'Tehnician auto'\n  Full diff:\n    [\n     'Consilier vanzari autovehicule comerciale',\n     'Operator Info Desk',\n  -  'Senior Manager PGP Production, Technology and Innovation - Region Europe '\n  -  'East (m/f/d)',\n     'Tehnician auto',\n    ]", "trace": "self = <test_api.TestScrapers object at 0x7f416e50d6f0>\nsetup_tests = <test_api.SetupTests object at 0x7f416e03e620>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_title(self, setup_tests):\n        print(f\"Validate job titles from the company website against Peviitor API Response\\n\")\n    \n        print(\"Step 1: Get job titles from the scraper\")\n        job_titles_scraper = sorted(setup_tests.scraped_jobs_data[0])\n    \n        print(\"Step 2: Get job titles from the Peviitor API\")\n        job_titles_peviitor = sorted(setup_tests.peviitor_jobs_data[0])\n    \n        missing_job_titles = []\n        # Itterate over job titles and if not present on peviitor add to missing job title list\n        for job_title in job_titles_scraper:\n            if job_title not in job_titles_peviitor:\n                missing_job_titles.append(job_title)\n    \n        print(\"Step 3: Compare job titles from scraper response against Peviitor API Response\\n\")\n        # If the missing job list is empty it might mean there are more jobs on peviitor than needed\n        if missing_job_titles == []:\n            missing_job_titles_peviitor = []\n            for job_title in job_titles_peviitor:\n                if job_title not in job_titles_scraper:\n                    missing_job_titles_peviitor.append(job_title)\n    \n            # If there are way too many jobs titles only list a couple of them\n            if len(missing_job_titles_peviitor) > 20:\n                missing_job_titles_peviitor = f\"{missing_job_titles_peviitor[:5]} and many more\"\n    \n            print(f\"Expected Results: {job_titles_scraper}\\n\")\n            print(f\"Actual Results: {job_titles_peviitor}\")\n>           assert job_titles_scraper == job_titles_peviitor, f\"Peviitor is having the following extra jobs titles: {missing_job_titles_peviitor}\\n\\n\"\nE           AssertionError: Peviitor is having the following extra jobs titles: ['Senior Manager PGP Production, Technology and Innovation - Region Europe East (m/f/d)']\nE             \nE             \nE           assert ['Consilier v...hnician auto'] == ['Consilier v...hnician auto']\nE             At index 2 diff: 'Tehnician auto' != 'Senior Manager PGP Production, Technology and Innovation - Region Europe East (m/f/d)'\nE             Right contains one more item: 'Tehnician auto'\nE             Full diff:\nE               [\nE                'Consilier vanzari autovehicule comerciale',\nE                'Operator Info Desk',\nE             -  'Senior Manager PGP Production, Technology and Innovation - Region Europe '\nE             -  'East (m/f/d)',\nE                'Tehnician auto',\nE               ]\n\ntests/test_api.py:72: AssertionError"}, "attachments": [{"name": "stdout", "source": "c52d1fac-ccfa-4d19-9b39-8f3423303cbd-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.sandra.sandraScraper'>"}], "start": 1703218741841, "stop": 1703218741843, "uuid": "3c8baa89-251e-4875-b966-3c09f81d5f3a", "historyId": "6f1b526525aea41e52d887b20859ca2c", "testCaseId": "c080507e0e859c453fd919081af4356d", "fullName": "tests.test_api.TestScrapers#test_scrapers_title", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_tests')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az1248-149"}, {"name": "thread", "value": "2125-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}