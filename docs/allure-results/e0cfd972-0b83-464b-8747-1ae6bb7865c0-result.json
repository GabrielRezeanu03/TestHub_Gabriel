{"name": "Test job titles from the iuliuscompany website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Analist financiar', 'Retail Leasing Specialist']", "trace": "get_job_details = ((['Economist', 'Funcționar informații clienți', 'Analist financiar', 'Functionar informatii clienti', 'Retail Leasing...any', 'iuliuscompany', 'iuliuscompany', ...], ['On-site', 'On-site', 'On-site', 'On-site', 'On-site', 'On-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_iuliuscompany_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_iuliuscompany.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fd6066efb20>\nexpected_titles = ['Analist financiar', 'Economist', 'Functionar informatii clienti', 'Funcționar informații clienți', 'Retail Leasing Specialist']\nactual_titles = ['Agent control acces (Dispecerat)', 'Agent control acces trafic', 'Agent de securitate', 'Analist financiar - Iulius Mall Iași', 'Asistent Resurse Umane', 'Debarasator', ...]\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: ['Analist financiar', 'Retail Leasing Specialist']\n\ntests/utils.py:124: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1718341897079, "stop": 1718341897079}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1718341897080, "stop": 1718341897080}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Analist financiar', 'Retail Leasing Specialist']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_iuliuscompany.py\", line 37, in test_iuliuscompany_title_api\n    TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 124, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "4e5f8928-e47b-4140-81ab-4066fae60713-attachment.attach"}, {"name": "Actual Results", "source": "b6cc9cd8-7289-424a-bff9-d8c8caeeb8ec-attachment.attach"}], "start": 1718341897080, "stop": 1718341897080}], "start": 1718341897079, "stop": 1718341897080, "uuid": "5bd50b6c-9f73-4d19-9996-ada7f5bfbca5", "historyId": "e91ada45cdf97ef3ec37a8dbbfbb775a", "testCaseId": "e91ada45cdf97ef3ec37a8dbbfbb775a", "fullName": "Test_API_Suite.test_iuliuscompany#test_iuliuscompany_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_iuliuscompany"}, {"name": "host", "value": "fv-az739-599"}, {"name": "thread", "value": "2246-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_iuliuscompany"}]}