{"name": "Test job titles from the elytishospital website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Asistent medical generalist', 'Asistent medical radiologie / radioterapie', 'Consilier Relații Clienți', 'Kinetoterapeut', 'Medic Primar / Specialist in diabet zaharat, nutritie si boli metabolice', 'Medic Specialist / Primar Cardiolog', 'Medic Specialist / Primar Chirurgie plastică', 'Medic Specialist / Primar Dermatolog', 'Medic Specialist / Primar Endocrinologie', 'Medic Specialist / Primar Gastroenterologie', 'Medic Specialist / Primar Ginecolog', 'Medic Specialist / Primar Hematologie', 'Medic Specialist / Primar Neurolog', 'Medic Specialist / Primar Oftalmologie', 'Medic Specialist / Primar Oncolog', 'Medic Specialist / Primar Pneumolog', 'Medic Specialist / Primar Reumatolog']", "trace": "get_job_details = ((['Medic Specialist / Primar Oftalmologie', 'Medic Specialist / Primar Pneumolog', 'Medic Specialist / Primar Neurolo...'elytishospital', 'elytishospital', 'elytishospital', 'elytishospital'], ['on-site', 'on-site', 'on-site', 'on-site']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_elytishospital_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_elytishospital.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7ff0d8bfa740>\nexpected_titles = ['Asistent medical generalist', 'Asistent medical radiologie / radioterapie', 'Consilier Relații Clienți', 'Infirmier', 'Kinetoterapeut', 'Medic Primar / Specialist in diabet zaharat, nutritie si boli metabolice', ...]\nactual_titles = ['Contabil', 'Infirmier', 'Ofertă de Colaborare cu Psiholog Clinician', 'Registrator medical / Operator call center']\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: ['Asistent medical generalist', 'Asistent medical radiologie / radioterapie', 'Consilier Relații Clienți', 'Kinetoterapeut', 'Medic Primar / Specialist in diabet zaharat, nutritie si boli metabolice', 'Medic Specialist / Primar Cardiolog', 'Medic Specialist / Primar Chirurgie plastică', 'Medic Specialist / Primar Dermatolog', 'Medic Specialist / Primar Endocrinologie', 'Medic Specialist / Primar Gastroenterologie', 'Medic Specialist / Primar Ginecolog', 'Medic Specialist / Primar Hematologie', 'Medic Specialist / Primar Neurolog', 'Medic Specialist / Primar Oftalmologie', 'Medic Specialist / Primar Oncolog', 'Medic Specialist / Primar Pneumolog', 'Medic Specialist / Primar Reumatolog']\n\ntests/utils.py:124: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1719119438533, "stop": 1719119438533}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1719119438533, "stop": 1719119438533}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Asistent medical generalist', 'Asistent medical radiologie / radioterapie', 'Consilier Relații Clienți', 'Kinetoterapeut', 'Medic Primar / Specialist in diabet zaharat, nutritie si boli metabolice', 'Medic Specialist / Primar Cardiolog', 'Medic Specialist / Primar Chirurgie plastică', 'Medic Specialist / Primar Dermatolog', 'Medic Specialist / Primar Endocrinologie', 'Medic Specialist / Primar Gastroenterologie', 'Medic Specialist / Primar Ginecolog', 'Medic Specialist / Primar Hematologie', 'Medic Specialist / Primar Neurolog', 'Medic Specialist / Primar Oftalmologie', 'Medic Specialist / Primar Oncolog', 'Medic Specialist / Primar Pneumolog', 'Medic Specialist / Primar Reumatolog']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_elytishospital.py\", line 37, in test_elytishospital_title_api\n    TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 124, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "db9f312d-132e-4f2e-be96-dabb87f96c25-attachment.attach"}, {"name": "Actual Results", "source": "2184ceb5-d222-49f3-9a59-927649fc7dd3-attachment.attach"}], "start": 1719119438533, "stop": 1719119438533}], "start": 1719119438533, "stop": 1719119438534, "uuid": "0cddd59e-0277-4be5-a401-cac9110ea800", "historyId": "a179f942cdd077ed8bf0d1753ab756c2", "testCaseId": "a179f942cdd077ed8bf0d1753ab756c2", "fullName": "Test_API_Suite.test_elytishospital#test_elytishospital_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_elytishospital"}, {"name": "host", "value": "fv-az1486-994"}, {"name": "thread", "value": "2223-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_elytishospital"}]}