{"name": "Test job countries from the ppromania website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries for the following job titles: ['Manager de Comunicare', 'Consultant Tehnic Vânzări', 'Director General Fabrică', 'Director Regional Centru de Servicii', 'Manager de Producție']", "trace": "get_job_details = ((['Manager Contabilitate și Administrare Personal', 'Manager Financiar Interimar', 'Director Național de Vânzări', 'C...omania', 'ppromania', 'ppromania', 'ppromania', 'ppromania'], ['On-site', 'On-site', 'On-site', 'On-site', 'On-site']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_ppromania_country_api(get_job_details):\n        allure.dynamic.title(f\"Test job countries from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job countries and titles from the scraper\"):\n            job_countries_scraper = scraped_jobs_data[2]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job countries and titles from the Peviitor API\"):\n            job_countries_peviitor = peviitor_jobs_data[2]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job countries from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_countries_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_countries_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_ppromania.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f06939de830>\nexpected_countries = ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', ...]\nactual_countries = ['Romania', 'Romania', 'Romania', 'Romania', 'Romania']\njob_titles_scraper = ['Manager Contabilitate și Administrare Personal', 'Manager Financiar Interimar', 'Director Național de Vânzări', 'Consultant Tehnic Vânzări Interne', 'Director IT', 'Manager de Comunicare', ...]\napi_job_titles = ['Manager de Comunicare', 'Consultant Tehnic Vânzări', 'Manager Zonal Vânzări', 'Director General Fabrică', 'Director Regional Centru de Servicii']\n\n    def check_job_countries(self, expected_countries, actual_countries, job_titles_scraper, api_job_titles):\n        if not expected_countries:\n            msg = f\"Scraper is not grabbing any job countries\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occured\"\n    \n        # Check job countries from scraper against the peviitor api\n        scraper_actual_countries, scraper_job_titles = self.get_different_items(expected_countries, actual_countries, job_titles_scraper)\n    \n        if scraper_actual_countries:\n            msg = f\"Peviitor is missing job countries for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job countries for the following job titles: ['Manager de Comunicare', 'Consultant Tehnic Vânzări', 'Director General Fabrică', 'Director Regional Centru de Servicii', 'Manager de Producție']\n\ntests/utils.py:168: AssertionError"}, "steps": [{"name": "Step 1: Get job countries and titles from the scraper", "status": "passed", "start": 1718601312750, "stop": 1718601312750}, {"name": "Step 2: Get job countries and titles from the Peviitor API", "status": "passed", "start": 1718601312750, "stop": 1718601312750}, {"name": "Step 3: Compare job countries from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries for the following job titles: ['Manager de Comunicare', 'Consultant Tehnic Vânzări', 'Director General Fabrică', 'Director Regional Centru de Servicii', 'Manager de Producție']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_ppromania.py\", line 75, in test_ppromania_country_api\n    TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 168, in check_job_countries\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "4e7d6acd-b4be-4365-9c77-6d459d644d2a-attachment.attach"}, {"name": "Actual Results", "source": "9a29740a-1f9a-4189-80fa-73943a0010b3-attachment.attach"}], "start": 1718601312750, "stop": 1718601312750}], "start": 1718601312750, "stop": 1718601312751, "uuid": "cfad20da-4ee1-41d0-98bf-bfa1f17a542f", "historyId": "734f38f803935f46a20b37deb6f7c7c9", "testCaseId": "734f38f803935f46a20b37deb6f7c7c9", "fullName": "Test_API_Suite.test_ppromania#test_ppromania_country_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_ppromania"}, {"name": "host", "value": "fv-az1439-924"}, {"name": "thread", "value": "1996-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_ppromania"}]}