{"name": "Test job cities from the Pago website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bucharest'...['Bucharest']] == [['Bucuresti'...['Bucuresti']]\n  At index 0 diff: ['Bucharest'] != ['Bucuresti']\n  Full diff:\n  - [['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti']]\n  ?       ^    -         ^    -         ^    -         ^    -\n  + [['Bucharest'], ['Bucharest'], ['Bucharest'], ['Bucharest']]\n  ?       ^^             ^^             ^^             ^^", "trace": "self = <test_api.TestScrapers object at 0x7fd3119079a0>\nsetup_tests = <test_api.SetupTests object at 0x7fd3118068f0>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_city(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = sorted(setup_tests.scraped_jobs_data[1])\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = sorted(setup_tests.peviitor_jobs_data[1])\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            print(f\"Expected Results: {job_cities_scraper}\\n\")\n            print(f\"Actual Results: {job_cities_peviitor}\")\n    \n            if job_cities_scraper != job_cities_peviitor:\n>               assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\nE               AssertionError: Peviitor is having extra jobs cities\nE                 \nE                 \nE               assert [['Bucharest'...['Bucharest']] == [['Bucuresti'...['Bucuresti']]\nE                 At index 0 diff: ['Bucharest'] != ['Bucuresti']\nE                 Full diff:\nE                 - [['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti']]\nE                 ?       ^    -         ^    -         ^    -         ^    -\nE                 + [['Bucharest'], ['Bucharest'], ['Bucharest'], ['Bucharest']]\nE                 ?       ^^             ^^             ^^             ^^\n\ntests/test_api.py:116: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1706073021958, "stop": 1706073021958}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1706073021958, "stop": 1706073021958}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bucharest'...['Bucharest']] == [['Bucuresti'...['Bucuresti']]\n  At index 0 diff: ['Bucharest'] != ['Bucuresti']\n  Full diff:\n  - [['Bucuresti'], ['Bucuresti'], ['Bucuresti'], ['Bucuresti']]\n  ?       ^    -         ^    -         ^    -         ^    -\n  + [['Bucharest'], ['Bucharest'], ['Bucharest'], ['Bucharest']]\n  ?       ^^             ^^             ^^             ^^\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 116, in test_scrapers_city\n    assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\n"}, "start": 1706073021958, "stop": 1706073021959}], "attachments": [{"name": "stdout", "source": "dbde84c4-1e5f-4c35-871d-48f2cdfda887-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.pago.PagoScraper'>"}], "start": 1706073021958, "stop": 1706073021959, "uuid": "e65233bb-0d43-4b3d-b224-676a0465c3b6", "historyId": "c77e9777cae31e407341cbc83af9b0d0", "testCaseId": "75f773d8d7bc6573a9e018ca8c499fa6", "fullName": "test_api.TestScrapers#test_scrapers_city", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az1430-567"}, {"name": "thread", "value": "2247-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}