{"name": "Test job titles from the rervest website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Angajăm agenți contractare, verificare și conștientizare']", "trace": "get_job_details = ((['Angajăm agenți contractare, verificare și conștientizare', 'Responsabil de Mediu', 'Angajăm șoferi profesioniști p.../rervest.ro/job/responsabil-de-mediu/', 'https://rervest.ro/job/2134/', 'https://rervest.ro/job/agenti-contractare/']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_rervest_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_rervest.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f94b27891b0>\nexpected_titles = ['Agenti contractare', 'Angajăm agenți contractare, verificare și conștientizare', 'Angajăm șoferi profesioniști pentru autocamion/mașină de mare tonaj', 'Responsabil de Mediu']\nactual_titles = ['Agenti contractare', 'Angajăm șoferi profesioniști pentru autocamion/mașină de mare tonaj', 'Responsabil de Mediu']\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: ['Angajăm agenți contractare, verificare și conștientizare']\n\ntests/utils.py:96: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1707541804459, "stop": 1707541804459}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1707541804459, "stop": 1707541804459}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Angajăm agenți contractare, verificare și conștientizare']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_rervest.py\", line 36, in test_rervest_title_api\n    TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 96, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "9004ed1b-8c2c-4900-b076-f1775f9dc149-attachment.attach"}, {"name": "Actual Results", "source": "298578e3-beb4-4636-a00b-e802f1f90e5c-attachment.attach"}], "start": 1707541804459, "stop": 1707541804460}], "start": 1707541804459, "stop": 1707541804460, "uuid": "347f52eb-ac40-4e9d-8e93-f7166a3cda2d", "historyId": "661edd48772a215b1e1d93f1807c1f50", "testCaseId": "661edd48772a215b1e1d93f1807c1f50", "fullName": "Test_API_Suite.test_rervest#test_rervest_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_rervest"}, {"name": "host", "value": "fv-az1214-823"}, {"name": "thread", "value": "1902-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_rervest"}]}