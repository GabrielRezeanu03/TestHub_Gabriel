{"name": "Test job cities from the arcadiamedical website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Psiholog clinician', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Pneumologie', 'Medic specialist/primar Neurologie', 'Medic specialist/primar Alergologie', 'Medic specialist/primar Dermatologie', 'Medic specialist/primar Gastroenterologie', 'Medic specialist/primar Obstetrică-Ginecologie', 'Medic specialist/primar Recuperare medicală', 'Specialist Resurse Umane', 'Fiziokinetoterapeut', 'Asistent medical generalist voluntar (ambulatoriu si spital)', 'Consilier relații clienți', 'Infirmiera', 'Asistent medical generalist (spital si ambulatoriu)', 'Asistent medical generalist Ambulatoriu', 'Asistent Medical Generalist Geriatrie', 'Asistent medical generalist Chirurgie', 'Asistent medical generalist Bloc Operator', 'Asistent Medical Generalist Recuperare Medicală']", "trace": "get_job_details = ((['Psiholog clinician', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Pneumologie', 'Medic speciali...o/cariere#6', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]), ([], [], [], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_arcadiamedical_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities and titles from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n    \n        with allure.step(\"Step 2: Get job cities and titles from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_arcadiamedical.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fe402ef3820>\nexpected_cities = [['Iasi'], ['Iasi'], ['Iasi'], ['Iasi'], ['Iasi'], ['Iasi'], ...]\nactual_cities = []\njob_titles_scraper = ['Psiholog clinician', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Pneumologie', 'Medic specialist/primar Neurologie', 'Medic specialist/primar Alergologie', 'Medic specialist/primar Dermatologie', ...]\napi_job_titles = []\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper, api_job_titles):\n        if not expected_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occurred\"\n    \n        # Check jobs from scraper against the peviitor api\n        scraper_actual_cities, scraper_job_titles = self.get_different_items(expected_cities, actual_cities, job_titles_scraper)\n    \n        if scraper_actual_cities:\n            msg = f\"Peviitor is missing job cities for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job cities for the following job titles: ['Psiholog clinician', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Pneumologie', 'Medic specialist/primar Neurologie', 'Medic specialist/primar Alergologie', 'Medic specialist/primar Dermatologie', 'Medic specialist/primar Gastroenterologie', 'Medic specialist/primar Obstetrică-Ginecologie', 'Medic specialist/primar Recuperare medicală', 'Specialist Resurse Umane', 'Fiziokinetoterapeut', 'Asistent medical generalist voluntar (ambulatoriu si spital)', 'Consilier relații clienți', 'Infirmiera', 'Asistent medical generalist (spital si ambulatoriu)', 'Asistent medical generalist Ambulatoriu', 'Asistent Medical Generalist Geriatrie', 'Asistent medical generalist Chirurgie', 'Asistent medical generalist Bloc Operator', 'Asistent Medical Generalist Recuperare Medicală']\n\ntests/utils.py:141: AssertionError"}, "steps": [{"name": "Step 1: Get job cities and titles from the scraper", "status": "passed", "start": 1718514641607, "stop": 1718514641607}, {"name": "Step 2: Get job cities and titles from the Peviitor API", "status": "passed", "start": 1718514641607, "stop": 1718514641607}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Psiholog clinician', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Pneumologie', 'Medic specialist/primar Neurologie', 'Medic specialist/primar Alergologie', 'Medic specialist/primar Dermatologie', 'Medic specialist/primar Gastroenterologie', 'Medic specialist/primar Obstetrică-Ginecologie', 'Medic specialist/primar Recuperare medicală', 'Specialist Resurse Umane', 'Fiziokinetoterapeut', 'Asistent medical generalist voluntar (ambulatoriu si spital)', 'Consilier relații clienți', 'Infirmiera', 'Asistent medical generalist (spital si ambulatoriu)', 'Asistent medical generalist Ambulatoriu', 'Asistent Medical Generalist Geriatrie', 'Asistent medical generalist Chirurgie', 'Asistent medical generalist Bloc Operator', 'Asistent Medical Generalist Recuperare Medicală']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_arcadiamedical.py\", line 57, in test_arcadiamedical_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 141, in check_job_cities\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "09126b80-6169-462e-8078-feb6abbc4446-attachment.attach"}, {"name": "Actual Results", "source": "d7f34e16-7694-43ed-a996-3ba9e623aff1-attachment.attach"}], "start": 1718514641607, "stop": 1718514641607}], "start": 1718514641607, "stop": 1718514641607, "uuid": "9d8b4fbf-64de-4cf8-a793-59427775989b", "historyId": "f10817dc77bbe129d5bd177289168e9d", "testCaseId": "f10817dc77bbe129d5bd177289168e9d", "fullName": "Test_API_Suite.test_arcadiamedical#test_arcadiamedical_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_arcadiamedical"}, {"name": "host", "value": "fv-az835-396"}, {"name": "thread", "value": "2241-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_arcadiamedical"}]}