{"name": "Test job cities from the carturesti website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bucuresti'... 'Targu Jiu']] == [['Bucuresti'... 'Targu Jiu']]\n  At index 1 diff: ['Bucuresti'] != ['Bucuresti', 'Cluj-Napoca', 'Timisoara']\n  Left contains one more item: ['Bucuresti', 'Ramnicu Valcea', 'Targu Jiu']\n  Full diff:\n    [\n  +  ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti',\n      'Cluj-Napoca',\n      'Timisoara'],\n     ['Bucuresti',\n      'Iasi',\n      'Cluj-Napoca',\n      'Craiova',\n      'Drobeta-Turnu Severin',\n      'Targu Jiu',\n      'Arad',\n      'Oradea',\n      'Pitesti',\n      'Timisoara',\n      'Zalau',\n      'Targu-Mures'],\n     ['Bucuresti',\n      'Ramnicu Valcea',\n      'Targu Jiu'],\n    ]", "trace": "self = <test_api.TestScrapers object at 0x7f3c5d70fdc0>\nsetup_tests = <test_api.SetupTests object at 0x7f3c5cfc7c10>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_city(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = sorted(setup_tests.scraped_jobs_data[1])\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = sorted(setup_tests.peviitor_jobs_data[1])\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            print(f\"Expected Results: {job_cities_scraper}\\n\")\n            print(f\"Actual Results: {job_cities_peviitor}\")\n    \n            if job_cities_scraper != job_cities_peviitor:\n>               assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\nE               AssertionError: Peviitor is having extra jobs cities\nE                 \nE                 \nE               assert [['Bucuresti'... 'Targu Jiu']] == [['Bucuresti'... 'Targu Jiu']]\nE                 At index 1 diff: ['Bucuresti'] != ['Bucuresti', 'Cluj-Napoca', 'Timisoara']\nE                 Left contains one more item: ['Bucuresti', 'Ramnicu Valcea', 'Targu Jiu']\nE                 Full diff:\nE                   [\nE                 +  ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti',\nE                     'Cluj-Napoca',\nE                     'Timisoara'],\nE                    ['Bucuresti',\nE                     'Iasi',\nE                     'Cluj-Napoca',\nE                     'Craiova',\nE                     'Drobeta-Turnu Severin',\nE                     'Targu Jiu',\nE                     'Arad',\nE                     'Oradea',\nE                     'Pitesti',\nE                     'Timisoara',\nE                     'Zalau',\nE                     'Targu-Mures'],\nE                    ['Bucuresti',\nE                     'Ramnicu Valcea',\nE                     'Targu Jiu'],\nE                   ]\n\ntests/test_api.py:115: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1704777015095, "stop": 1704777015095}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1704777015095, "stop": 1704777015095}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bucuresti'... 'Targu Jiu']] == [['Bucuresti'... 'Targu Jiu']]\n  At index 1 diff: ['Bucuresti'] != ['Bucuresti', 'Cluj-Napoca', 'Timisoara']\n  Left contains one more item: ['Bucuresti', 'Ramnicu Valcea', 'Targu Jiu']\n  Full diff:\n    [\n  +  ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti',\n      'Cluj-Napoca',\n      'Timisoara'],\n     ['Bucuresti',\n      'Iasi',\n      'Cluj-Napoca',\n      'Craiova',\n      'Drobeta-Turnu Severin',\n      'Targu Jiu',\n      'Arad',\n      'Oradea',\n      'Pitesti',\n      'Timisoara',\n      'Zalau',\n      'Targu-Mures'],\n     ['Bucuresti',\n      'Ramnicu Valcea',\n      'Targu Jiu'],\n    ]\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 115, in test_scrapers_city\n    assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\n"}, "start": 1704777015095, "stop": 1704777015096}], "attachments": [{"name": "stdout", "source": "e80047c5-58cf-47ec-8e3f-03085a7455fd-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.carturesti.carturestiScraper'>"}], "start": 1704777015095, "stop": 1704777015096, "uuid": "829d63c6-05bc-4556-8c70-e67ac75a9605", "historyId": "fb126c9fbf10e19e163da4d9bc4c9625", "testCaseId": "75f773d8d7bc6573a9e018ca8c499fa6", "fullName": "test_api.TestScrapers#test_scrapers_city", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az652-201"}, {"name": "thread", "value": "2165-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}