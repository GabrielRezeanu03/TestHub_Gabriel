{"name": "Test job cities from the kinetic website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Iasi', 'Bu...sti', 'Cluj']] == [['Iasi', 'Bu...ști', 'Cluj']]\n  At index 0 diff: ['Iasi', 'Bucuresti', 'Cluj'] != ['Iasi', 'București', 'Cluj']\n  Full diff:\n  - [['Iasi', 'București', 'Cluj']]\n  ?                  ^\n  + [['Iasi', 'Bucuresti', 'Cluj']]\n  ?                  ^", "trace": "self = <test_api.TestScrapers object at 0x7ff4b9091a20>\nsetup_tests = <test_api.SetupTests object at 0x7ff4b84d3730>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_city(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = sorted(setup_tests.scraped_jobs_data[1])\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = sorted(setup_tests.peviitor_jobs_data[1])\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            print(f\"Expected Results: {job_cities_scraper}\\n\")\n            print(f\"Actual Results: {job_cities_peviitor}\")\n    \n            if job_cities_scraper != job_cities_peviitor:\n>               assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\nE               AssertionError: Peviitor is having extra jobs cities\nE                 \nE                 \nE               assert [['Iasi', 'Bu...sti', 'Cluj']] == [['Iasi', 'Bu...ști', 'Cluj']]\nE                 At index 0 diff: ['Iasi', 'Bucuresti', 'Cluj'] != ['Iasi', 'București', 'Cluj']\nE                 Full diff:\nE                 - [['Iasi', 'București', 'Cluj']]\nE                 ?                  ^\nE                 + [['Iasi', 'Bucuresti', 'Cluj']]\nE                 ?                  ^\n\ntests/test_api.py:115: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1705853077878, "stop": 1705853077878}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1705853077878, "stop": 1705853077878}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Iasi', 'Bu...sti', 'Cluj']] == [['Iasi', 'Bu...ști', 'Cluj']]\n  At index 0 diff: ['Iasi', 'Bucuresti', 'Cluj'] != ['Iasi', 'București', 'Cluj']\n  Full diff:\n  - [['Iasi', 'București', 'Cluj']]\n  ?                  ^\n  + [['Iasi', 'Bucuresti', 'Cluj']]\n  ?                  ^\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 115, in test_scrapers_city\n    assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\n"}, "start": 1705853077878, "stop": 1705853077879}], "attachments": [{"name": "stdout", "source": "ff2ded52-bc57-4beb-bc5c-12c8654cae48-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.kinetic.kineticScraper'>"}], "start": 1705853077878, "stop": 1705853077879, "uuid": "d66c0cdc-28ab-4b43-981b-dc860f1e25ee", "historyId": "b0f01ed84036ef3a3b10f81064a186dd", "testCaseId": "75f773d8d7bc6573a9e018ca8c499fa6", "fullName": "test_api.TestScrapers#test_scrapers_city", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az1384-828"}, {"name": "thread", "value": "1934-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}