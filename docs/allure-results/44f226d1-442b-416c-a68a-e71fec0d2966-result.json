{"name": "Test job cities from the verla website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bucuresti,...apoca, Iasi']] == [['București,...apoca, Iasi']]\n  At index 0 diff: ['Bucuresti, Cluj-Napoca, Iasi'] != ['București, Cluj-Napoca, Iasi']\n  Full diff:\n  - [['București, Cluj-Napoca, Iasi']]\n  ?          ^\n  + [['Bucuresti, Cluj-Napoca, Iasi']]\n  ?          ^", "trace": "self = <test_api.TestScrapers object at 0x7f925d4e1090>\nsetup_tests = <test_api.SetupTests object at 0x7f925c77b6a0>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_city(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = sorted(setup_tests.scraped_jobs_data[1])\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = sorted(setup_tests.peviitor_jobs_data[1])\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            print(f\"Expected Results: {job_cities_scraper}\\n\")\n            print(f\"Actual Results: {job_cities_peviitor}\")\n    \n            if job_cities_scraper != job_cities_peviitor:\n>               assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\nE               AssertionError: Peviitor is having extra jobs cities\nE                 \nE                 \nE               assert [['Bucuresti,...apoca, Iasi']] == [['București,...apoca, Iasi']]\nE                 At index 0 diff: ['Bucuresti, Cluj-Napoca, Iasi'] != ['București, Cluj-Napoca, Iasi']\nE                 Full diff:\nE                 - [['București, Cluj-Napoca, Iasi']]\nE                 ?          ^\nE                 + [['Bucuresti, Cluj-Napoca, Iasi']]\nE                 ?          ^\n\ntests/test_api.py:115: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1705813796106, "stop": 1705813796106}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1705813796106, "stop": 1705813796106}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bucuresti,...apoca, Iasi']] == [['București,...apoca, Iasi']]\n  At index 0 diff: ['Bucuresti, Cluj-Napoca, Iasi'] != ['București, Cluj-Napoca, Iasi']\n  Full diff:\n  - [['București, Cluj-Napoca, Iasi']]\n  ?          ^\n  + [['Bucuresti, Cluj-Napoca, Iasi']]\n  ?          ^\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 115, in test_scrapers_city\n    assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\n"}, "start": 1705813796106, "stop": 1705813796106}], "attachments": [{"name": "stdout", "source": "28ca8556-bc30-479d-95c5-aa9e57a4fdb2-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.verla.verlaScraper'>"}], "start": 1705813796106, "stop": 1705813796107, "uuid": "9a56d69d-695e-41af-aa7f-5ff7300d62fb", "historyId": "e268800c293d900cc2335fc7b913accd", "testCaseId": "75f773d8d7bc6573a9e018ca8c499fa6", "fullName": "test_api.TestScrapers#test_scrapers_city", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az1041-953"}, {"name": "thread", "value": "2019-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}