{"name": "Test job countries from the arcadiamedical website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries for the following job titles: ['Psiholog clinician', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Pneumologie', 'Medic specialist/primar Neurologie', 'Medic specialist/primar Alergologie', 'Medic specialist/primar Dermatologie', 'Medic specialist/primar Gastroenterologie', 'Medic specialist/primar Obstetrică-Ginecologie', 'Medic specialist/primar Recuperare medicală', 'Specialist Resurse Umane', 'Fiziokinetoterapeut', 'Asistent medical generalist voluntar (ambulatoriu si spital)', 'Consilier relații clienți', 'Infirmiera', 'Asistent medical generalist (spital si ambulatoriu)', 'Asistent medical generalist Ambulatoriu', 'Asistent Medical Generalist Geriatrie', 'Asistent medical generalist Chirurgie', 'Asistent medical generalist Bloc Operator', 'Asistent Medical Generalist Recuperare Medicală']", "trace": "get_job_details = ((['Psiholog clinician', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Pneumologie', 'Medic speciali...o/cariere#6', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]), ([], [], [], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_arcadiamedical_country_api(get_job_details):\n        allure.dynamic.title(f\"Test job countries from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job countries and titles from the scraper\"):\n            job_countries_scraper = scraped_jobs_data[2]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job countries and titles from the Peviitor API\"):\n            job_countries_peviitor = peviitor_jobs_data[2]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job countries from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_countries_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_countries_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_arcadiamedical.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fe402ebc1c0>\nexpected_countries = ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', ...]\nactual_countries = []\njob_titles_scraper = ['Psiholog clinician', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Pneumologie', 'Medic specialist/primar Neurologie', 'Medic specialist/primar Alergologie', 'Medic specialist/primar Dermatologie', ...]\napi_job_titles = []\n\n    def check_job_countries(self, expected_countries, actual_countries, job_titles_scraper, api_job_titles):\n        if not expected_countries:\n            msg = f\"Scraper is not grabbing any job countries\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occured\"\n    \n        # Check job countries from scraper against the peviitor api\n        scraper_actual_countries, scraper_job_titles = self.get_different_items(expected_countries, actual_countries, job_titles_scraper)\n    \n        if scraper_actual_countries:\n            msg = f\"Peviitor is missing job countries for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job countries for the following job titles: ['Psiholog clinician', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Pneumologie', 'Medic specialist/primar Neurologie', 'Medic specialist/primar Alergologie', 'Medic specialist/primar Dermatologie', 'Medic specialist/primar Gastroenterologie', 'Medic specialist/primar Obstetrică-Ginecologie', 'Medic specialist/primar Recuperare medicală', 'Specialist Resurse Umane', 'Fiziokinetoterapeut', 'Asistent medical generalist voluntar (ambulatoriu si spital)', 'Consilier relații clienți', 'Infirmiera', 'Asistent medical generalist (spital si ambulatoriu)', 'Asistent medical generalist Ambulatoriu', 'Asistent Medical Generalist Geriatrie', 'Asistent medical generalist Chirurgie', 'Asistent medical generalist Bloc Operator', 'Asistent Medical Generalist Recuperare Medicală']\n\ntests/utils.py:168: AssertionError"}, "steps": [{"name": "Step 1: Get job countries and titles from the scraper", "status": "passed", "start": 1718514641622, "stop": 1718514641622}, {"name": "Step 2: Get job countries and titles from the Peviitor API", "status": "passed", "start": 1718514641622, "stop": 1718514641622}, {"name": "Step 3: Compare job countries from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries for the following job titles: ['Psiholog clinician', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Pneumologie', 'Medic specialist/primar Neurologie', 'Medic specialist/primar Alergologie', 'Medic specialist/primar Dermatologie', 'Medic specialist/primar Gastroenterologie', 'Medic specialist/primar Obstetrică-Ginecologie', 'Medic specialist/primar Recuperare medicală', 'Specialist Resurse Umane', 'Fiziokinetoterapeut', 'Asistent medical generalist voluntar (ambulatoriu si spital)', 'Consilier relații clienți', 'Infirmiera', 'Asistent medical generalist (spital si ambulatoriu)', 'Asistent medical generalist Ambulatoriu', 'Asistent Medical Generalist Geriatrie', 'Asistent medical generalist Chirurgie', 'Asistent medical generalist Bloc Operator', 'Asistent Medical Generalist Recuperare Medicală']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_arcadiamedical.py\", line 76, in test_arcadiamedical_country_api\n    TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 168, in check_job_countries\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "b24c8603-c45f-436b-acda-4fb2a93e28d2-attachment.attach"}, {"name": "Actual Results", "source": "82633517-018d-4899-b24c-1cac3b0de309-attachment.attach"}], "start": 1718514641622, "stop": 1718514641622}], "start": 1718514641622, "stop": 1718514641622, "uuid": "56cc91d7-a65a-4b5f-8480-0e524581e31e", "historyId": "f10e1ada04e2f54907f9d1e9c564abff", "testCaseId": "f10e1ada04e2f54907f9d1e9c564abff", "fullName": "Test_API_Suite.test_arcadiamedical#test_arcadiamedical_country_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_arcadiamedical"}, {"name": "host", "value": "fv-az835-396"}, {"name": "thread", "value": "2241-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_arcadiamedical"}]}