{"name": "Test job links from the vetro website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing the following job links: ['https://vetro.vet/cariere/reprezentant-medical-veterinar-promovare-3/', 'https://vetro.vet/cariere/specialist-marketing-3/']\n  \n  \nassert ['https://vet...marketing-3/'] == []\n  Left contains 2 more items, first extra item: 'https://vetro.vet/cariere/reprezentant-medical-veterinar-promovare-3/'\n  Full diff:\n    [\n  -  ,\n  +  'https://vetro.vet/cariere/reprezentant-medical-veterinar-promovare-3/',\n  +  'https://vetro.vet/cariere/specialist-marketing-3/',\n    ]", "trace": "self = <test_api.TestScrapers object at 0x7f0b71b48a60>\nsetup_tests = <test_api.SetupTests object at 0x7f0b7142af50>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_link(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job links from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job links from the scraper\"):\n            job_links_scraper = sorted(setup_tests.scraped_jobs_data[3])\n    \n        with allure.step(\"Step 2: Get job links from the Peviitor API\"):\n            job_links_peviitor = sorted(setup_tests.peviitor_jobs_data[3])\n    \n        missing_job_links = []\n    \n        for job_link in job_links_scraper:\n            if job_link not in job_links_peviitor:\n                missing_job_links.append(job_link)\n    \n        with allure.step(\"Step 3: Compare job links from scraper response against Peviitor API Response\"):\n            print(f\"Expected Results: {job_links_scraper}\\n\")\n            print(f\"Actual Results: {job_links_peviitor}\")\n            if missing_job_links == []:\n                missing_job_links_peviitor = []\n                if job_link in job_links_peviitor:\n                    if job_link not in job_links_scraper:\n                        missing_job_links_peviitor.append(job_link)\n    \n                if len(missing_job_links_peviitor) > 20:\n                    missing_job_links_peviitor = f\"{missing_job_links_peviitor[:5]} and many more\"\n                assert job_links_scraper == job_links_peviitor, f\"Peviitor is having the following extra jobs links: {missing_job_links_peviitor}\\n\\n\"\n            else:\n                if len(missing_job_links) > 20:\n                    missing_job_links = f\"{missing_job_links[:5]} and many more\"\n>               assert job_links_scraper == job_links_peviitor, f\"Peviitor is missing the following job links: {missing_job_links}\\n\\n\"\nE               AssertionError: Peviitor is missing the following job links: ['https://vetro.vet/cariere/reprezentant-medical-veterinar-promovare-3/', 'https://vetro.vet/cariere/specialist-marketing-3/']\nE                 \nE                 \nE               assert ['https://vet...marketing-3/'] == []\nE                 Left contains 2 more items, first extra item: 'https://vetro.vet/cariere/reprezentant-medical-veterinar-promovare-3/'\nE                 Full diff:\nE                   [\nE                 -  ,\nE                 +  'https://vetro.vet/cariere/reprezentant-medical-veterinar-promovare-3/',\nE                 +  'https://vetro.vet/cariere/specialist-marketing-3/',\nE                   ]\n\ntests/test_api.py:176: AssertionError"}, "steps": [{"name": "Step 1: Get job links from the scraper", "status": "passed", "start": 1703843466012, "stop": 1703843466012}, {"name": "Step 2: Get job links from the Peviitor API", "status": "passed", "start": 1703843466012, "stop": 1703843466012}, {"name": "Step 3: Compare job links from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing the following job links: ['https://vetro.vet/cariere/reprezentant-medical-veterinar-promovare-3/', 'https://vetro.vet/cariere/specialist-marketing-3/']\n  \n  \nassert ['https://vet...marketing-3/'] == []\n  Left contains 2 more items, first extra item: 'https://vetro.vet/cariere/reprezentant-medical-veterinar-promovare-3/'\n  Full diff:\n    [\n  -  ,\n  +  'https://vetro.vet/cariere/reprezentant-medical-veterinar-promovare-3/',\n  +  'https://vetro.vet/cariere/specialist-marketing-3/',\n    ]\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 176, in test_scrapers_link\n    assert job_links_scraper == job_links_peviitor, f\"Peviitor is missing the following job links: {missing_job_links}\\n\\n\"\n"}, "start": 1703843466012, "stop": 1703843466013}], "attachments": [{"name": "stdout", "source": "2360f691-bd0e-4d30-8279-199c0f0f0c7e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.vetro.vetroScraper'>"}], "start": 1703843466012, "stop": 1703843466013, "uuid": "b289375b-20da-4ee0-93bc-c34da6d4d44e", "historyId": "dc961c0026525343378fb0b671fc5d0c", "testCaseId": "5166eb21b2abf1f7b6b25fcad406d485", "fullName": "test_api.TestScrapers#test_scrapers_link", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az656-245"}, {"name": "thread", "value": "1973-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}