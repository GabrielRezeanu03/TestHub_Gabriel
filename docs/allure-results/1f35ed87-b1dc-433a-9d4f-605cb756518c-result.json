{"name": "Test job countries from the gazduirejocuri website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries for the following job titles: ['Software Developers', 'JAVA Developers', 'Tehnical Game Hosting Specialist', 'Tehnical Web Hosting Specialist', 'Social Media & Marketing']", "trace": "get_job_details = ((['Software Developers', 'JAVA Developers', 'Tehnical Game Hosting Specialist', 'Tehnical Web Hosting Specialist', 'S...www.gazduirejocuri.ro/cariere/#5'], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site']), ([], [], [], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_gazduirejocuri_country_api(get_job_details):\n        allure.dynamic.title(f\"Test job countries from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job countries and titles from the scraper\"):\n            job_countries_scraper = scraped_jobs_data[2]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job countries and titles from the Peviitor API\"):\n            job_countries_peviitor = peviitor_jobs_data[2]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job countries from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_countries_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_countries_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_gazduirejocuri.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7ff45c1afb20>\nexpected_countries = ['Romania', 'Romania', 'Romania', 'Romania', 'Romania']\nactual_countries = []\njob_titles_scraper = ['Software Developers', 'JAVA Developers', 'Tehnical Game Hosting Specialist', 'Tehnical Web Hosting Specialist', 'Social Media & Marketing']\napi_job_titles = []\n\n    def check_job_countries(self, expected_countries, actual_countries, job_titles_scraper, api_job_titles):\n        if not expected_countries:\n            msg = f\"Scraper is not grabbing any job countries\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occured\"\n    \n        # Check job countries from scraper against the peviitor api\n        scraper_actual_countries, scraper_job_titles = self.get_different_items(expected_countries, actual_countries, job_titles_scraper)\n    \n        if scraper_actual_countries:\n            msg = f\"Peviitor is missing job countries for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job countries for the following job titles: ['Software Developers', 'JAVA Developers', 'Tehnical Game Hosting Specialist', 'Tehnical Web Hosting Specialist', 'Social Media & Marketing']\n\ntests/utils.py:168: AssertionError"}, "steps": [{"name": "Step 1: Get job countries and titles from the scraper", "status": "passed", "start": 1718514720233, "stop": 1718514720233}, {"name": "Step 2: Get job countries and titles from the Peviitor API", "status": "passed", "start": 1718514720233, "stop": 1718514720233}, {"name": "Step 3: Compare job countries from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job countries for the following job titles: ['Software Developers', 'JAVA Developers', 'Tehnical Game Hosting Specialist', 'Tehnical Web Hosting Specialist', 'Social Media & Marketing']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_gazduirejocuri.py\", line 76, in test_gazduirejocuri_country_api\n    TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 168, in check_job_countries\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "39a2e013-9182-455a-bb5b-c73c58e9be93-attachment.attach"}, {"name": "Actual Results", "source": "b6408077-e123-4bb4-87aa-dfcf4d9f8807-attachment.attach"}], "start": 1718514720233, "stop": 1718514720233}], "start": 1718514720233, "stop": 1718514720234, "uuid": "7c59b37e-2bf0-48f4-b0ce-f218d16f62b3", "historyId": "6cab21d4556a7839ed0fb1ec06b55185", "testCaseId": "6cab21d4556a7839ed0fb1ec06b55185", "fullName": "Test_API_Suite.test_gazduirejocuri#test_gazduirejocuri_country_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_gazduirejocuri"}, {"name": "host", "value": "fv-az835-396"}, {"name": "thread", "value": "2247-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_gazduirejocuri"}]}