{"name": "Test job cities from the speedservicesatumare website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['ELECTRICIAN AUTO']", "trace": "get_job_details = ((['MECANIC AUTO', 'ELECTRICIAN AUTO'], [['Satu Mare'], ['Satu Mare']], ['Romania', 'Romania'], ['https://speedservice..., [['Satu Mare']], ['Romania'], ['https://speedservicesatumare.ro/cariere/#2'], ['Speedservicesatumare'], ['on-site']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_speedservicesatumare_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities and titles from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities and titles from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_speedservicesatumare.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fa0e3ec3400>\nexpected_cities = [['Satu Mare'], ['Satu Mare']]\nactual_cities = [['Satu Mare']]\njob_titles_scraper = ['MECANIC AUTO', 'ELECTRICIAN AUTO']\napi_job_titles = ['ELECTRICIAN AUTO']\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper, api_job_titles):\n        if not expected_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occurred\"\n    \n        # Check jobs from scraper against the peviitor api\n        scraper_actual_cities, scraper_job_titles = self.get_different_items(expected_cities, actual_cities, job_titles_scraper)\n    \n        if scraper_actual_cities:\n            msg = f\"Peviitor is missing job cities for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job cities for the following job titles: ['ELECTRICIAN AUTO']\n\ntests/utils.py:141: AssertionError"}, "steps": [{"name": "Step 1: Get job cities and titles from the scraper", "status": "passed", "start": 1718169135943, "stop": 1718169135943}, {"name": "Step 2: Get job cities and titles from the Peviitor API", "status": "passed", "start": 1718169135943, "stop": 1718169135943}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['ELECTRICIAN AUTO']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_speedservicesatumare.py\", line 56, in test_speedservicesatumare_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 141, in check_job_cities\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "b7d60079-d9b1-46c9-a6cc-a6695912be89-attachment.attach"}, {"name": "Actual Results", "source": "f66d8fc5-49d4-4dc6-bc39-9385b5c8c4d5-attachment.attach"}], "start": 1718169135943, "stop": 1718169135943}], "start": 1718169135943, "stop": 1718169135943, "uuid": "6719ea31-a42c-47e9-8953-47766f9d1a70", "historyId": "1e34e01333f3e23231e6aebdaf665550", "testCaseId": "1e34e01333f3e23231e6aebdaf665550", "fullName": "Test_API_Suite.test_speedservicesatumare#test_speedservicesatumare_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_speedservicesatumare"}, {"name": "host", "value": "fv-az2034-334"}, {"name": "thread", "value": "2198-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_speedservicesatumare"}]}