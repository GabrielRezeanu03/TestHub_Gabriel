{"name": "Test job cities from the InterbrandsOrbico website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bacau'], [...uresti'], ...] == [['Bacau'], [...uresti'], ...]\n  At index 2 diff: ['Bistrita'] != ['Baia Mare']\n  Left contains one more item: ['Zalau']\n  Full diff:\n    [\n     ['Bacau'],\n     ['Bacau'],\n  -  ['Baia Mare'],\n     ['Bistrita'],\n  +  ['Braila'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n  +  ['CLUJ'],\n  +  ['Calarasi'],\n     ['Cluj'],\n  -  ['Cluj'],\n  -  ['Constanta'],\n     ['Constanta'],\n     ['Craiova'],\n     ['Craiova'],\n     ['Deva'],\n     ['Domnesti'],\n     ['Domnesti'],\n     ['Domnesti'],\n     ['Domnesti'],\n     ['Dragasani'],\n  +  ['Hunedoara'],\n     ['Iasi'],\n     ['Onesti'],\n     ['Oradea'],\n     ['Pitesti'],\n     ['Pitesti'],\n     ['Ramnicu Valcea'],\n     ['Ramnicu Valcea'],\n  -  ['Râmnicu Vâlcea'],\n     ['Sibiu'],\n  +  ['Slobozia'],\n     ['Targoviste'],\n  +  ['Targu-Mures'],\n     ['Targu-Mures'],\n     ['Targu-Mures'],\n     ['Timisoara'],\n     ['Timisoara'],\n  -  ['Timisoara'],\n     ['Zalau'],\n    ]", "trace": "self = <test_api.TestScrapers object at 0x7f26cd47e560>\nsetup_tests = <test_api.SetupTests object at 0x7f26ccf6dae0>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_city(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = sorted(setup_tests.scraped_jobs_data[1])\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = sorted(setup_tests.peviitor_jobs_data[1])\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            print(f\"Expected Results: {job_cities_scraper}\\n\")\n            print(f\"Actual Results: {job_cities_peviitor}\")\n    \n            if job_cities_scraper != job_cities_peviitor:\n>               assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\nE               AssertionError: Peviitor is having extra jobs cities\nE                 \nE                 \nE               assert [['Bacau'], [...uresti'], ...] == [['Bacau'], [...uresti'], ...]\nE                 At index 2 diff: ['Bistrita'] != ['Baia Mare']\nE                 Left contains one more item: ['Zalau']\nE                 Full diff:\nE                   [\nE                    ['Bacau'],\nE                    ['Bacau'],\nE                 -  ['Baia Mare'],\nE                    ['Bistrita'],\nE                 +  ['Braila'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                    ['Bucuresti'],\nE                 +  ['CLUJ'],\nE                 +  ['Calarasi'],\nE                    ['Cluj'],\nE                 -  ['Cluj'],\nE                 -  ['Constanta'],\nE                    ['Constanta'],\nE                    ['Craiova'],\nE                    ['Craiova'],\nE                    ['Deva'],\nE                    ['Domnesti'],\nE                    ['Domnesti'],\nE                    ['Domnesti'],\nE                    ['Domnesti'],\nE                    ['Dragasani'],\nE                 +  ['Hunedoara'],\nE                    ['Iasi'],\nE                    ['Onesti'],\nE                    ['Oradea'],\nE                    ['Pitesti'],\nE                    ['Pitesti'],\nE                    ['Ramnicu Valcea'],\nE                    ['Ramnicu Valcea'],\nE                 -  ['Râmnicu Vâlcea'],\nE                    ['Sibiu'],\nE                 +  ['Slobozia'],\nE                    ['Targoviste'],\nE                 +  ['Targu-Mures'],\nE                    ['Targu-Mures'],\nE                    ['Targu-Mures'],\nE                    ['Timisoara'],\nE                    ['Timisoara'],\nE                 -  ['Timisoara'],\nE                    ['Zalau'],\nE                   ]\n\ntests/test_api.py:115: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1703781292113, "stop": 1703781292113}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1703781292113, "stop": 1703781292113}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bacau'], [...uresti'], ...] == [['Bacau'], [...uresti'], ...]\n  At index 2 diff: ['Bistrita'] != ['Baia Mare']\n  Left contains one more item: ['Zalau']\n  Full diff:\n    [\n     ['Bacau'],\n     ['Bacau'],\n  -  ['Baia Mare'],\n     ['Bistrita'],\n  +  ['Braila'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n     ['Bucuresti'],\n  +  ['CLUJ'],\n  +  ['Calarasi'],\n     ['Cluj'],\n  -  ['Cluj'],\n  -  ['Constanta'],\n     ['Constanta'],\n     ['Craiova'],\n     ['Craiova'],\n     ['Deva'],\n     ['Domnesti'],\n     ['Domnesti'],\n     ['Domnesti'],\n     ['Domnesti'],\n     ['Dragasani'],\n  +  ['Hunedoara'],\n     ['Iasi'],\n     ['Onesti'],\n     ['Oradea'],\n     ['Pitesti'],\n     ['Pitesti'],\n     ['Ramnicu Valcea'],\n     ['Ramnicu Valcea'],\n  -  ['Râmnicu Vâlcea'],\n     ['Sibiu'],\n  +  ['Slobozia'],\n     ['Targoviste'],\n  +  ['Targu-Mures'],\n     ['Targu-Mures'],\n     ['Targu-Mures'],\n     ['Timisoara'],\n     ['Timisoara'],\n  -  ['Timisoara'],\n     ['Zalau'],\n    ]\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 115, in test_scrapers_city\n    assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\n"}, "start": 1703781292113, "stop": 1703781292114}], "attachments": [{"name": "stdout", "source": "04dde4ad-0171-4a15-bf52-d2c9c844f049-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.interbrandsorbico.InterbrandsOrbicoScraper'>"}], "start": 1703781292113, "stop": 1703781292114, "uuid": "cee5bf63-f052-4d81-8913-2f504f28a247", "historyId": "c039411a00a8a9541a1f12eeb2fce17c", "testCaseId": "75f773d8d7bc6573a9e018ca8c499fa6", "fullName": "test_api.TestScrapers#test_scrapers_city", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az1025-617"}, {"name": "thread", "value": "1988-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}