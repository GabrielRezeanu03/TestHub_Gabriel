{"name": "Test job cities from the softing website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities for the following job titles: ['QA Automation Engineer_IA_Web Applications Team (Mid & Senior Level)']", "trace": "get_job_details = ((['QA Automation Engineer_IA_Web Applications Team (Mid & Senior Level)'], [['Cluj-Napoca']], ['Romania'], ['https://...a-automation-engineer-ia-web-applications-team-mid-senior-level.html'], ['softing', 'Softing'], ['On-site', 'Onsite']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_softing_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities and titles from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities and titles from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_softing.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f522c7a4ca0>\nexpected_cities = [['Cluj-Napoca']]\nactual_cities = [['Cluj-Napoca'], ['Cluj-Napoca']]\njob_titles_scraper = ['QA Automation Engineer_IA_Web Applications Team (Mid & Senior Level)']\napi_job_titles = ['Full-Stack Web Developer (Mid & Senior Level) (f/m)', 'QA Automation Engineer_IA_Web Applications Team (Mid & Senior Level)']\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper, api_job_titles):\n        if not expected_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occurred\"\n    \n        # Check jobs from scraper against the peviitor api\n        scraper_actual_cities, scraper_job_titles = self.get_different_items(expected_cities, actual_cities, job_titles_scraper)\n    \n        if scraper_actual_cities:\n            msg = f\"Peviitor is missing job cities for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n            raise AssertionError(msg)\n        else:\n            # Check jobs from peviitor against the scraper response\n            peviitor_actual_cities, peviitor_job_titles = self.get_different_items(actual_cities, expected_cities, api_job_titles)\n            if peviitor_actual_cities:\n                msg = f\"Peviitor is having extra job cities for the following job titles: {peviitor_job_titles}\"\n                allure.step(msg)\n>               raise AssertionError(msg)\nE               AssertionError: Peviitor is having extra job cities for the following job titles: ['QA Automation Engineer_IA_Web Applications Team (Mid & Senior Level)']\n\ntests/utils.py:148: AssertionError"}, "steps": [{"name": "Step 1: Get job cities and titles from the scraper", "status": "passed", "start": 1718255619924, "stop": 1718255619925}, {"name": "Step 2: Get job cities and titles from the Peviitor API", "status": "passed", "start": 1718255619925, "stop": 1718255619925}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job cities for the following job titles: ['QA Automation Engineer_IA_Web Applications Team (Mid & Senior Level)']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_softing.py\", line 56, in test_softing_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 148, in check_job_cities\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "f12a1f25-f3fc-4b58-b70a-9bd1d9be0928-attachment.attach"}, {"name": "Actual Results", "source": "eeeb6a2b-ca8d-466a-8a2d-3a87d46a9fec-attachment.attach"}], "start": 1718255619925, "stop": 1718255619925}], "start": 1718255619924, "stop": 1718255619925, "uuid": "a7ddd624-2175-4635-b434-61d53200ca3c", "historyId": "3e1d5a4a7716cd8f69c78475389c3423", "testCaseId": "3e1d5a4a7716cd8f69c78475389c3423", "fullName": "Test_API_Suite.test_softing#test_softing_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_softing"}, {"name": "host", "value": "fv-az1790-323"}, {"name": "thread", "value": "1966-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_softing"}]}