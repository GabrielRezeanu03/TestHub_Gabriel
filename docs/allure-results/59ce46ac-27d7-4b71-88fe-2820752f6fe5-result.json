{"name": "Test job titles from the velpitar website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing the following job titles: ['Electrician întreţinere şi reparaţii – Chitila']\n  \n  \nassert ['Absolvent I...curesti', ...] == ['Absolvent I...curesti', ...]\n  At index 12 diff: 'Electrician întreţinere şi reparaţii – Chitila' != 'Electrician întreținere și reparații - București, Cluj'\n  Left contains one more item: 'Șofer distributie - Brașov'\n  Full diff:\n    [\n     'Absolvent Inginerie electrică, Electronică, Automatizări - Iași',\n     'Ambalator - Pitești',\n     'Ambalator manual/Brutar - Brașov',\n     'Analist financiar junior - București',\n     'Analist financiar senior - București',\n     'Analist vanzari - Bucuresti',\n     'Brand Manager - Bucuresti',\n     'Brutar - Iași',\n     'Brutar - Pitești',\n     'Brutar – Brașov',\n     'Conducător autospecială - Iași',\n     'Electrician de intreținere și reparații - Giurgiu',\n  +  'Electrician întreţinere şi reparaţii – Chitila',\n     'Electrician întreținere și reparații - București, Cluj',\n     'Electrician întreținere și reparații - Iași',\n     'Gestionar depozit - Brasov',\n     'Gestionar depozit - Iasi',\n     'Inginer mentenanța - Chitila',\n     'Lăcătuș mecanic - Iași',\n     'Lăcătuș mecanic / Instalator – Chitila',\n     'Manager Vanzari IKA / Key Account Manager - București',\n     'Manager Vânzări (Distribuitori) - București',\n     'Manager zonă – Oradea',\n     'Manipulant mărfuri/Picker - Iași',\n     'Mecanic/Lacătuș mecanic - Giurgiu',\n     'Operator producție - Iași',\n     'Șef formație - Iași',\n     'Șofer distributie - Brașov',\n    ]", "trace": "self = <test_api.TestScrapers object at 0x7fc617324580>\nsetup_tests = <test_api.SetupTests object at 0x7fc616f16560>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_title(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(setup_tests.scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(setup_tests.peviitor_jobs_data[0])\n    \n        missing_job_titles = []\n        # Itterate over job titles and if not present on peviitor add to missing job title list\n        for job_title in job_titles_scraper:\n            if job_title not in job_titles_peviitor:\n                missing_job_titles.append(job_title)\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            # If the missing job list is empty it might mean there are more jobs on peviitor than needed\n            if missing_job_titles == []:\n                missing_job_titles_peviitor = []\n                for job_title in job_titles_peviitor:\n                    if job_title not in job_titles_scraper:\n                        missing_job_titles_peviitor.append(job_title)\n    \n                # If there are way too many jobs titles only list a couple of them\n                if len(missing_job_titles_peviitor) > 20:\n                    missing_job_titles_peviitor = f\"{missing_job_titles_peviitor[:5]} and many more\"\n    \n                print(f\"Expected Results: {job_titles_scraper}\\n\")\n                print(f\"Actual Results: {job_titles_peviitor}\")\n                assert job_titles_scraper == job_titles_peviitor, f\"Peviitor is having the following extra jobs titles: {missing_job_titles_peviitor}\\n\\n\"\n            else:\n                if len(missing_job_titles) > 20:\n                    missing_job_titles = f\"{missing_job_titles[:5]} and many more\"\n    \n                print(f\"Expected Results: {job_titles_scraper}\\n\")\n                print(f\"Actual Results: {job_titles_peviitor}\")\n>               assert job_titles_scraper == job_titles_peviitor, f\"Peviitor is missing the following job titles: {missing_job_titles}\\n\\n\"\nE               AssertionError: Peviitor is missing the following job titles: ['Electrician întreţinere şi reparaţii – Chitila']\nE                 \nE                 \nE               assert ['Absolvent I...curesti', ...] == ['Absolvent I...curesti', ...]\nE                 At index 12 diff: 'Electrician întreţinere şi reparaţii – Chitila' != 'Electrician întreținere și reparații - București, Cluj'\nE                 Left contains one more item: 'Șofer distributie - Brașov'\nE                 Full diff:\nE                   [\nE                    'Absolvent Inginerie electrică, Electronică, Automatizări - Iași',\nE                    'Ambalator - Pitești',\nE                    'Ambalator manual/Brutar - Brașov',\nE                    'Analist financiar junior - București',\nE                    'Analist financiar senior - București',\nE                    'Analist vanzari - Bucuresti',\nE                    'Brand Manager - Bucuresti',\nE                    'Brutar - Iași',\nE                    'Brutar - Pitești',\nE                    'Brutar – Brașov',\nE                    'Conducător autospecială - Iași',\nE                    'Electrician de intreținere și reparații - Giurgiu',\nE                 +  'Electrician întreţinere şi reparaţii – Chitila',\nE                    'Electrician întreținere și reparații - București, Cluj',\nE                    'Electrician întreținere și reparații - Iași',\nE                    'Gestionar depozit - Brasov',\nE                    'Gestionar depozit - Iasi',\nE                    'Inginer mentenanța - Chitila',\nE                    'Lăcătuș mecanic - Iași',\nE                    'Lăcătuș mecanic / Instalator – Chitila',\nE                    'Manager Vanzari IKA / Key Account Manager - București',\nE                    'Manager Vânzări (Distribuitori) - București',\nE                    'Manager zonă – Oradea',\nE                    'Manipulant mărfuri/Picker - Iași',\nE                    'Mecanic/Lacătuș mecanic - Giurgiu',\nE                    'Operator producție - Iași',\nE                    'Șef formație - Iași',\nE                    'Șofer distributie - Brașov',\nE                   ]\n\ntests/test_api.py:93: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1703867599119, "stop": 1703867599119}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1703867599119, "stop": 1703867599119}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing the following job titles: ['Electrician întreţinere şi reparaţii – Chitila']\n  \n  \nassert ['Absolvent I...curesti', ...] == ['Absolvent I...curesti', ...]\n  At index 12 diff: 'Electrician întreţinere şi reparaţii – Chitila' != 'Electrician întreținere și reparații - București, Cluj'\n  Left contains one more item: 'Șofer distributie - Brașov'\n  Full diff:\n    [\n     'Absolvent Inginerie electrică, Electronică, Automatizări - Iași',\n     'Ambalator - Pitești',\n     'Ambalator manual/Brutar - Brașov',\n     'Analist financiar junior - București',\n     'Analist financiar senior - București',\n     'Analist vanzari - Bucuresti',\n     'Brand Manager - Bucuresti',\n     'Brutar - Iași',\n     'Brutar - Pitești',\n     'Brutar – Brașov',\n     'Conducător autospecială - Iași',\n     'Electrician de intreținere și reparații - Giurgiu',\n  +  'Electrician întreţinere şi reparaţii – Chitila',\n     'Electrician întreținere și reparații - București, Cluj',\n     'Electrician întreținere și reparații - Iași',\n     'Gestionar depozit - Brasov',\n     'Gestionar depozit - Iasi',\n     'Inginer mentenanța - Chitila',\n     'Lăcătuș mecanic - Iași',\n     'Lăcătuș mecanic / Instalator – Chitila',\n     'Manager Vanzari IKA / Key Account Manager - București',\n     'Manager Vânzări (Distribuitori) - București',\n     'Manager zonă – Oradea',\n     'Manipulant mărfuri/Picker - Iași',\n     'Mecanic/Lacătuș mecanic - Giurgiu',\n     'Operator producție - Iași',\n     'Șef formație - Iași',\n     'Șofer distributie - Brașov',\n    ]\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 93, in test_scrapers_title\n    assert job_titles_scraper == job_titles_peviitor, f\"Peviitor is missing the following job titles: {missing_job_titles}\\n\\n\"\n"}, "start": 1703867599119, "stop": 1703867599120}], "attachments": [{"name": "stdout", "source": "095bcd1b-14d8-4687-9ff3-a910788c7358-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.velpitar.velpitarScraper'>"}], "start": 1703867599119, "stop": 1703867599120, "uuid": "9aebe38d-c395-40de-b51a-99fcc545ad75", "historyId": "d8ded51ac28866ff1e12abc59f96c303", "testCaseId": "4b62ec59580b850c2662da4323212e24", "fullName": "test_api.TestScrapers#test_scrapers_title", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az1531-188"}, {"name": "thread", "value": "1990-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}