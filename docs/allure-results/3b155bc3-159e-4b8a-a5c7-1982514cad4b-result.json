{"name": "Test job titles from the arcadiamedical website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Asistent Medical Generalist Geriatrie', 'Asistent Medical Generalist Recuperare Medicală', 'Asistent medical generalist (spital si ambulatoriu)', 'Asistent medical generalist Ambulatoriu', 'Asistent medical generalist Bloc Operator', 'Asistent medical generalist Chirurgie', 'Asistent medical generalist voluntar (ambulatoriu si spital)', 'Consilier relații clienți', 'Fiziokinetoterapeut', 'Infirmiera', 'Medic specialist/primar Alergologie', 'Medic specialist/primar Dermatologie', 'Medic specialist/primar Gastroenterologie', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Neurologie', 'Medic specialist/primar Obstetrică-Ginecologie', 'Medic specialist/primar Pneumologie', 'Medic specialist/primar Recuperare medicală', 'Psiholog clinician', 'Specialist Resurse Umane']", "trace": "get_job_details = ((['Psiholog clinician', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Pneumologie', 'Medic speciali...o/cariere#6', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]), ([], [], [], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_arcadiamedical_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_arcadiamedical.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fe4031ead10>\nexpected_titles = ['Asistent Medical Generalist Geriatrie', 'Asistent Medical Generalist Recuperare Medicală', 'Asistent medical general...cal generalist Ambulatoriu', 'Asistent medical generalist Bloc Operator', 'Asistent medical generalist Chirurgie', ...]\nactual_titles = []\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: ['Asistent Medical Generalist Geriatrie', 'Asistent Medical Generalist Recuperare Medicală', 'Asistent medical generalist (spital si ambulatoriu)', 'Asistent medical generalist Ambulatoriu', 'Asistent medical generalist Bloc Operator', 'Asistent medical generalist Chirurgie', 'Asistent medical generalist voluntar (ambulatoriu si spital)', 'Consilier relații clienți', 'Fiziokinetoterapeut', 'Infirmiera', 'Medic specialist/primar Alergologie', 'Medic specialist/primar Dermatologie', 'Medic specialist/primar Gastroenterologie', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Neurologie', 'Medic specialist/primar Obstetrică-Ginecologie', 'Medic specialist/primar Pneumologie', 'Medic specialist/primar Recuperare medicală', 'Psiholog clinician', 'Specialist Resurse Umane']\n\ntests/utils.py:124: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1718514641565, "stop": 1718514641565}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1718514641565, "stop": 1718514641565}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Asistent Medical Generalist Geriatrie', 'Asistent Medical Generalist Recuperare Medicală', 'Asistent medical generalist (spital si ambulatoriu)', 'Asistent medical generalist Ambulatoriu', 'Asistent medical generalist Bloc Operator', 'Asistent medical generalist Chirurgie', 'Asistent medical generalist voluntar (ambulatoriu si spital)', 'Consilier relații clienți', 'Fiziokinetoterapeut', 'Infirmiera', 'Medic specialist/primar Alergologie', 'Medic specialist/primar Dermatologie', 'Medic specialist/primar Gastroenterologie', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Neurologie', 'Medic specialist/primar Obstetrică-Ginecologie', 'Medic specialist/primar Pneumologie', 'Medic specialist/primar Recuperare medicală', 'Psiholog clinician', 'Specialist Resurse Umane']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_arcadiamedical.py\", line 37, in test_arcadiamedical_title_api\n    TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 124, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "cb68e35d-5add-4fb9-943f-d32249735129-attachment.attach"}, {"name": "Actual Results", "source": "3428fac1-c8f3-4e10-8de8-1f7560fb98e2-attachment.attach"}], "start": 1718514641565, "stop": 1718514641565}], "start": 1718514641564, "stop": 1718514641565, "uuid": "f7961df2-f1d2-43c5-89d3-12b0da1b7e20", "historyId": "2f0202856428e5ebd2d7555b43c9d1ad", "testCaseId": "2f0202856428e5ebd2d7555b43c9d1ad", "fullName": "Test_API_Suite.test_arcadiamedical#test_arcadiamedical_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_arcadiamedical"}, {"name": "host", "value": "fv-az835-396"}, {"name": "thread", "value": "2241-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_arcadiamedical"}]}