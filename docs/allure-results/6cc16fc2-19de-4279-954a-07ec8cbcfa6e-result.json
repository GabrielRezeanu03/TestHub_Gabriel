{"name": "Test job cities from the elytishospital website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Medic Specialist / Primar Reumatolog', 'Asistent medical generalist', 'Kinetoterapeut', 'Infirmier', 'Medic Primar / Specialist in diabet zaharat, nutritie si boli metabolice', 'Medic Specialist / Primar Oncolog', 'Asistent medical radiologie / radioterapie', 'Ofertă de Colaborare cu Psiholog Clinician', 'Consilier Relații Clienți', 'Medic Specialist / Primar Ginecolog', 'Medic Specialist / Primar Hematologie', 'Medic Specialist / Primar Chirurgie plastică', 'Medic Specialist / Primar Gastroenterologie', 'Medic Specialist / Primar Endocrinologie', 'Medic Specialist / Primar Dermatolog']", "trace": "get_job_details = ((['Medic Specialist / Primar Oftalmologie', 'Medic Specialist / Primar Pneumolog', 'Medic Specialist / Primar Neurolo...'elytishospital', 'elytishospital', 'elytishospital', 'elytishospital'], ['on-site', 'on-site', 'on-site', 'on-site']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_elytishospital_city_api(get_job_details):\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job cities and titles from the scraper\"):\n            job_cities_scraper = scraped_jobs_data[1]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job cities and titles from the Peviitor API\"):\n            job_cities_peviitor = peviitor_jobs_data[1]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_cities_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_cities_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_elytishospital.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f0693a0ab90>\nexpected_cities = [['Iasi'], ['Iasi'], ['Iasi'], ['Iasi'], ['Iasi'], ['Iasi'], ...]\nactual_cities = [['Iasi'], ['Iasi'], ['Iasi'], ['Iasi']]\njob_titles_scraper = ['Medic Specialist / Primar Oftalmologie', 'Medic Specialist / Primar Pneumolog', 'Medic Specialist / Primar Neurolog', 'Medic Specialist / Primar Cardiolog', 'Medic Specialist / Primar Reumatolog', 'Asistent medical generalist', ...]\napi_job_titles = ['Registrator medical / Operator call center', 'Infirmier', 'Contabil', 'Ofertă de Colaborare cu Psiholog Clinician']\n\n    def check_job_cities(self, expected_cities, actual_cities, job_titles_scraper, api_job_titles):\n        if not expected_cities:\n            msg = f\"Scraper is not grabbing any job cities\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occurred\"\n    \n        # Check jobs from scraper against the peviitor api\n        scraper_actual_cities, scraper_job_titles = self.get_different_items(expected_cities, actual_cities, job_titles_scraper)\n    \n        if scraper_actual_cities:\n            msg = f\"Peviitor is missing job cities for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Peviitor is missing job cities for the following job titles: ['Medic Specialist / Primar Reumatolog', 'Asistent medical generalist', 'Kinetoterapeut', 'Infirmier', 'Medic Primar / Specialist in diabet zaharat, nutritie si boli metabolice', 'Medic Specialist / Primar Oncolog', 'Asistent medical radiologie / radioterapie', 'Ofertă de Colaborare cu Psiholog Clinician', 'Consilier Relații Clienți', 'Medic Specialist / Primar Ginecolog', 'Medic Specialist / Primar Hematologie', 'Medic Specialist / Primar Chirurgie plastică', 'Medic Specialist / Primar Gastroenterologie', 'Medic Specialist / Primar Endocrinologie', 'Medic Specialist / Primar Dermatolog']\n\ntests/utils.py:141: AssertionError"}, "steps": [{"name": "Step 1: Get job cities and titles from the scraper", "status": "passed", "start": 1718601284451, "stop": 1718601284451}, {"name": "Step 2: Get job cities and titles from the Peviitor API", "status": "passed", "start": 1718601284451, "stop": 1718601284451}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is missing job cities for the following job titles: ['Medic Specialist / Primar Reumatolog', 'Asistent medical generalist', 'Kinetoterapeut', 'Infirmier', 'Medic Primar / Specialist in diabet zaharat, nutritie si boli metabolice', 'Medic Specialist / Primar Oncolog', 'Asistent medical radiologie / radioterapie', 'Ofertă de Colaborare cu Psiholog Clinician', 'Consilier Relații Clienți', 'Medic Specialist / Primar Ginecolog', 'Medic Specialist / Primar Hematologie', 'Medic Specialist / Primar Chirurgie plastică', 'Medic Specialist / Primar Gastroenterologie', 'Medic Specialist / Primar Endocrinologie', 'Medic Specialist / Primar Dermatolog']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_elytishospital.py\", line 56, in test_elytishospital_city_api\n    TestUtils().check_job_cities(job_cities_scraper, job_cities_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 141, in check_job_cities\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "336539da-c135-48c1-b516-7dc31ba61779-attachment.attach"}, {"name": "Actual Results", "source": "6521e562-3b2c-4dca-8a39-97c3c054abfa-attachment.attach"}], "start": 1718601284451, "stop": 1718601284451}], "start": 1718601284451, "stop": 1718601284451, "uuid": "5310922f-0902-4ad3-a015-537b64e3f335", "historyId": "bf43a2f8cb5dd3dc0efd9b86e6e04697", "testCaseId": "bf43a2f8cb5dd3dc0efd9b86e6e04697", "fullName": "Test_API_Suite.test_elytishospital#test_elytishospital_city_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_elytishospital"}, {"name": "host", "value": "fv-az1439-924"}, {"name": "thread", "value": "1996-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_elytishospital"}]}