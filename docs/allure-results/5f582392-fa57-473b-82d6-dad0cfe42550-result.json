{"name": "Test job countries from the arcadiamedical website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job countries for the following titles: ['Asistent medical generalist Bloc Operator', 'Asistent Medical Generalist Recuperare Medicală']", "trace": "get_job_details = ((['Psiholog clinician', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Pneumologie', 'Medic speciali...l', 'arcadiamedical', 'arcadiamedical', ...], ['on-site', 'on-site', 'on-site', 'on-site', 'on-site', 'on-site', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_arcadiamedical_country_api(get_job_details):\n        allure.dynamic.title(f\"Test job countries from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job countries and titles from the scraper\"):\n            job_countries_scraper = scraped_jobs_data[2]\n            job_titles_scraper = scraped_jobs_data[0]\n    \n        with allure.step(\"Step 2: Get job countries and titles from the Peviitor API\"):\n            job_countries_peviitor = peviitor_jobs_data[2]\n            job_titles_peviitor = peviitor_jobs_data[0]\n    \n        with allure.step(\"Step 3: Compare job countries from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_countries_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_countries_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_arcadiamedical.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f25649dc280>\nexpected_countries = ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', ...]\nactual_countries = ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', ...]\njob_titles_scraper = ['Psiholog clinician', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Pneumologie', 'Medic specialist/primar Neurologie', 'Medic specialist/primar Alergologie', 'Medic specialist/primar Dermatologie', ...]\napi_job_titles = ['Psiholog clinician', 'Medic specialist/primar Hematologie', 'Medic specialist/primar Pneumologie', 'Medic specialist/primar Neurologie', 'Medic specialist/primar Alergologie', 'Medic specialist/primar Dermatologie', ...]\n\n    def check_job_countries(self, expected_countries, actual_countries, job_titles_scraper, api_job_titles):\n        if not expected_countries:\n            msg = f\"Scraper is not grabbing any job countries\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        msg = \"An unknown error occured\"\n    \n        # Check job countries from scraper against the peviitor api\n        scraper_actual_countries, scraper_job_titles = self.get_different_items(expected_countries, actual_countries, job_titles_scraper)\n    \n        if scraper_actual_countries:\n            msg = f\"Peviitor is missing job countries for the following job titles: {scraper_job_titles}\"\n            allure.step(msg)\n            raise AssertionError(msg)\n        else:\n            # Check job countries from peviitor against the scraper response\n            peviitor_actual_countries, peviitor_job_titles = self.get_different_items(actual_countries, expected_countries, api_job_titles)\n            if peviitor_actual_countries:\n                msg = f\"Peviitor is having extra job countries for the following titles: {peviitor_job_titles}\"\n                allure.step(msg)\n>               raise AssertionError(msg)\nE               AssertionError: Peviitor is having extra job countries for the following titles: ['Asistent medical generalist Bloc Operator', 'Asistent Medical Generalist Recuperare Medicală']\n\ntests/utils.py:175: AssertionError"}, "steps": [{"name": "Step 1: Get job countries and titles from the scraper", "status": "passed", "start": 1712985097806, "stop": 1712985097806}, {"name": "Step 2: Get job countries and titles from the Peviitor API", "status": "passed", "start": 1712985097806, "stop": 1712985097806}, {"name": "Step 3: Compare job countries from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job countries for the following titles: ['Asistent medical generalist Bloc Operator', 'Asistent Medical Generalist Recuperare Medicală']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_arcadiamedical.py\", line 76, in test_arcadiamedical_country_api\n    TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor, job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 175, in check_job_countries\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "54ca5d11-8e6f-42fc-9d3c-a36842b7b46b-attachment.attach"}, {"name": "Actual Results", "source": "6c76692c-99e6-4767-82ff-99667e3e9e3a-attachment.attach"}], "start": 1712985097806, "stop": 1712985097806}], "start": 1712985097806, "stop": 1712985097806, "uuid": "cef13998-b74c-4bb7-97cb-0faa3957ee8c", "historyId": "f10e1ada04e2f54907f9d1e9c564abff", "testCaseId": "f10e1ada04e2f54907f9d1e9c564abff", "fullName": "Test_API_Suite.test_arcadiamedical#test_arcadiamedical_country_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_arcadiamedical"}, {"name": "host", "value": "fv-az1114-91"}, {"name": "thread", "value": "2164-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_arcadiamedical"}]}