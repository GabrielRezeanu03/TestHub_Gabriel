{"name": "Test http code response on job links for edutrust website", "status": "failed", "statusDetails": {"message": "AssertionError: Scraper is not grabbing any job links", "trace": "get_job_details = (([], [], [], []), (['Manager EDU TRUST', 'Profesor de Matematică în Învățământul Gimnazial și Liceal'], [['Oradea'], ...România'], ['https://www.edutrust.ro/cariera/#open-positions#1', 'https://www.edutrust.ro/cariera/#open-positions#2']))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_edutrust_status_code_link_api(get_job_details):\n        allure.dynamic.title(f\"Test http code response on job links for {company_name} website\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job links from the scraper\"):\n            job_links_scraper = sorted(scraped_jobs_data[3])\n    \n        with allure.step(\"Step 2: Check job links for response code\"):\n            status_codes_expected_result = [200] * len(job_links_scraper)\n            status_codes_actual_result = [requests.get(link).status_code for link in job_links_scraper]\n            allure.attach(f\"Expected Results: {status_codes_expected_result}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {status_codes_actual_result}\", name=\"Actual Results\")\n>           TestUtils().check_code_job_links(status_codes_expected_result, status_codes_actual_result)\n\ntests/Test_API_Suite/test_edutrust.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fc597e72320>\nstatus_codes_expected_result = [], status_codes_actual_result = []\n\n    def check_code_job_links(self, status_codes_expected_result, status_codes_actual_result):\n        http_codes = self.get_missing_items(status_codes_expected_result, status_codes_actual_result)\n        msg = \"\"\n    \n        if not http_codes:\n            msg = f\"Some job links from scraper do not return 200 http status code: {http_codes}\"\n            allure.step(msg)\n    \n        if not status_codes_expected_result and not status_codes_actual_result:\n            msg = f\"Scraper is not grabbing any job links\"\n            allure.step(msg)\n>           raise AssertionError(msg)\nE           AssertionError: Scraper is not grabbing any job links\n\ntests/utils.py:164: AssertionError"}, "steps": [{"name": "Step 1: Get job links from the scraper", "status": "passed", "start": 1711476550805, "stop": 1711476550805}, {"name": "Step 2: Check job links for response code", "status": "failed", "statusDetails": {"message": "AssertionError: Scraper is not grabbing any job links\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_edutrust.py\", line 101, in test_edutrust_status_code_link_api\n    TestUtils().check_code_job_links(status_codes_expected_result, status_codes_actual_result)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 164, in check_code_job_links\n    raise AssertionError(msg)\n"}, "attachments": [{"name": "Expected Results", "source": "297b184a-091f-4f5c-9dc2-3beda5755a58-attachment.attach"}, {"name": "Actual Results", "source": "6acb2837-33a5-4a52-8c53-00e7f1aa873c-attachment.attach"}], "start": 1711476550805, "stop": 1711476550805}], "start": 1711476550805, "stop": 1711476550805, "uuid": "660d886b-67ee-4d9c-a783-8fa39b2927b2", "historyId": "e28122bec3d41ae5b3dd9a219d0c8816", "testCaseId": "e28122bec3d41ae5b3dd9a219d0c8816", "fullName": "Test_API_Suite.test_edutrust#test_edutrust_status_code_link_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_edutrust"}, {"name": "host", "value": "fv-az713-320"}, {"name": "thread", "value": "1957-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_edutrust"}]}