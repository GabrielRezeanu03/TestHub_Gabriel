{"name": "Test job cities from the carturesti website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bucuresti'... 'Targu Jiu']] == [['București'... 'Targu Jiu']]\n  At index 0 diff: ['Bucuresti'] != ['București']\n  Full diff:\n    [\n  -  ['București'],\n  ?          ^\n  +  ['Bucuresti'],\n  ?          ^\n  -  ['București'],\n  ?          ^\n  +  ['Bucuresti'],\n  ?          ^\n  -  ['București', 'Cluj-Napoca', 'Timisoara'],\n  ?          ^\n  +  ['Bucuresti', 'Cluj-Napoca', 'Timisoara'],\n  ?          ^\n  -  ['București',\n  ?          ^\n  +  ['Bucuresti',\n  ?          ^\n      'Iasi',\n      'Cluj-Napoca',\n      'Craiova',\n      'Drobeta-Turnu Severin',\n      'Targu Jiu',\n      'Arad',\n      'Oradea',\n      'Pitesti',\n      'Timisoara',\n      'Zalau',\n      'Targu-Mures'],\n  -  ['București', 'Ramnicu Valcea', 'Targu Jiu'],\n  ?          ^\n  +  ['Bucuresti', 'Ramnicu Valcea', 'Targu Jiu'],\n  ?          ^\n    ]", "trace": "self = <test_api.TestScrapers object at 0x7f925d4e0160>\nsetup_tests = <test_api.SetupTests object at 0x7f925d06aad0>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_city(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = sorted(setup_tests.scraped_jobs_data[1])\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = sorted(setup_tests.peviitor_jobs_data[1])\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            print(f\"Expected Results: {job_cities_scraper}\\n\")\n            print(f\"Actual Results: {job_cities_peviitor}\")\n    \n            if job_cities_scraper != job_cities_peviitor:\n>               assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\nE               AssertionError: Peviitor is having extra jobs cities\nE                 \nE                 \nE               assert [['Bucuresti'... 'Targu Jiu']] == [['București'... 'Targu Jiu']]\nE                 At index 0 diff: ['Bucuresti'] != ['București']\nE                 Full diff:\nE                   [\nE                 -  ['București'],\nE                 ?          ^\nE                 +  ['Bucuresti'],\nE                 ?          ^\nE                 -  ['București'],\nE                 ?          ^\nE                 +  ['Bucuresti'],\nE                 ?          ^\nE                 -  ['București', 'Cluj-Napoca', 'Timisoara'],\nE                 ?          ^\nE                 +  ['Bucuresti', 'Cluj-Napoca', 'Timisoara'],\nE                 ?          ^\nE                 -  ['București',\nE                 ?          ^\nE                 +  ['Bucuresti',\nE                 ?          ^\nE                     'Iasi',\nE                     'Cluj-Napoca',\nE                     'Craiova',\nE                     'Drobeta-Turnu Severin',\nE                     'Targu Jiu',\nE                     'Arad',\nE                     'Oradea',\nE                     'Pitesti',\nE                     'Timisoara',\nE                     'Zalau',\nE                     'Targu-Mures'],\nE                 -  ['București', 'Ramnicu Valcea', 'Targu Jiu'],\nE                 ?          ^\nE                 +  ['Bucuresti', 'Ramnicu Valcea', 'Targu Jiu'],\nE                 ?          ^\nE                   ]\n\ntests/test_api.py:115: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1705813776565, "stop": 1705813776565}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1705813776565, "stop": 1705813776565}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Bucuresti'... 'Targu Jiu']] == [['București'... 'Targu Jiu']]\n  At index 0 diff: ['Bucuresti'] != ['București']\n  Full diff:\n    [\n  -  ['București'],\n  ?          ^\n  +  ['Bucuresti'],\n  ?          ^\n  -  ['București'],\n  ?          ^\n  +  ['Bucuresti'],\n  ?          ^\n  -  ['București', 'Cluj-Napoca', 'Timisoara'],\n  ?          ^\n  +  ['Bucuresti', 'Cluj-Napoca', 'Timisoara'],\n  ?          ^\n  -  ['București',\n  ?          ^\n  +  ['Bucuresti',\n  ?          ^\n      'Iasi',\n      'Cluj-Napoca',\n      'Craiova',\n      'Drobeta-Turnu Severin',\n      'Targu Jiu',\n      'Arad',\n      'Oradea',\n      'Pitesti',\n      'Timisoara',\n      'Zalau',\n      'Targu-Mures'],\n  -  ['București', 'Ramnicu Valcea', 'Targu Jiu'],\n  ?          ^\n  +  ['Bucuresti', 'Ramnicu Valcea', 'Targu Jiu'],\n  ?          ^\n    ]\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 115, in test_scrapers_city\n    assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\n"}, "start": 1705813776565, "stop": 1705813776567}], "attachments": [{"name": "stdout", "source": "319d6821-62c6-45c4-a0d3-6a165a219ccb-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.carturesti.carturestiScraper'>"}], "start": 1705813776565, "stop": 1705813776567, "uuid": "4df0d872-6982-4c74-8cd5-907a08476861", "historyId": "fb126c9fbf10e19e163da4d9bc4c9625", "testCaseId": "75f773d8d7bc6573a9e018ca8c499fa6", "fullName": "test_api.TestScrapers#test_scrapers_city", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az1041-953"}, {"name": "thread", "value": "2019-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}