{"name": "test_scrapers_country[sephoraScraper]", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job countries\n  \n  \nassert ['România', '...a', 'România'] == ['România', '...a', 'România']\n  Right contains one more item: 'România'\n  Full diff:\n  - ['România', 'România', 'România', 'România', 'România']\n  ?                                   -----------\n  + ['România', 'România', 'România', 'România']", "trace": "self = <test_api.TestScrapers object at 0x7f7446e05a20>\nsetup_tests = <test_api.SetupTests object at 0x7f7446c2ccd0>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_country(self, setup_tests):\n        print(f\"Validate job countries from the company website against Peviitor API Response\\n\")\n    \n        print(\"Step 1: Get job countries from the scraper\")\n        job_countries_scraper = sorted(setup_tests.scraped_jobs_data[2])\n    \n        print(\"Step 2: Get job countries from the Peviitor API\")\n        job_countries_peviitor = sorted(setup_tests.peviitor_jobs_data[2])\n    \n        print(\"Step 3: Compare job countries from scraper response against Peviitor API Response\\n\")\n        print(f\"Expected Results: {job_countries_scraper}\\n\")\n        print(f\"Actual Results: {job_countries_peviitor}\")\n        if job_countries_scraper != job_countries_peviitor:\n>           assert job_countries_scraper == job_countries_peviitor, f\"Peviitor is having extra job countries\\n\\n\"\nE           AssertionError: Peviitor is having extra job countries\nE             \nE             \nE           assert ['România', '...a', 'România'] == ['România', '...a', 'România']\nE             Right contains one more item: 'România'\nE             Full diff:\nE             - ['România', 'România', 'România', 'România', 'România']\nE             ?                                   -----------\nE             + ['România', 'România', 'România', 'România']\n\ntests/test_api.py:117: AssertionError"}, "attachments": [{"name": "stdout", "source": "528cbf62-b65b-460b-a440-d9ac3adc3db0-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.sephora.sephoraScraper'>"}], "start": 1703240349239, "stop": 1703240349240, "uuid": "3e7cbad8-62fc-4924-8b29-f59215f23a36", "historyId": "3f02a6e24dc30ce74ad219a830f135c7", "testCaseId": "220e543539d71e666c936b3b389140f9", "fullName": "tests.test_api.TestScrapers#test_scrapers_country", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_tests')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az839-512"}, {"name": "thread", "value": "2157-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}