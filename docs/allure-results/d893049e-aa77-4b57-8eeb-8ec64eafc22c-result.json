{"name": "Test job titles from the reginamaria website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Asistent Medical Radiologie si Imagistica', 'Medic Radiologie si Imagistica Medicala', 'Medic specialist diabet si nutritie', 'Receptionist Policlinici si Spitale', 'Receptionist Spitale si Policlinici', 'Specialist Retentie si Loializare', 'Tehnician - Electrician De Intretinere Si Reparatii']", "trace": "get_job_details = ((['Biolog/biochimist/chimist - Laborator Baneasa', 'Manager Sustenabilitate', 'Gestionar Spital Baneasa', 'Economist ...cina-muncii-8', 'https://cariere.reginamaria.ro/company/regina-maria-1/jobs/asistent-medical-medicina-muncii-1', ...]))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_reginamaria_title_api(get_job_details):\n        allure.dynamic.title(f\"Test job titles from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job titles from the scraper\"):\n            job_titles_scraper = sorted(scraped_jobs_data[0])\n    \n        with allure.step(\"Step 2: Get job titles from the Peviitor API\"):\n            job_titles_peviitor = sorted(peviitor_jobs_data[0])\n    \n        with allure.step(\"Step 3: Compare job titles from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_titles_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_titles_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n\ntests/Test_API_Suite/test_reginamaria.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7fcd7d834970>\nexpected_titles = ['-Asistent-Medical-Spital-', 'Analist Aplicatii Software', 'Analist Servicii Client', 'Asistent Medical - Dental', 'Asistent Medical Ambulatoriu', 'Asistent Medical FIV', ...]\nactual_titles = ['-Asistent-Medical-Spital-', 'Analist Aplicatii Software', 'Analist Servicii Client', 'Asistent Medical - Dental', 'Asistent Medical Ambulatoriu', 'Asistent Medical FIV', ...]\n\n    def check_job_titles(self, expected_titles, actual_titles):\n        missing_titles = self.get_missing_items(expected_titles, actual_titles)\n    \n        if missing_titles:\n            msg = f\"Peviitor is having extra job titles: {missing_titles}\"\n        else:\n            missing_titles = self.get_missing_items(actual_titles, expected_titles)\n            msg = f\"Peviitor is missing job titles: {missing_titles}\"\n    \n        if not expected_titles and not actual_titles:\n            msg = f\"Scraper is not grabbing any job titles\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_titles == actual_titles, msg\nE       AssertionError: Peviitor is having extra job titles: ['Asistent Medical Radiologie si Imagistica', 'Medic Radiologie si Imagistica Medicala', 'Medic specialist diabet si nutritie', 'Receptionist Policlinici si Spitale', 'Receptionist Spitale si Policlinici', 'Specialist Retentie si Loializare', 'Tehnician - Electrician De Intretinere Si Reparatii']\n\ntests/utils.py:96: AssertionError"}, "steps": [{"name": "Step 1: Get job titles from the scraper", "status": "passed", "start": 1707250346497, "stop": 1707250346497}, {"name": "Step 2: Get job titles from the Peviitor API", "status": "passed", "start": 1707250346497, "stop": 1707250346497}, {"name": "Step 3: Compare job titles from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job titles: ['Asistent Medical Radiologie si Imagistica', 'Medic Radiologie si Imagistica Medicala', 'Medic specialist diabet si nutritie', 'Receptionist Policlinici si Spitale', 'Receptionist Spitale si Policlinici', 'Specialist Retentie si Loializare', 'Tehnician - Electrician De Intretinere Si Reparatii']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_reginamaria.py\", line 36, in test_reginamaria_title_api\n    TestUtils().check_job_titles(job_titles_scraper, job_titles_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 96, in check_job_titles\n    assert expected_titles == actual_titles, msg\n"}, "attachments": [{"name": "Expected Results", "source": "b7ab16fc-08ad-4b49-9d2d-73ec44d0bf35-attachment.attach"}, {"name": "Actual Results", "source": "b8534857-fbde-4547-bb1b-29a94993a666-attachment.attach"}], "start": 1707250346497, "stop": 1707250346498}], "start": 1707250346497, "stop": 1707250346498, "uuid": "111505ca-515a-4647-bcba-57c5a2e29d0e", "historyId": "6acf474264a7ac6695694a26154cadcb", "testCaseId": "6acf474264a7ac6695694a26154cadcb", "fullName": "Test_API_Suite.test_reginamaria#test_reginamaria_title_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_reginamaria"}, {"name": "host", "value": "fv-az1539-592"}, {"name": "thread", "value": "2143-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_reginamaria"}]}