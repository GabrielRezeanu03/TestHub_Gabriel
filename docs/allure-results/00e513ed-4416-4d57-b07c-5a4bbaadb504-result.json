{"name": "Test job countries from the artvertising website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job countries: ['România', 'România', 'România', 'România', 'România', 'România', 'România']", "trace": "get_job_details = ((['Job Brand Manager', 'Job Specialist Comunicare', 'Job Specialist Marketing Content', 'Job Copywriter', 'Senior Gra...ner-iasi', 'https://www.artvertising.com.ro/cariere/digital-marketing-performance-specialist', ...]), ([], [], [], []))\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_artvertising_country_api(get_job_details):\n        allure.dynamic.title(f\"Test job countries from the {company_name} website against Peviitor API Response\")\n    \n        scraped_jobs_data, peviitor_jobs_data = get_job_details\n        with allure.step(\"Step 1: Get job countries from the scraper\"):\n            job_countries_scraper = sorted(scraped_jobs_data[2])\n        with allure.step(\"Step 2: Get job countries from the Peviitor API\"):\n            job_countries_peviitor = sorted(peviitor_jobs_data[2])\n    \n        with allure.step(\"Step 3: Compare job countries from scraper response against Peviitor API Response\"):\n            allure.attach(f\"Expected Results: {job_countries_scraper}\", name=\"Expected Results\")\n            allure.attach(f\"Actual Results: {job_countries_peviitor}\", name=\"Actual Results\")\n>           TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor)\n\ntests/Test_API_Suite/test_artvertising.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.utils.TestUtils object at 0x7f682fa26a40>\nexpected_countries = ['România', 'România', 'România', 'România', 'România', 'România', ...]\nactual_countries = []\n\n    def check_job_countries(self, expected_countries, actual_countries):\n        missing_countries = self.get_missing_items(expected_countries, actual_countries)\n    \n        if missing_countries:\n            msg = f\"Peviitor is having extra job countries: {missing_countries}\"\n        else:\n            missing_countries = self.get_missing_items(actual_countries, expected_countries)\n            msg = f\"Peviitor is missing job countries: {missing_countries}\"\n    \n        if not expected_countries and not actual_countries:\n            msg = f\"Scraper is not grabbing any job countries\"\n            allure.step(msg)\n            raise AssertionError(msg)\n    \n        allure.step(msg)\n>       assert expected_countries == actual_countries, msg\nE       AssertionError: Peviitor is having extra job countries: ['România', 'România', 'România', 'România', 'România', 'România', 'România']\n\ntests/utils.py:132: AssertionError"}, "steps": [{"name": "Step 1: Get job countries from the scraper", "status": "passed", "start": 1707250222283, "stop": 1707250222283}, {"name": "Step 2: Get job countries from the Peviitor API", "status": "passed", "start": 1707250222283, "stop": 1707250222283}, {"name": "Step 3: Compare job countries from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra job countries: ['România', 'România', 'România', 'România', 'România', 'România', 'România']\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/Test_API_Suite/test_artvertising.py\", line 69, in test_artvertising_country_api\n    TestUtils().check_job_countries(job_countries_scraper, job_countries_peviitor)\n  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/utils.py\", line 132, in check_job_countries\n    assert expected_countries == actual_countries, msg\n"}, "attachments": [{"name": "Expected Results", "source": "88c070c7-4c84-4916-aa07-d0410e37895b-attachment.attach"}, {"name": "Actual Results", "source": "c3cb9f13-1e36-4eda-b5ed-b94db67e872b-attachment.attach"}], "start": 1707250222283, "stop": 1707250222283}], "start": 1707250222283, "stop": 1707250222283, "uuid": "0089fc9a-ac1c-44fe-b06a-c3341da1dbf7", "historyId": "3373d074e4e0dab8b9efbe608aad7459", "testCaseId": "3373d074e4e0dab8b9efbe608aad7459", "fullName": "Test_API_Suite.test_artvertising#test_artvertising_country_api", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "Test_API_Suite"}, {"name": "suite", "value": "test_artvertising"}, {"name": "host", "value": "fv-az1539-592"}, {"name": "thread", "value": "2137-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_API_Suite.test_artvertising"}]}