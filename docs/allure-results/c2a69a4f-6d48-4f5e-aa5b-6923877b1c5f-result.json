{"name": "Test job cities from the bbcollection website against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Arad', 'Br... 'Timisoara']] == [['Arad', 'Br... 'Timisoara']]\n  At index 0 diff: ['Arad', 'Brasov', 'Bucuresti', 'Constanta', 'Cluj-Napoca', 'Craiova', 'Deva', 'Satu Mare', 'Suceava', 'Targu-Mures', 'Targoviste', 'Timisoara', 'Tulcea'] != ['Arad', 'Brasov', 'București', 'Constanta', 'Cluj-Napoca', 'Craiova', 'Deva', 'Satu Mare', 'Suceava', 'Targu-Mures', 'Targoviste', 'Timisoara', 'Tulcea']\n  Full diff:\n    [\n     ['Arad',\n      'Brasov',\n  -   'București',\n  ?          ^\n  +   'Bucuresti',\n  ?          ^\n      'Constanta',\n      'Cluj-Napoca',\n      'Craiova',\n      'Deva',\n      'Satu Mare',\n      'Suceava',\n      'Targu-Mures',\n      'Targoviste',\n      'Timisoara',\n      'Tulcea'],\n  -  ['București'],\n  ?          ^\n  +  ['Bucuresti'],\n  ?          ^\n  -  ['București'],\n  ?          ^\n  +  ['Bucuresti'],\n  ?          ^\n  -  ['București'],\n  ?          ^\n  +  ['Bucuresti'],\n  ?          ^\n  -  ['București', 'Cluj-Napoca', 'Timisoara'],\n  ?          ^\n  +  ['Bucuresti', 'Cluj-Napoca', 'Timisoara'],\n  ?          ^\n    ]", "trace": "self = <test_api.TestScrapers object at 0x7efded787d90>\nsetup_tests = <test_api.SetupTests object at 0x7efded5fff40>\n\n    @pytest.mark.regression\n    @pytest.mark.API\n    def test_scrapers_city(self, setup_tests):\n    \n        # Dynamically set the title with the company name\n        company_name = setup_tests.scraper_data[1]\n        allure.dynamic.title(f\"Test job cities from the {company_name} website against Peviitor API Response\")\n    \n        with allure.step(\"Step 1: Get job cities from the scraper\"):\n            job_cities_scraper = sorted(setup_tests.scraped_jobs_data[1])\n    \n        with allure.step(\"Step 2: Get job cities from the Peviitor API\"):\n            job_cities_peviitor = sorted(setup_tests.peviitor_jobs_data[1])\n    \n        with allure.step(\"Step 3: Compare job cities from scraper response against Peviitor API Response\"):\n            print(f\"Expected Results: {job_cities_scraper}\\n\")\n            print(f\"Actual Results: {job_cities_peviitor}\")\n    \n            if job_cities_scraper != job_cities_peviitor:\n>               assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\nE               AssertionError: Peviitor is having extra jobs cities\nE                 \nE                 \nE               assert [['Arad', 'Br... 'Timisoara']] == [['Arad', 'Br... 'Timisoara']]\nE                 At index 0 diff: ['Arad', 'Brasov', 'Bucuresti', 'Constanta', 'Cluj-Napoca', 'Craiova', 'Deva', 'Satu Mare', 'Suceava', 'Targu-Mures', 'Targoviste', 'Timisoara', 'Tulcea'] != ['Arad', 'Brasov', 'București', 'Constanta', 'Cluj-Napoca', 'Craiova', 'Deva', 'Satu Mare', 'Suceava', 'Targu-Mures', 'Targoviste', 'Timisoara', 'Tulcea']\nE                 Full diff:\nE                   [\nE                    ['Arad',\nE                     'Brasov',\nE                 -   'București',\nE                 ?          ^\nE                 +   'Bucuresti',\nE                 ?          ^\nE                     'Constanta',\nE                     'Cluj-Napoca',\nE                     'Craiova',\nE                     'Deva',\nE                     'Satu Mare',\nE                     'Suceava',\nE                     'Targu-Mures',\nE                     'Targoviste',\nE                     'Timisoara',\nE                     'Tulcea'],\nE                 -  ['București'],\nE                 ?          ^\nE                 +  ['Bucuresti'],\nE                 ?          ^\nE                 -  ['București'],\nE                 ?          ^\nE                 +  ['Bucuresti'],\nE                 ?          ^\nE                 -  ['București'],\nE                 ?          ^\nE                 +  ['Bucuresti'],\nE                 ?          ^\nE                 -  ['București', 'Cluj-Napoca', 'Timisoara'],\nE                 ?          ^\nE                 +  ['Bucuresti', 'Cluj-Napoca', 'Timisoara'],\nE                 ?          ^\nE                   ]\n\ntests/test_api.py:115: AssertionError"}, "steps": [{"name": "Step 1: Get job cities from the scraper", "status": "passed", "start": 1705813781760, "stop": 1705813781760}, {"name": "Step 2: Get job cities from the Peviitor API", "status": "passed", "start": 1705813781760, "stop": 1705813781760}, {"name": "Step 3: Compare job cities from scraper response against Peviitor API Response", "status": "failed", "statusDetails": {"message": "AssertionError: Peviitor is having extra jobs cities\n  \n  \nassert [['Arad', 'Br... 'Timisoara']] == [['Arad', 'Br... 'Timisoara']]\n  At index 0 diff: ['Arad', 'Brasov', 'Bucuresti', 'Constanta', 'Cluj-Napoca', 'Craiova', 'Deva', 'Satu Mare', 'Suceava', 'Targu-Mures', 'Targoviste', 'Timisoara', 'Tulcea'] != ['Arad', 'Brasov', 'București', 'Constanta', 'Cluj-Napoca', 'Craiova', 'Deva', 'Satu Mare', 'Suceava', 'Targu-Mures', 'Targoviste', 'Timisoara', 'Tulcea']\n  Full diff:\n    [\n     ['Arad',\n      'Brasov',\n  -   'București',\n  ?          ^\n  +   'Bucuresti',\n  ?          ^\n      'Constanta',\n      'Cluj-Napoca',\n      'Craiova',\n      'Deva',\n      'Satu Mare',\n      'Suceava',\n      'Targu-Mures',\n      'Targoviste',\n      'Timisoara',\n      'Tulcea'],\n  -  ['București'],\n  ?          ^\n  +  ['Bucuresti'],\n  ?          ^\n  -  ['București'],\n  ?          ^\n  +  ['Bucuresti'],\n  ?          ^\n  -  ['București'],\n  ?          ^\n  +  ['Bucuresti'],\n  ?          ^\n  -  ['București', 'Cluj-Napoca', 'Timisoara'],\n  ?          ^\n  +  ['Bucuresti', 'Cluj-Napoca', 'Timisoara'],\n  ?          ^\n    ]\n", "trace": "  File \"/home/runner/work/RaresTestHub/RaresTestHub/tests/test_api.py\", line 115, in test_scrapers_city\n    assert job_cities_scraper == job_cities_peviitor, f\"Peviitor is having extra jobs cities\\n\\n\"\n"}, "start": 1705813781760, "stop": 1705813781762}], "attachments": [{"name": "stdout", "source": "bc3c38d0-a625-422a-b7ec-e67276d9c764-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scraper_class", "value": "<class 'sites.bbcollection.bbcollectionScraper'>"}], "start": 1705813781760, "stop": 1705813781762, "uuid": "34df0079-2d74-4733-9835-54de97837f4f", "historyId": "0b70e54dd414061e0485f8c67ee24b75", "testCaseId": "75f773d8d7bc6573a9e018ca8c499fa6", "fullName": "test_api.TestScrapers#test_scrapers_city", "labels": [{"name": "tag", "value": "API"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az1041-953"}, {"name": "thread", "value": "2010-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}